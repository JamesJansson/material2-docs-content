{"version":3,"file":"paginator.mjs","sources":["../../../../../../../src/components-examples/material/paginator/paginator-configurable/paginator-configurable-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-configurable/paginator-configurable-example.html","../../../../../../../src/components-examples/material/paginator/paginator-overview/paginator-overview-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-overview/paginator-overview-example.html","../../../../../../../src/components-examples/material/paginator/paginator-harness/paginator-harness-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-harness/paginator-harness-example.html","../../../../../../../src/components-examples/material/paginator/paginator-intl/paginator-intl-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-intl/paginator-intl-example.html","../../../../../../../src/components-examples/material/paginator/index.ts","../../../../../../../src/components-examples/material/paginator/paginator_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {PageEvent} from '@angular/material/paginator';\n\n/**\n * @title Configurable paginator\n */\n@Component({\n  selector: 'paginator-configurable-example',\n  templateUrl: 'paginator-configurable-example.html',\n  styleUrls: ['paginator-configurable-example.css'],\n})\nexport class PaginatorConfigurableExample {\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>List length</mat-label>\n  <input matInput [(ngModel)]=\"length\" type=\"number\">\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Page size</mat-label>\n  <input matInput [(ngModel)]=\"pageSize\" type=\"number\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Page size options</mat-label>\n  <input matInput [ngModel]=\"pageSizeOptions\" (ngModelChange)=\"setPageSizeOptions($event)\"\n         [ngModelOptions]=\"{updateOn: 'blur'}\" placeholder=\"Ex. 10,25,50\">\n</mat-form-field>\n\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"pageEvent = $event\"\n               aria-label=\"Select page\">\n</mat-paginator>\n\n<div *ngIf=\"pageEvent\">\n  <h5>Page Change Event Properties</h5>\n  <div>List length: {{pageEvent.length}}</div>\n  <div>Page size: {{pageEvent.pageSize}}</div>\n  <div>Page index: {{pageEvent.pageIndex}}</div>\n</div>\n","import {Component} from '@angular/core';\n\n/**\n * @title Paginator\n */\n@Component({\n  selector: 'paginator-overview-example',\n  templateUrl: 'paginator-overview-example.html',\n})\nexport class PaginatorOverviewExample {}\n","<mat-paginator [length]=\"100\"\n              [pageSize]=\"10\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              aria-label=\"Select page\">\n</mat-paginator>\n","import {Component} from '@angular/core';\nimport {PageEvent} from '@angular/material/paginator';\n\n/**\n * @title Testing with MatPaginatorHarness\n */\n@Component({\n  selector: 'paginator-harness-example',\n  templateUrl: 'paginator-harness-example.html',\n})\nexport class PaginatorHarnessExample {\n  length = 500;\n  pageSize = 10;\n  pageIndex = 0;\n  pageSizeOptions = [5, 10, 25];\n  showFirstLastButtons = true;\n\n  handlePageEvent(event: PageEvent) {\n    this.length = event.length;\n    this.pageSize = event.pageSize;\n    this.pageIndex = event.pageIndex;\n  }\n}\n","<mat-paginator\n    (page)=\"handlePageEvent($event)\"\n    [length]=\"length\"\n    [pageSize]=\"pageSize\"\n    [showFirstLastButtons]=\"showFirstLastButtons\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    [pageIndex]=\"pageIndex\"\n    aria-label=\"Select page\">\n</mat-paginator>\n","import {Component, Injectable, NgModule} from '@angular/core';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {Subject} from 'rxjs';\n\n@Injectable()\nexport class MyCustomPaginatorIntl implements MatPaginatorIntl {\n  changes = new Subject<void>();\n\n  // For internationalization, the `$localize` function from\n  // the `@angular/localize` package can be used.\n  firstPageLabel = $localize`First page`;\n  itemsPerPageLabel = $localize`Items per page:`;\n  lastPageLabel = $localize`Last page`;\n\n  // You can set labels to an arbitrary string too, or dynamically compute\n  // it through other third-party internationalization libraries.\n  nextPageLabel = 'Next page';\n  previousPageLabel = 'Previous page';\n\n  getRangeLabel(page: number, pageSize: number, length: number): string {\n    if (length === 0) {\n      return $localize`Page 1 of 1`;\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return $localize`Page ${page + 1} of ${amountPages}`;\n  }\n}\n\n/**\n * @title Paginator internationalization\n */\n@Component({\n  selector: 'paginator-intl-example',\n  templateUrl: 'paginator-intl-example.html',\n})\nexport class PaginatorIntlExample {}\n\n@NgModule({\n  imports: [MatPaginatorModule],\n  declarations: [PaginatorIntlExample],\n  providers: [{provide: MatPaginatorIntl, useClass: MyCustomPaginatorIntl}],\n})\nexport class PaginatorIntlExampleModule {}\n","<mat-paginator [length]=\"200\" [pageSizeOptions]=\"[10, 50, 100]\" aria-label=\"Select page\">\n</mat-paginator>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {PaginatorConfigurableExample} from './paginator-configurable/paginator-configurable-example';\nimport {PaginatorOverviewExample} from './paginator-overview/paginator-overview-example';\nimport {PaginatorHarnessExample} from './paginator-harness/paginator-harness-example';\nimport {\n  PaginatorIntlExample,\n  PaginatorIntlExampleModule,\n} from './paginator-intl/paginator-intl-example';\n\nexport {\n  PaginatorConfigurableExample,\n  PaginatorHarnessExample,\n  PaginatorIntlExample,\n  PaginatorOverviewExample,\n};\n\nconst EXAMPLES = [\n  PaginatorConfigurableExample,\n  PaginatorHarnessExample,\n  // PaginatorIntlExample is imported through it's own example module.\n  PaginatorOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatPaginatorModule,\n    PaginatorIntlExampleModule,\n    FormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class PaginatorExamplesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}