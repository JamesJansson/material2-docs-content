{"version":3,"file":"stepper.mjs","sources":["../../../../../../../src/components-examples/cdk/stepper/cdk-custom-stepper-without-form/cdk-custom-stepper-without-form-example.ts","../../../../../../../src/components-examples/cdk/stepper/cdk-custom-stepper-without-form/cdk-custom-stepper-without-form-example.html","../../../../../../../src/components-examples/cdk/stepper/cdk-custom-stepper-without-form/example-custom-stepper.html","../../../../../../../src/components-examples/cdk/stepper/cdk-linear-stepper-with-form/cdk-linear-stepper-with-form-example.ts","../../../../../../../src/components-examples/cdk/stepper/cdk-linear-stepper-with-form/cdk-linear-stepper-with-form-example.html","../../../../../../../src/components-examples/cdk/stepper/cdk-linear-stepper-with-form/example-custom-linear-stepper.html","../../../../../../../src/components-examples/cdk/stepper/index.ts","../../../../../../../src/components-examples/cdk/stepper/stepper_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {CdkStepper} from '@angular/cdk/stepper';\n\n/** @title A custom CDK stepper without a form */\n@Component({\n  selector: 'cdk-custom-stepper-without-form-example',\n  templateUrl: './cdk-custom-stepper-without-form-example.html',\n  styleUrls: ['./cdk-custom-stepper-without-form-example.css'],\n})\nexport class CdkCustomStepperWithoutFormExample {}\n\n/** Custom CDK stepper component */\n@Component({\n  selector: 'example-custom-stepper',\n  templateUrl: './example-custom-stepper.html',\n  styleUrls: ['./example-custom-stepper.css'],\n  providers: [{provide: CdkStepper, useExisting: CustomStepper}],\n})\nexport class CustomStepper extends CdkStepper {\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<example-custom-stepper>\n  <cdk-step> <p>This is any content of \"Step 1\"</p> </cdk-step>\n  <cdk-step> <p>This is any content of \"Step 2\"</p> </cdk-step>\n</example-custom-stepper>\n","<section class=\"example-container\">\n  <header>\n    <h2>Step {{ selectedIndex + 1 }}/{{ steps.length }}</h2>\n  </header>\n\n  <div [ngTemplateOutlet]=\"selected ? selected.content : null\"></div>\n\n  <footer class=\"example-step-navigation-bar\">\n    <button class=\"example-nav-button\" cdkStepperPrevious>&larr;</button>\n    <button\n      class=\"example-step\"\n      [class.example-active]=\"selectedIndex === i\"\n      *ngFor=\"let step of steps; let i = index\"\n      (click)=\"selectStepByIndex(i)\"\n    >\n      Step {{ i + 1 }}\n    </button>\n    <button class=\"example-nav-button\" cdkStepperNext>&rarr;</button>\n  </footer>\n</section>\n","import {Component} from '@angular/core';\nimport {CdkStepper} from '@angular/cdk/stepper';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/** @title A custom CDK linear stepper with forms */\n@Component({\n  selector: 'cdk-linear-stepper-with-form-example',\n  templateUrl: './cdk-linear-stepper-with-form-example.html',\n  styleUrls: ['./cdk-linear-stepper-with-form-example.css'],\n})\nexport class CdkLinearStepperWithFormExample {\n  isLinear = true;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private readonly _formBuilder: FormBuilder) {\n    this.firstFormGroup = this._formBuilder.group({\n      firstControl: ['', Validators.required],\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondControl: ['', Validators.required],\n    });\n  }\n\n  toggleLinearity() {\n    this.isLinear = !this.isLinear;\n  }\n}\n\n/** Custom CDK linear stepper component */\n@Component({\n  selector: 'example-custom-linear-stepper',\n  templateUrl: './example-custom-linear-stepper.html',\n  styleUrls: ['./example-custom-linear-stepper.css'],\n  providers: [{provide: CdkStepper, useExisting: CustomLinearStepper}],\n})\nexport class CustomLinearStepper extends CdkStepper {\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<example-custom-linear-stepper [linear]=\"isLinear\">\n  <cdk-step [stepControl]=\"firstFormGroup\">\n    <label for=\"stepOneInput\">Step 1 input</label>\n    <form [formGroup]=\"firstFormGroup\">\n      <input placeholder=\"Input\" formControlName=\"firstControl\" id=\"stepOneInput\" required>\n    </form>\n  </cdk-step>\n  <cdk-step [stepControl]=\"secondFormGroup\">\n    <label for=\"stepTwoInput\">Step 2 input</label>\n    <form [formGroup]=\"secondFormGroup\">\n      <input placeholder=\"Input\" formControlName=\"secondControl\" id=\"stepTwoInput\" required>\n    </form>\n  </cdk-step>\n</example-custom-linear-stepper>\n<button class=\"example-toggle-linear-button\" (click)=\"toggleLinearity()\">\n  {{isLinear ? 'Disable linear mode' : 'Enable linear mode'}}\n</button>\n","<section class=\"example-container\">\n  <header>\n    <h2>Step {{selectedIndex + 1}}/{{steps.length}}</h2>\n  </header>\n\n  <div [ngTemplateOutlet]=\"selected ? selected.content : null\"></div>\n\n  <footer class=\"example-step-navigation-bar\">\n    <button class=\"example-nav-button\" cdkStepperPrevious>&larr;</button>\n    <button\n      class=\"example-step\"\n      [class.example-active]=\"selectedIndex === i\"\n      *ngFor=\"let step of steps; let i = index\"\n      (click)=\"selectStepByIndex(i)\"\n    >\n      Step {{ i + 1 }}\n    </button>\n    <button class=\"example-nav-button\" cdkStepperNext>&rarr;</button>\n  </footer>\n</section>\n","import {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n  CdkCustomStepperWithoutFormExample,\n  CustomStepper,\n} from './cdk-custom-stepper-without-form/cdk-custom-stepper-without-form-example';\nimport {\n  CdkLinearStepperWithFormExample,\n  CustomLinearStepper,\n} from './cdk-linear-stepper-with-form/cdk-linear-stepper-with-form-example';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nexport {\n  CdkCustomStepperWithoutFormExample,\n  CustomStepper,\n  CdkLinearStepperWithFormExample,\n  CustomLinearStepper,\n};\n\nconst EXAMPLES = [\n  CdkCustomStepperWithoutFormExample,\n  CustomStepper,\n  CdkLinearStepperWithFormExample,\n  CustomLinearStepper,\n];\n\n@NgModule({\n  imports: [CdkStepperModule, CommonModule, ReactiveFormsModule],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CdkStepperExamplesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;AAGA;MAMa,kCAAkC;;+HAAlC,kCAAkC;mHAAlC,kCAAkC,+ECT/C,6LAIA,wEDca,aAAa;2FATb,kCAAkC;kBAL9C,SAAS;+BACE,yCAAyC;;AAMrD;MAOa,aAAc,SAAQ,UAAU;IAC3C,iBAAiB,CAAC,KAAa;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;;0GAHU,aAAa;8FAAb,aAAa,iDAFb,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAC,CAAC,iDEhBhE,wpBAoBA;2FFFa,aAAa;kBANzB,SAAS;+BACE,wBAAwB,aAGvB,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,eAAe,EAAC,CAAC;;;AGZhE;MAMa,+BAA+B;IAK1C,YAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAJtD,aAAQ,GAAG,IAAI,CAAC;QAKd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,YAAY,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC7C,aAAa,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;KACJ;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;KAChC;;4HAhBU,+BAA+B;gHAA/B,+BAA+B,4ECV5C,qxBAiBA,kIDmBa,mBAAmB;2FA1BnB,+BAA+B;kBAL3C,SAAS;+BACE,sCAAsC;;AAuBlD;MAOa,mBAAoB,SAAQ,UAAU;IACjD,iBAAiB,CAAC,KAAa;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;;gHAHU,mBAAmB;oGAAnB,mBAAmB,wDAFnB,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,mBAAmB,EAAC,CAAC,iDElCtE,opBAoBA;2FFgBa,mBAAmB;kBAN/B,SAAS;+BACE,+BAA+B,aAG9B,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,qBAAqB,EAAC,CAAC;;;AGdtE,MAAM,QAAQ,GAAG;IACf,kCAAkC;IAClC,aAAa;IACb,+BAA+B;IAC/B,mBAAmB;CACpB,CAAC;MAQW,wBAAwB;;qHAAxB,wBAAwB;sHAAxB,wBAAwB,iBAZnC,kCAAkC;QAClC,aAAa;QACb,+BAA+B;QAC/B,mBAAmB,aAIT,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,aAP7D,kCAAkC;QAClC,aAAa;QACb,+BAA+B;QAC/B,mBAAmB;sHASR,wBAAwB,YAL1B,CAAC,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,CAAC;2FAKnD,wBAAwB;kBANpC,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,CAAC;oBAC9D,YAAY,EAAE,QAAQ;oBACtB,OAAO,EAAE,QAAQ;oBACjB,eAAe,EAAE,QAAQ;iBAC1B;;;AChCD;;;;;;"}