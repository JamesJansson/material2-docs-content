{"version":3,"file":"layout.mjs","sources":["../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.ts","../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.html","../../../../../../../src/components-examples/cdk/layout/index.ts","../../../../../../../src/components-examples/cdk/layout/layout_public_index.ts"],"sourcesContent":["import {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Component, OnDestroy} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** @title Respond to viewport changes with BreakpointObserver */\n@Component({\n  selector: 'breakpoint-observer-overview-example',\n  templateUrl: 'breakpoint-observer-overview-example.html',\n  styleUrls: ['breakpoint-observer-overview-example.css']\n})\nexport class BreakpointObserverOverviewExample implements OnDestroy {\n  destroyed = new Subject<void>();\n  currentScreenSize: string;\n\n  // Create a map to display breakpoint names for demonstration purposes.\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'XSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n    [Breakpoints.XLarge, 'XLarge'],\n  ]);\n\n  constructor(breakpointObserver: BreakpointObserver) {\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge,\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\n        for (const query of Object.keys(result.breakpoints)) {\n          if (result.breakpoints[query]) {\n            this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\n          }\n        }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n}\n","<p>\n  Resize your browser window to see the current screen size change.\n</p>\n<p>\n  The current screen size is <strong>{{currentScreenSize}}</strong>\n</p>\n","import {LayoutModule} from '@angular/cdk/layout';\nimport {NgModule} from '@angular/core';\nimport {\n  BreakpointObserverOverviewExample,\n} from './breakpoint-observer-overview/breakpoint-observer-overview-example';\n\nexport {BreakpointObserverOverviewExample};\n\nconst EXAMPLES = [\n  BreakpointObserverOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    LayoutModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CdkLayoutExamplesModule {\n}\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAKA;MAMa,iCAAiC;IAa5C,YAAY,kBAAsC;QAZlD,cAAS,GAAG,IAAI,OAAO,EAAQ,CAAC;;QAIhC,mBAAc,GAAG,IAAI,GAAG,CAAC;YACvB,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;YAC9B,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;YAC5B,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;YAC9B,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;YAC5B,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;SAC/B,CAAC,CAAC;QAGD,kBAAkB,CAAC,OAAO,CAAC;YACzB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,MAAM;SACnB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;YAC/C,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBACnD,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;oBAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;iBACtE;aACF;SACJ,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;;sIAhCU,iCAAiC;0HAAjC,iCAAiC,4ECX9C,kKAMA;mGDKa,iCAAiC;kBAL7C,SAAS;+BACE,sCAAsC;;;AEClD,MAAM,QAAQ,GAAG;IACf,iCAAiC;CAClC,CAAC;MAUW,uBAAuB;;4HAAvB,uBAAuB;6HAAvB,uBAAuB,iBAXlC,iCAAiC,aAK/B,YAAY,aALd,iCAAiC;6HAWtB,uBAAuB,YAPzB;YACP,YAAY;SACb;mGAKU,uBAAuB;kBARnC,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE,QAAQ;oBACtB,OAAO,EAAE,QAAQ;oBACjB,eAAe,EAAE,QAAQ;iBAC1B;;;ACnBD;;;;;;"}