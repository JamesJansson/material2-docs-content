/**
 ******************************************************************************
 * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.
 ******************************************************************************
 */
export const EXAMPLE_COMPONENTS = {
    "cdk-menu-context": {
        "packagePath": "cdk-experimental/menu/cdk-menu-context",
        "title": "Context menu.",
        "componentName": "CdkMenuContextExample",
        "files": [
            "cdk-menu-context-example.ts",
            "cdk-menu-context-example.html",
            "cdk-menu-context-example.css"
        ],
        "selector": "cdk-menu-context-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-context-example.ts",
        "module": {
            "name": "CdkMenuExamplesModule",
            "importSpecifier": "cdk-experimental/menu"
        }
    },
    "cdk-menu-inline": {
        "packagePath": "cdk-experimental/menu/cdk-menu-inline",
        "title": "Gmail inline menu.",
        "componentName": "CdkMenuInlineExample",
        "files": [
            "cdk-menu-inline-example.ts",
            "cdk-menu-inline-example.html",
            "cdk-menu-inline-example.css"
        ],
        "selector": "cdk-menu-inline-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-inline-example.ts",
        "module": {
            "name": "CdkMenuExamplesModule",
            "importSpecifier": "cdk-experimental/menu"
        }
    },
    "cdk-menu-menubar": {
        "packagePath": "cdk-experimental/menu/cdk-menu-menubar",
        "title": "Google Docs Menu Bar.",
        "componentName": "CdkMenuMenubarExample",
        "files": [
            "cdk-menu-menubar-example.ts",
            "cdk-menu-menubar-example.html",
            "cdk-menu-menubar-example.css"
        ],
        "selector": "cdk-menu-menubar-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-menubar-example.ts",
        "module": {
            "name": "CdkMenuExamplesModule",
            "importSpecifier": "cdk-experimental/menu"
        }
    },
    "cdk-menu-standalone-menu": {
        "packagePath": "cdk-experimental/menu/cdk-menu-standalone-menu",
        "title": "Menu with Standalone Trigger.",
        "componentName": "CdkMenuStandaloneMenuExample",
        "files": [
            "cdk-menu-standalone-menu-example.ts",
            "cdk-menu-standalone-menu-example.html",
            "cdk-menu-standalone-menu-example.css"
        ],
        "selector": "cdk-menu-standalone-menu-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-standalone-menu-example.ts",
        "module": {
            "name": "CdkMenuExamplesModule",
            "importSpecifier": "cdk-experimental/menu"
        }
    },
    "cdk-menu-standalone-stateful-menu": {
        "packagePath": "cdk-experimental/menu/cdk-menu-standalone-stateful-menu",
        "title": "Stateful Menu with Standalone Trigger.",
        "componentName": "CdkMenuStandaloneStatefulMenuExample",
        "files": [
            "cdk-menu-standalone-stateful-menu-example.ts",
            "cdk-menu-standalone-stateful-menu-example.html",
            "cdk-menu-standalone-stateful-menu-example.css"
        ],
        "selector": "cdk-menu-standalone-stateful-menu-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-standalone-stateful-menu-example.ts",
        "module": {
            "name": "CdkMenuExamplesModule",
            "importSpecifier": "cdk-experimental/menu"
        }
    },
    "cdk-popover-edit-cdk-table-flex": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cdk-table-flex",
        "title": "CDK Popover Edit on a flex cdk-table.",
        "componentName": "CdkPopoverEditCdkTableFlexExample",
        "files": [
            "cdk-popover-edit-cdk-table-flex-example.ts",
            "cdk-popover-edit-cdk-table-flex-example.html",
            "cdk-popover-edit-cdk-table-flex-example.css"
        ],
        "selector": "cdk-popover-edit-cdk-table-flex-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cdk-table-flex-example.ts",
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-cdk-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cdk-table",
        "title": "CDK Popover Edit on a CDK data-table",
        "componentName": "CdkPopoverEditCdkTableExample",
        "files": [
            "cdk-popover-edit-cdk-table-example.ts",
            "cdk-popover-edit-cdk-table-example.html",
            "cdk-popover-edit-cdk-table-example.css"
        ],
        "selector": "cdk-popover-edit-cdk-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cdk-table-example.ts",
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-cell-span-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cell-span-vanilla-table",
        "title": "CDK Popover Edit spanning multiple columns on an HTML data-table",
        "componentName": "CdkPopoverEditCellSpanVanillaTableExample",
        "files": [
            "cdk-popover-edit-cell-span-vanilla-table-example.ts",
            "cdk-popover-edit-cell-span-vanilla-table-example.html",
            "cdk-popover-edit-cell-span-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-cell-span-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cell-span-vanilla-table-example.ts",
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-tab-out-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-tab-out-vanilla-table",
        "title": "CDK Popover Edit with spreadsheet-like configuration on an HTML data-table",
        "componentName": "CdkPopoverEditTabOutVanillaTableExample",
        "files": [
            "cdk-popover-edit-tab-out-vanilla-table-example.ts",
            "cdk-popover-edit-tab-out-vanilla-table-example.html",
            "cdk-popover-edit-tab-out-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-tab-out-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-tab-out-vanilla-table-example.ts",
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-vanilla-table",
        "title": "CDK Popover Edit on an HTML data-table",
        "componentName": "CdkPopoverEditVanillaTableExample",
        "files": [
            "cdk-popover-edit-vanilla-table-example.ts",
            "cdk-popover-edit-vanilla-table-example.html",
            "cdk-popover-edit-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-vanilla-table-example.ts",
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "cdk-experimental/popover-edit"
        }
    },
    "cdk-selection-column": {
        "packagePath": "cdk-experimental/selection/cdk-selection-column",
        "title": "CDK Selection Column on a CDK table.",
        "componentName": "CdkSelectionColumnExample",
        "files": [
            "cdk-selection-column-example.ts",
            "cdk-selection-column-example.html",
            "cdk-selection-column-example.css"
        ],
        "selector": "cdk-selection-column-example",
        "additionalComponents": [],
        "primaryFile": "cdk-selection-column-example.ts",
        "module": {
            "name": "CdkSelectionExamplesModule",
            "importSpecifier": "cdk-experimental/selection"
        }
    },
    "cdk-selection-list": {
        "packagePath": "cdk-experimental/selection/cdk-selection-list",
        "title": "CDK Selection on a simple list.",
        "componentName": "CdkSelectionListExample",
        "files": [
            "cdk-selection-list-example.ts",
            "cdk-selection-list-example.html"
        ],
        "selector": "cdk-selection-list-example",
        "additionalComponents": [],
        "primaryFile": "cdk-selection-list-example.ts",
        "module": {
            "name": "CdkSelectionExamplesModule",
            "importSpecifier": "cdk-experimental/selection"
        }
    },
    "focus-monitor-directives": {
        "packagePath": "cdk/a11y/focus-monitor-directives",
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorDirectivesExample",
        "files": [
            "focus-monitor-directives-example.ts",
            "focus-monitor-directives-example.html",
            "focus-monitor-directives-example.css"
        ],
        "selector": "focus-monitor-directives-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-directives-example.ts",
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "cdk/a11y"
        }
    },
    "focus-monitor-focus-via": {
        "packagePath": "cdk/a11y/focus-monitor-focus-via",
        "title": "Focusing with a specific FocusOrigin",
        "componentName": "FocusMonitorFocusViaExample",
        "files": [
            "focus-monitor-focus-via-example.ts",
            "focus-monitor-focus-via-example.html",
            "focus-monitor-focus-via-example.css"
        ],
        "selector": "focus-monitor-focus-via-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-focus-via-example.ts",
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "cdk/a11y"
        }
    },
    "focus-monitor-overview": {
        "packagePath": "cdk/a11y/focus-monitor-overview",
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorOverviewExample",
        "files": [
            "focus-monitor-overview-example.ts",
            "focus-monitor-overview-example.html",
            "focus-monitor-overview-example.css"
        ],
        "selector": "focus-monitor-overview-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-overview-example.ts",
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "cdk/a11y"
        }
    },
    "cdk-accordion-overview": {
        "packagePath": "cdk/accordion/cdk-accordion-overview",
        "title": "Accordion overview",
        "componentName": "CdkAccordionOverviewExample",
        "files": [
            "cdk-accordion-overview-example.ts",
            "cdk-accordion-overview-example.html",
            "cdk-accordion-overview-example.css"
        ],
        "selector": "cdk-accordion-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-accordion-overview-example.ts",
        "module": {
            "name": "CdkAccordionExamplesModule",
            "importSpecifier": "cdk/accordion"
        }
    },
    "cdk-clipboard-overview": {
        "packagePath": "cdk/clipboard/cdk-clipboard-overview",
        "title": "Clipboard overview",
        "componentName": "CdkClipboardOverviewExample",
        "files": [
            "cdk-clipboard-overview-example.ts",
            "cdk-clipboard-overview-example.html",
            "cdk-clipboard-overview-example.css"
        ],
        "selector": "cdk-clipboard-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-clipboard-overview-example.ts",
        "module": {
            "name": "CdkClipboardExamplesModule",
            "importSpecifier": "cdk/clipboard"
        }
    },
    "cdk-drag-drop-axis-lock": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-axis-lock",
        "title": "Drag&Drop position locking",
        "componentName": "CdkDragDropAxisLockExample",
        "files": [
            "cdk-drag-drop-axis-lock-example.ts",
            "cdk-drag-drop-axis-lock-example.html",
            "cdk-drag-drop-axis-lock-example.css"
        ],
        "selector": "cdk-drag-drop-axis-lock-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-axis-lock-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-boundary": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-boundary",
        "title": "Drag&Drop boundary",
        "componentName": "CdkDragDropBoundaryExample",
        "files": [
            "cdk-drag-drop-boundary-example.ts",
            "cdk-drag-drop-boundary-example.html",
            "cdk-drag-drop-boundary-example.css"
        ],
        "selector": "cdk-drag-drop-boundary-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-boundary-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-connected-sorting-group": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-connected-sorting-group",
        "title": "Drag&Drop connected sorting group",
        "componentName": "CdkDragDropConnectedSortingGroupExample",
        "files": [
            "cdk-drag-drop-connected-sorting-group-example.ts",
            "cdk-drag-drop-connected-sorting-group-example.html",
            "cdk-drag-drop-connected-sorting-group-example.css"
        ],
        "selector": "cdk-drag-drop-connected-sorting-group-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-connected-sorting-group-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-connected-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-connected-sorting",
        "title": "Drag&Drop connected sorting",
        "componentName": "CdkDragDropConnectedSortingExample",
        "files": [
            "cdk-drag-drop-connected-sorting-example.ts",
            "cdk-drag-drop-connected-sorting-example.html",
            "cdk-drag-drop-connected-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-connected-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-connected-sorting-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-custom-placeholder": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-custom-placeholder",
        "title": "Drag&Drop custom placeholder",
        "componentName": "CdkDragDropCustomPlaceholderExample",
        "files": [
            "cdk-drag-drop-custom-placeholder-example.ts",
            "cdk-drag-drop-custom-placeholder-example.html",
            "cdk-drag-drop-custom-placeholder-example.css"
        ],
        "selector": "cdk-drag-drop-custom-placeholder-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-custom-placeholder-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-custom-preview": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-custom-preview",
        "title": "Drag&Drop custom preview",
        "componentName": "CdkDragDropCustomPreviewExample",
        "files": [
            "cdk-drag-drop-custom-preview-example.ts",
            "cdk-drag-drop-custom-preview-example.html",
            "cdk-drag-drop-custom-preview-example.css"
        ],
        "selector": "cdk-drag-drop-custom-preview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-custom-preview-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-delay": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-delay",
        "title": "Delayed dragging",
        "componentName": "CdkDragDropDelayExample",
        "files": [
            "cdk-drag-drop-delay-example.ts",
            "cdk-drag-drop-delay-example.html",
            "cdk-drag-drop-delay-example.css"
        ],
        "selector": "cdk-drag-drop-delay-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-delay-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-disabled-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-disabled-sorting",
        "title": "Drag&Drop disabled sorting",
        "componentName": "CdkDragDropDisabledSortingExample",
        "files": [
            "cdk-drag-drop-disabled-sorting-example.ts",
            "cdk-drag-drop-disabled-sorting-example.html",
            "cdk-drag-drop-disabled-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-disabled-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-disabled-sorting-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-disabled": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-disabled",
        "title": "Drag&Drop disabled",
        "componentName": "CdkDragDropDisabledExample",
        "files": [
            "cdk-drag-drop-disabled-example.ts",
            "cdk-drag-drop-disabled-example.html",
            "cdk-drag-drop-disabled-example.css"
        ],
        "selector": "cdk-drag-drop-disabled-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-disabled-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-enter-predicate": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-enter-predicate",
        "title": "Drag&Drop enter predicate",
        "componentName": "CdkDragDropEnterPredicateExample",
        "files": [
            "cdk-drag-drop-enter-predicate-example.ts",
            "cdk-drag-drop-enter-predicate-example.html",
            "cdk-drag-drop-enter-predicate-example.css"
        ],
        "selector": "cdk-drag-drop-enter-predicate-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-enter-predicate-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-free-drag-position": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-free-drag-position",
        "title": "Programmatically setting the free drag position",
        "componentName": "CdkDragDropFreeDragPositionExample",
        "files": [
            "cdk-drag-drop-free-drag-position-example.ts",
            "cdk-drag-drop-free-drag-position-example.html",
            "cdk-drag-drop-free-drag-position-example.css"
        ],
        "selector": "cdk-drag-drop-free-drag-position-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-free-drag-position-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-handle": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-handle",
        "title": "Drag&Drop with a handle",
        "componentName": "CdkDragDropHandleExample",
        "files": [
            "cdk-drag-drop-handle-example.ts",
            "cdk-drag-drop-handle-example.html",
            "cdk-drag-drop-handle-example.css"
        ],
        "selector": "cdk-drag-drop-handle-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-handle-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-horizontal-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-horizontal-sorting",
        "title": "Drag&Drop horizontal sorting",
        "componentName": "CdkDragDropHorizontalSortingExample",
        "files": [
            "cdk-drag-drop-horizontal-sorting-example.ts",
            "cdk-drag-drop-horizontal-sorting-example.html",
            "cdk-drag-drop-horizontal-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-horizontal-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-horizontal-sorting-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-overview": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-overview",
        "title": "Basic Drag&Drop",
        "componentName": "CdkDragDropOverviewExample",
        "files": [
            "cdk-drag-drop-overview-example.ts",
            "cdk-drag-drop-overview-example.html",
            "cdk-drag-drop-overview-example.css"
        ],
        "selector": "cdk-drag-drop-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-overview-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-root-element": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-root-element",
        "title": "Drag&Drop with alternate root element",
        "componentName": "CdkDragDropRootElementExample",
        "files": [
            "cdk-drag-drop-root-element-example.ts",
            "cdk-drag-drop-root-element-example.html",
            "cdk-drag-drop-root-element-example.css"
        ],
        "selector": "cdk-drag-drop-root-element-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-root-element-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-sort-predicate": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-sort-predicate",
        "title": "Drag&Drop sort predicate",
        "componentName": "CdkDragDropSortPredicateExample",
        "files": [
            "cdk-drag-drop-sort-predicate-example.ts",
            "cdk-drag-drop-sort-predicate-example.html",
            "cdk-drag-drop-sort-predicate-example.css"
        ],
        "selector": "cdk-drag-drop-sort-predicate-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-sort-predicate-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "cdk-drag-drop-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-sorting",
        "title": "Drag&Drop sorting",
        "componentName": "CdkDragDropSortingExample",
        "files": [
            "cdk-drag-drop-sorting-example.ts",
            "cdk-drag-drop-sorting-example.html",
            "cdk-drag-drop-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-sorting-example.ts",
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "cdk/drag-drop"
        }
    },
    "breakpoint-observer-overview": {
        "packagePath": "cdk/layout/breakpoint-observer-overview",
        "title": "Respond to viewport changes with BreakpointObserver",
        "componentName": "BreakpointObserverOverviewExample",
        "files": [
            "breakpoint-observer-overview-example.ts",
            "breakpoint-observer-overview-example.html",
            "breakpoint-observer-overview-example.css"
        ],
        "selector": "breakpoint-observer-overview-example",
        "additionalComponents": [],
        "primaryFile": "breakpoint-observer-overview-example.ts",
        "module": {
            "name": "CdkLayoutExamplesModule",
            "importSpecifier": "cdk/layout"
        }
    },
    "cdk-overlay-basic": {
        "packagePath": "cdk/overlay/cdk-overlay-basic",
        "title": "Overlay basic example",
        "componentName": "CdkOverlayBasicExample",
        "files": [
            "cdk-overlay-basic-example.ts",
            "./cdk-overlay-basic-example.html",
            "./cdk-overlay-basic-example.css"
        ],
        "selector": "cdk-overlay-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-overlay-basic-example.ts",
        "module": {
            "name": "CdkOverlayExamplesModule",
            "importSpecifier": "cdk/overlay"
        }
    },
    "cdk-platform-overview": {
        "packagePath": "cdk/platform/cdk-platform-overview",
        "title": "Platform overview",
        "componentName": "CdkPlatformOverviewExample",
        "files": [
            "cdk-platform-overview-example.ts",
            "cdk-platform-overview-example.html"
        ],
        "selector": "cdk-platform-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-platform-overview-example.ts",
        "module": {
            "name": "CdkPlatformExamplesModule",
            "importSpecifier": "cdk/platform"
        }
    },
    "cdk-portal-overview": {
        "packagePath": "cdk/portal/cdk-portal-overview",
        "title": "Portal overview",
        "componentName": "CdkPortalOverviewExample",
        "files": [
            "cdk-portal-overview-example.ts",
            "cdk-portal-overview-example.html",
            "cdk-portal-overview-example.css"
        ],
        "selector": "cdk-portal-overview-example",
        "additionalComponents": [
            "ComponentPortalExample"
        ],
        "primaryFile": "cdk-portal-overview-example.ts",
        "module": {
            "name": "CdkPortalExamplesModule",
            "importSpecifier": "cdk/portal"
        }
    },
    "cdk-virtual-scroll-append-only": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-append-only",
        "title": "Virtual scroll with view recycling disabled.",
        "componentName": "CdkVirtualScrollAppendOnlyExample",
        "files": [
            "cdk-virtual-scroll-append-only-example.ts",
            "cdk-virtual-scroll-append-only-example.html",
            "cdk-virtual-scroll-append-only-example.css"
        ],
        "selector": "cdk-virtual-scroll-append-only-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-append-only-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-context": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-context",
        "title": "Virtual scroll context variables",
        "componentName": "CdkVirtualScrollContextExample",
        "files": [
            "cdk-virtual-scroll-context-example.ts",
            "cdk-virtual-scroll-context-example.html",
            "cdk-virtual-scroll-context-example.css"
        ],
        "selector": "cdk-virtual-scroll-context-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-context-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-custom-strategy": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-custom-strategy",
        "title": "Virtual scroll with a custom strategy",
        "componentName": "CdkVirtualScrollCustomStrategyExample",
        "files": [
            "cdk-virtual-scroll-custom-strategy-example.ts",
            "cdk-virtual-scroll-custom-strategy-example.html",
            "cdk-virtual-scroll-custom-strategy-example.css"
        ],
        "selector": "cdk-virtual-scroll-custom-strategy-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-custom-strategy-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-data-source": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-data-source",
        "title": "Virtual scroll with a custom data source",
        "componentName": "CdkVirtualScrollDataSourceExample",
        "files": [
            "cdk-virtual-scroll-data-source-example.ts",
            "cdk-virtual-scroll-data-source-example.html",
            "cdk-virtual-scroll-data-source-example.css"
        ],
        "selector": "cdk-virtual-scroll-data-source-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-data-source-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-dl": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-dl",
        "title": "Virtual scrolling `<dl>`",
        "componentName": "CdkVirtualScrollDlExample",
        "files": [
            "cdk-virtual-scroll-dl-example.ts",
            "cdk-virtual-scroll-dl-example.html",
            "cdk-virtual-scroll-dl-example.css"
        ],
        "selector": "cdk-virtual-scroll-dl-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-dl-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-fixed-buffer": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-fixed-buffer",
        "title": "Fixed size virtual scroll with custom buffer parameters",
        "componentName": "CdkVirtualScrollFixedBufferExample",
        "files": [
            "cdk-virtual-scroll-fixed-buffer-example.ts",
            "cdk-virtual-scroll-fixed-buffer-example.html",
            "cdk-virtual-scroll-fixed-buffer-example.css"
        ],
        "selector": "cdk-virtual-scroll-fixed-buffer-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-fixed-buffer-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-horizontal": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-horizontal",
        "title": "Horizontal virtual scroll",
        "componentName": "CdkVirtualScrollHorizontalExample",
        "files": [
            "cdk-virtual-scroll-horizontal-example.ts",
            "cdk-virtual-scroll-horizontal-example.html",
            "cdk-virtual-scroll-horizontal-example.css"
        ],
        "selector": "cdk-virtual-scroll-horizontal-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-horizontal-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-overview": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-overview",
        "title": "Basic virtual scroll",
        "componentName": "CdkVirtualScrollOverviewExample",
        "files": [
            "cdk-virtual-scroll-overview-example.ts",
            "cdk-virtual-scroll-overview-example.html",
            "cdk-virtual-scroll-overview-example.css"
        ],
        "selector": "cdk-virtual-scroll-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-overview-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-template-cache": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-template-cache",
        "title": "Virtual scroll with no template caching",
        "componentName": "CdkVirtualScrollTemplateCacheExample",
        "files": [
            "cdk-virtual-scroll-template-cache-example.ts",
            "cdk-virtual-scroll-template-cache-example.html",
            "cdk-virtual-scroll-template-cache-example.css"
        ],
        "selector": "cdk-virtual-scroll-template-cache-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-template-cache-example.ts",
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "cdk/scrolling"
        }
    },
    "cdk-custom-stepper-without-form": {
        "packagePath": "cdk/stepper/cdk-custom-stepper-without-form",
        "title": "A custom CDK stepper without a form",
        "componentName": "CdkCustomStepperWithoutFormExample",
        "files": [
            "cdk-custom-stepper-without-form-example.ts",
            "./cdk-custom-stepper-without-form-example.html",
            "./cdk-custom-stepper-without-form-example.css",
            "./example-custom-stepper.html",
            "./example-custom-stepper.css"
        ],
        "selector": "cdk-custom-stepper-without-form-example",
        "additionalComponents": [
            "CustomStepper"
        ],
        "primaryFile": "cdk-custom-stepper-without-form-example.ts",
        "module": {
            "name": "CdkStepperExamplesModule",
            "importSpecifier": "cdk/stepper"
        }
    },
    "cdk-linear-stepper-with-form": {
        "packagePath": "cdk/stepper/cdk-linear-stepper-with-form",
        "title": "A custom CDK linear stepper with forms",
        "componentName": "CdkLinearStepperWithFormExample",
        "files": [
            "cdk-linear-stepper-with-form-example.ts",
            "./cdk-linear-stepper-with-form-example.html",
            "./cdk-linear-stepper-with-form-example.css",
            "./example-custom-linear-stepper.html",
            "./example-custom-linear-stepper.css"
        ],
        "selector": "cdk-linear-stepper-with-form-example",
        "additionalComponents": [
            "CustomLinearStepper"
        ],
        "primaryFile": "cdk-linear-stepper-with-form-example.ts",
        "module": {
            "name": "CdkStepperExamplesModule",
            "importSpecifier": "cdk/stepper"
        }
    },
    "cdk-table-basic": {
        "packagePath": "cdk/table/cdk-table-basic",
        "title": "Basic CDK data-table",
        "componentName": "CdkTableBasicExample",
        "files": [
            "cdk-table-basic-example.ts",
            "cdk-table-basic-example.html",
            "cdk-table-basic-example.css"
        ],
        "selector": "cdk-table-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-basic-example.ts",
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "cdk/table"
        }
    },
    "cdk-table-fixed-layout": {
        "packagePath": "cdk/table/cdk-table-fixed-layout",
        "title": "CDK table with a fixed layout.",
        "componentName": "CdkTableFixedLayoutExample",
        "files": [
            "cdk-table-fixed-layout-example.ts",
            "cdk-table-fixed-layout-example.html",
            "cdk-table-fixed-layout-example.css"
        ],
        "selector": "cdk-table-fixed-layout-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-fixed-layout-example.ts",
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "cdk/table"
        }
    },
    "cdk-table-flex-basic": {
        "packagePath": "cdk/table/cdk-table-flex-basic",
        "title": "Basic use of `<cdk-table>` (uses display flex)",
        "componentName": "CdkTableFlexBasicExample",
        "files": [
            "cdk-table-flex-basic-example.ts",
            "cdk-table-flex-basic-example.html",
            "cdk-table-flex-basic-example.css"
        ],
        "selector": "cdk-table-flex-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-flex-basic-example.ts",
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "cdk/table"
        }
    },
    "cdk-table-recycle-rows": {
        "packagePath": "cdk/table/cdk-table-recycle-rows",
        "title": "Table that uses the recycle view repeater strategy.",
        "componentName": "CdkTableRecycleRowsExample",
        "files": [
            "cdk-table-recycle-rows-example.ts",
            "cdk-table-recycle-rows-example.html",
            "cdk-table-recycle-rows-example.css"
        ],
        "selector": "cdk-table-recycle-rows-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-recycle-rows-example.ts",
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "cdk/table"
        }
    },
    "text-field-autofill-directive": {
        "packagePath": "cdk/text-field/text-field-autofill-directive",
        "title": "Monitoring autofill state with cdkAutofill",
        "componentName": "TextFieldAutofillDirectiveExample",
        "files": [
            "text-field-autofill-directive-example.ts",
            "./text-field-autofill-directive-example.html",
            "./text-field-autofill-directive-example.css"
        ],
        "selector": "text-field-autofill-directive-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autofill-directive-example.ts",
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "cdk/text-field"
        }
    },
    "text-field-autofill-monitor": {
        "packagePath": "cdk/text-field/text-field-autofill-monitor",
        "title": "Monitoring autofill state with AutofillMonitor",
        "componentName": "TextFieldAutofillMonitorExample",
        "files": [
            "text-field-autofill-monitor-example.ts",
            "./text-field-autofill-monitor-example.html",
            "./text-field-autofill-monitor-example.css"
        ],
        "selector": "text-field-autofill-monitor-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autofill-monitor-example.ts",
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "cdk/text-field"
        }
    },
    "text-field-autosize-textarea": {
        "packagePath": "cdk/text-field/text-field-autosize-textarea",
        "title": "Auto-resizing textarea",
        "componentName": "TextFieldAutosizeTextareaExample",
        "files": [
            "text-field-autosize-textarea-example.ts",
            "./text-field-autosize-textarea-example.html",
            "./text-field-autosize-textarea-example.css"
        ],
        "selector": "text-field-autosize-textarea-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autosize-textarea-example.ts",
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "cdk/text-field"
        }
    },
    "cdk-tree-flat": {
        "packagePath": "cdk/tree/cdk-tree-flat",
        "title": "Tree with flat nodes",
        "componentName": "CdkTreeFlatExample",
        "files": [
            "cdk-tree-flat-example.ts",
            "cdk-tree-flat-example.html",
            "cdk-tree-flat-example.css"
        ],
        "selector": "cdk-tree-flat-example",
        "additionalComponents": [],
        "primaryFile": "cdk-tree-flat-example.ts",
        "module": {
            "name": "CdkTreeExamplesModule",
            "importSpecifier": "cdk/tree"
        }
    },
    "cdk-tree-nested": {
        "packagePath": "cdk/tree/cdk-tree-nested",
        "title": "Tree with nested nodes",
        "componentName": "CdkTreeNestedExample",
        "files": [
            "cdk-tree-nested-example.ts",
            "cdk-tree-nested-example.html",
            "cdk-tree-nested-example.css"
        ],
        "selector": "cdk-tree-nested-example",
        "additionalComponents": [],
        "primaryFile": "cdk-tree-nested-example.ts",
        "module": {
            "name": "CdkTreeExamplesModule",
            "importSpecifier": "cdk/tree"
        }
    },
    "default-enabled-column-resize-flex": {
        "packagePath": "material-experimental/column-resize/default-enabled-column-resize-flex",
        "title": "Default-enabled column resize with a flex-based mat-table.",
        "componentName": "DefaultEnabledColumnResizeFlexExample",
        "files": [
            "default-enabled-column-resize-flex-example.ts",
            "default-enabled-column-resize-flex-example.html",
            "default-enabled-column-resize-flex-example.css"
        ],
        "selector": "default-enabled-column-resize-flex-example",
        "additionalComponents": [],
        "primaryFile": "default-enabled-column-resize-flex-example.ts",
        "module": {
            "name": "ColumnResizeExamplesModule",
            "importSpecifier": "material-experimental/column-resize"
        }
    },
    "default-enabled-column-resize": {
        "packagePath": "material-experimental/column-resize/default-enabled-column-resize",
        "title": "Default-enabled column resize with a table-based mat-table.",
        "componentName": "DefaultEnabledColumnResizeExample",
        "files": [
            "default-enabled-column-resize-example.ts",
            "default-enabled-column-resize-example.html",
            "default-enabled-column-resize-example.css"
        ],
        "selector": "default-enabled-column-resize-example",
        "additionalComponents": [],
        "primaryFile": "default-enabled-column-resize-example.ts",
        "module": {
            "name": "ColumnResizeExamplesModule",
            "importSpecifier": "material-experimental/column-resize"
        }
    },
    "opt-in-column-resize": {
        "packagePath": "material-experimental/column-resize/opt-in-column-resize",
        "title": "Opt-in column resize with a table-based mat-table.",
        "componentName": "OptInColumnResizeExample",
        "files": [
            "opt-in-column-resize-example.ts",
            "opt-in-column-resize-example.html",
            "opt-in-column-resize-example.css"
        ],
        "selector": "opt-in-column-resize-example",
        "additionalComponents": [],
        "primaryFile": "opt-in-column-resize-example.ts",
        "module": {
            "name": "ColumnResizeExamplesModule",
            "importSpecifier": "material-experimental/column-resize"
        }
    },
    "mdc-card-fancy": {
        "packagePath": "material-experimental/mdc-card/mdc-card-fancy",
        "title": "Card with multiple sections",
        "componentName": "MdcCardFancyExample",
        "files": [
            "mdc-card-fancy-example.ts",
            "mdc-card-fancy-example.html",
            "mdc-card-fancy-example.css"
        ],
        "selector": "mdc-card-fancy-example",
        "additionalComponents": [],
        "primaryFile": "mdc-card-fancy-example.ts",
        "module": {
            "name": "MdcCardExamplesModule",
            "importSpecifier": "material-experimental/mdc-card"
        }
    },
    "mdc-form-field-custom-control": {
        "packagePath": "material-experimental/mdc-form-field/mdc-form-field-custom-control",
        "title": "Form field with custom telephone number input control.",
        "componentName": "MdcFormFieldCustomControlExample",
        "files": [
            "form-field-custom-control-example.ts",
            "form-field-custom-control-example.html",
            "example-tel-input-example.html",
            "example-tel-input-example.css"
        ],
        "selector": "mdc-form-field-custom-control-example",
        "additionalComponents": [
            "MyTelInput"
        ],
        "primaryFile": "form-field-custom-control-example.ts",
        "module": {
            "name": "MdcFormFieldExamplesModule",
            "importSpecifier": "material-experimental/mdc-form-field"
        }
    },
    "popover-edit-cell-span-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-cell-span-mat-table",
        "title": "Material Popover Edit spanning multiple columns on a Material data-table",
        "componentName": "PopoverEditCellSpanMatTableExample",
        "files": [
            "popover-edit-cell-span-mat-table-example.ts",
            "popover-edit-cell-span-mat-table-example.html",
            "popover-edit-cell-span-mat-table-example.css"
        ],
        "selector": "popover-edit-cell-span-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-cell-span-mat-table-example.ts",
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "material-experimental/popover-edit"
        }
    },
    "popover-edit-mat-table-flex": {
        "packagePath": "material-experimental/popover-edit/popover-edit-mat-table-flex",
        "title": "Material Popover Edit on a flex Material data-table",
        "componentName": "PopoverEditMatTableFlexExample",
        "files": [
            "popover-edit-mat-table-flex-example.ts",
            "popover-edit-mat-table-flex-example.html",
            "popover-edit-mat-table-flex-example.css"
        ],
        "selector": "popover-edit-mat-table-flex-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-mat-table-flex-example.ts",
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "material-experimental/popover-edit"
        }
    },
    "popover-edit-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-mat-table",
        "title": "Material Popover Edit on a Material data-table",
        "componentName": "PopoverEditMatTableExample",
        "files": [
            "popover-edit-mat-table-example.ts",
            "popover-edit-mat-table-example.html",
            "popover-edit-mat-table-example.css"
        ],
        "selector": "popover-edit-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-mat-table-example.ts",
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "material-experimental/popover-edit"
        }
    },
    "popover-edit-tab-out-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-tab-out-mat-table",
        "title": "Material Popover Edit with spreadsheet-like configuration on a Material data-table",
        "componentName": "PopoverEditTabOutMatTableExample",
        "files": [
            "popover-edit-tab-out-mat-table-example.ts",
            "popover-edit-tab-out-mat-table-example.html",
            "popover-edit-tab-out-mat-table-example.css"
        ],
        "selector": "popover-edit-tab-out-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-tab-out-mat-table-example.ts",
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "material-experimental/popover-edit"
        }
    },
    "mat-selection-column": {
        "packagePath": "material-experimental/selection/mat-selection-column",
        "title": "Table that uses `matSelectionColumn` which allows users to select rows.",
        "componentName": "MatSelectionColumnExample",
        "files": [
            "mat-selection-column-example.ts",
            "mat-selection-column-example.html",
            "mat-selection-column-example.css"
        ],
        "selector": "mat-selection-column-example",
        "additionalComponents": [],
        "primaryFile": "mat-selection-column-example.ts",
        "module": {
            "name": "MatSelectionExamplesModule",
            "importSpecifier": "material-experimental/selection"
        }
    },
    "mat-selection-list": {
        "packagePath": "material-experimental/selection/mat-selection-list",
        "title": "Mat Selection on a simple list.",
        "componentName": "MatSelectionListExample",
        "files": [
            "mat-selection-list-example.ts",
            "mat-selection-list-example.html"
        ],
        "selector": "mat-selection-list-example",
        "additionalComponents": [],
        "primaryFile": "mat-selection-list-example.ts",
        "module": {
            "name": "MatSelectionExamplesModule",
            "importSpecifier": "material-experimental/selection"
        }
    },
    "autocomplete-auto-active-first-option": {
        "packagePath": "material/autocomplete/autocomplete-auto-active-first-option",
        "title": "Highlight the first autocomplete option",
        "componentName": "AutocompleteAutoActiveFirstOptionExample",
        "files": [
            "autocomplete-auto-active-first-option-example.ts",
            "autocomplete-auto-active-first-option-example.html",
            "autocomplete-auto-active-first-option-example.css"
        ],
        "selector": "autocomplete-auto-active-first-option-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-auto-active-first-option-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-display": {
        "packagePath": "material/autocomplete/autocomplete-display",
        "title": "Display value autocomplete",
        "componentName": "AutocompleteDisplayExample",
        "files": [
            "autocomplete-display-example.ts",
            "autocomplete-display-example.html",
            "autocomplete-display-example.css"
        ],
        "selector": "autocomplete-display-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-display-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-filter": {
        "packagePath": "material/autocomplete/autocomplete-filter",
        "title": "Filter autocomplete",
        "componentName": "AutocompleteFilterExample",
        "files": [
            "autocomplete-filter-example.ts",
            "autocomplete-filter-example.html",
            "autocomplete-filter-example.css"
        ],
        "selector": "autocomplete-filter-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-filter-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-harness": {
        "packagePath": "material/autocomplete/autocomplete-harness",
        "title": "Testing with MatAutocompleteHarness",
        "componentName": "AutocompleteHarnessExample",
        "files": [
            "autocomplete-harness-example.ts",
            "autocomplete-harness-example.html",
            "autocomplete-harness-example.spec.ts"
        ],
        "selector": "autocomplete-harness-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-harness-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-optgroup": {
        "packagePath": "material/autocomplete/autocomplete-optgroup",
        "title": "Option groups autocomplete",
        "componentName": "AutocompleteOptgroupExample",
        "files": [
            "autocomplete-optgroup-example.ts",
            "autocomplete-optgroup-example.html"
        ],
        "selector": "autocomplete-optgroup-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-optgroup-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-overview": {
        "packagePath": "material/autocomplete/autocomplete-overview",
        "title": "Autocomplete overview",
        "componentName": "AutocompleteOverviewExample",
        "files": [
            "autocomplete-overview-example.ts",
            "autocomplete-overview-example.html",
            "autocomplete-overview-example.css"
        ],
        "selector": "autocomplete-overview-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-overview-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-plain-input": {
        "packagePath": "material/autocomplete/autocomplete-plain-input",
        "title": "Plain input autocomplete",
        "componentName": "AutocompletePlainInputExample",
        "files": [
            "autocomplete-plain-input-example.ts",
            "autocomplete-plain-input-example.html",
            "autocomplete-plain-input-example.css"
        ],
        "selector": "autocomplete-plain-input-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-plain-input-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "autocomplete-simple": {
        "packagePath": "material/autocomplete/autocomplete-simple",
        "title": "Simple autocomplete",
        "componentName": "AutocompleteSimpleExample",
        "files": [
            "autocomplete-simple-example.ts",
            "autocomplete-simple-example.html",
            "autocomplete-simple-example.css"
        ],
        "selector": "autocomplete-simple-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-simple-example.ts",
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "material/autocomplete"
        }
    },
    "badge-harness": {
        "packagePath": "material/badge/badge-harness",
        "title": "Testing with MatBadgeHarness",
        "componentName": "BadgeHarnessExample",
        "files": [
            "badge-harness-example.ts",
            "badge-harness-example.html",
            "badge-harness-example.spec.ts"
        ],
        "selector": "badge-harness-example",
        "additionalComponents": [],
        "primaryFile": "badge-harness-example.ts",
        "module": {
            "name": "BadgeExamplesModule",
            "importSpecifier": "material/badge"
        }
    },
    "badge-overview": {
        "packagePath": "material/badge/badge-overview",
        "title": "Badge overview",
        "componentName": "BadgeOverviewExample",
        "files": [
            "badge-overview-example.ts",
            "badge-overview-example.html"
        ],
        "selector": "badge-overview-example",
        "additionalComponents": [],
        "primaryFile": "badge-overview-example.ts",
        "module": {
            "name": "BadgeExamplesModule",
            "importSpecifier": "material/badge"
        }
    },
    "bottom-sheet-harness": {
        "packagePath": "material/bottom-sheet/bottom-sheet-harness",
        "title": "Testing with MatBottomSheetHarness",
        "componentName": "BottomSheetHarnessExample",
        "files": [
            "bottom-sheet-harness-example.ts",
            "bottom-sheet-harness-example.html",
            "bottom-sheet-harness-example.spec.ts"
        ],
        "selector": "bottom-sheet-harness-example",
        "additionalComponents": [],
        "primaryFile": "bottom-sheet-harness-example.ts",
        "module": {
            "name": "BottomSheetExamplesModule",
            "importSpecifier": "material/bottom-sheet"
        }
    },
    "bottom-sheet-overview": {
        "packagePath": "material/bottom-sheet/bottom-sheet-overview",
        "title": "Bottom Sheet Overview",
        "componentName": "BottomSheetOverviewExample",
        "files": [
            "bottom-sheet-overview-example.ts",
            "bottom-sheet-overview-example.html",
            "bottom-sheet-overview-example-sheet.html"
        ],
        "selector": "bottom-sheet-overview-example",
        "additionalComponents": [
            "BottomSheetOverviewExampleSheet"
        ],
        "primaryFile": "bottom-sheet-overview-example.ts",
        "module": {
            "name": "BottomSheetExamplesModule",
            "importSpecifier": "material/bottom-sheet"
        }
    },
    "button-toggle-appearance": {
        "packagePath": "material/button-toggle/button-toggle-appearance",
        "title": "Button toggle appearance",
        "componentName": "ButtonToggleAppearanceExample",
        "files": [
            "button-toggle-appearance-example.ts",
            "button-toggle-appearance-example.html",
            "button-toggle-appearance-example.css"
        ],
        "selector": "button-toggle-appearance-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-appearance-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-toggle-exclusive": {
        "packagePath": "material/button-toggle/button-toggle-exclusive",
        "title": "Exclusive selection",
        "componentName": "ButtonToggleExclusiveExample",
        "files": [
            "button-toggle-exclusive-example.ts",
            "button-toggle-exclusive-example.html",
            "button-toggle-exclusive-example.css"
        ],
        "selector": "button-toggle-exclusive-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-exclusive-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-toggle-forms": {
        "packagePath": "material/button-toggle/button-toggle-forms",
        "title": "Button-toggles with forms",
        "componentName": "ButtonToggleFormsExample",
        "files": [
            "button-toggle-forms-example.ts",
            "button-toggle-forms-example.html"
        ],
        "selector": "button-toggle-forms-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-forms-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-toggle-harness": {
        "packagePath": "material/button-toggle/button-toggle-harness",
        "title": "Testing with MatButtonToggleHarness",
        "componentName": "ButtonToggleHarnessExample",
        "files": [
            "button-toggle-harness-example.ts",
            "button-toggle-harness-example.html",
            "button-toggle-harness-example.spec.ts"
        ],
        "selector": "button-toggle-harness-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-harness-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-toggle-mode": {
        "packagePath": "material/button-toggle/button-toggle-mode",
        "title": "Button toggle selection mode",
        "componentName": "ButtonToggleModeExample",
        "files": [
            "button-toggle-mode-example.ts",
            "button-toggle-mode-example.html"
        ],
        "selector": "button-toggle-mode-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-mode-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-toggle-overview": {
        "packagePath": "material/button-toggle/button-toggle-overview",
        "title": "Basic button-toggles",
        "componentName": "ButtonToggleOverviewExample",
        "files": [
            "button-toggle-overview-example.ts",
            "button-toggle-overview-example.html"
        ],
        "selector": "button-toggle-overview-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-overview-example.ts",
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "material/button-toggle"
        }
    },
    "button-harness": {
        "packagePath": "material/button/button-harness",
        "title": "Testing with MatButtonHarness",
        "componentName": "ButtonHarnessExample",
        "files": [
            "button-harness-example.ts",
            "button-harness-example.html",
            "button-harness-example.spec.ts"
        ],
        "selector": "button-harness-example",
        "additionalComponents": [],
        "primaryFile": "button-harness-example.ts",
        "module": {
            "name": "ButtonExamplesModule",
            "importSpecifier": "material/button"
        }
    },
    "button-overview": {
        "packagePath": "material/button/button-overview",
        "title": "Basic buttons",
        "componentName": "ButtonOverviewExample",
        "files": [
            "button-overview-example.ts",
            "button-overview-example.html",
            "button-overview-example.css"
        ],
        "selector": "button-overview-example",
        "additionalComponents": [],
        "primaryFile": "button-overview-example.ts",
        "module": {
            "name": "ButtonExamplesModule",
            "importSpecifier": "material/button"
        }
    },
    "button-types": {
        "packagePath": "material/button/button-types",
        "title": "Button varieties",
        "componentName": "ButtonTypesExample",
        "files": [
            "button-types-example.ts",
            "button-types-example.html",
            "button-types-example.css"
        ],
        "selector": "button-types-example",
        "additionalComponents": [],
        "primaryFile": "button-types-example.ts",
        "module": {
            "name": "ButtonExamplesModule",
            "importSpecifier": "material/button"
        }
    },
    "card-actions": {
        "packagePath": "material/card/card-actions",
        "title": "Card with actions alignment option",
        "componentName": "CardActionsExample",
        "files": [
            "card-actions-example.ts",
            "card-actions-example.html"
        ],
        "selector": "card-actions-example",
        "additionalComponents": [],
        "primaryFile": "card-actions-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-fancy": {
        "packagePath": "material/card/card-fancy",
        "title": "Card with multiple sections",
        "componentName": "CardFancyExample",
        "files": [
            "card-fancy-example.ts",
            "card-fancy-example.html",
            "card-fancy-example.css"
        ],
        "selector": "card-fancy-example",
        "additionalComponents": [],
        "primaryFile": "card-fancy-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-footer": {
        "packagePath": "material/card/card-footer",
        "title": "Card with footer",
        "componentName": "CardFooterExample",
        "files": [
            "card-footer-example.ts",
            "card-footer-example.html",
            "card-footer-example.css"
        ],
        "selector": "card-footer-example",
        "additionalComponents": [],
        "primaryFile": "card-footer-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-harness": {
        "packagePath": "material/card/card-harness",
        "title": "Testing with MatCardHarness",
        "componentName": "CardHarnessExample",
        "files": [
            "card-harness-example.ts",
            "card-harness-example.html",
            "card-harness-example.spec.ts"
        ],
        "selector": "card-harness-example",
        "additionalComponents": [],
        "primaryFile": "card-harness-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-media-size": {
        "packagePath": "material/card/card-media-size",
        "title": "Card with media size",
        "componentName": "CardMediaSizeExample",
        "files": [
            "card-media-size-example.ts",
            "card-media-size-example.html",
            "card-media-size-example.css"
        ],
        "selector": "card-media-size-example",
        "additionalComponents": [],
        "primaryFile": "card-media-size-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-overview": {
        "packagePath": "material/card/card-overview",
        "title": "Basic cards",
        "componentName": "CardOverviewExample",
        "files": [
            "card-overview-example.ts",
            "card-overview-example.html"
        ],
        "selector": "card-overview-example",
        "additionalComponents": [],
        "primaryFile": "card-overview-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "card-subtitle": {
        "packagePath": "material/card/card-subtitle",
        "title": "Card with sub-title",
        "componentName": "CardSubtitleExample",
        "files": [
            "card-subtitle-example.ts",
            "card-subtitle-example.html",
            "card-subtitle-example.css"
        ],
        "selector": "card-subtitle-example",
        "additionalComponents": [],
        "primaryFile": "card-subtitle-example.ts",
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "material/card"
        }
    },
    "checkbox-configurable": {
        "packagePath": "material/checkbox/checkbox-configurable",
        "title": "Configurable checkbox",
        "componentName": "CheckboxConfigurableExample",
        "files": [
            "checkbox-configurable-example.ts",
            "checkbox-configurable-example.html",
            "checkbox-configurable-example.css"
        ],
        "selector": "checkbox-configurable-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-configurable-example.ts",
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "material/checkbox"
        }
    },
    "checkbox-harness": {
        "packagePath": "material/checkbox/checkbox-harness",
        "title": "Testing with MatCheckboxHarness",
        "componentName": "CheckboxHarnessExample",
        "files": [
            "checkbox-harness-example.ts",
            "checkbox-harness-example.html",
            "checkbox-harness-example.spec.ts"
        ],
        "selector": "checkbox-harness-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-harness-example.ts",
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "material/checkbox"
        }
    },
    "checkbox-overview": {
        "packagePath": "material/checkbox/checkbox-overview",
        "title": "Basic checkboxes",
        "componentName": "CheckboxOverviewExample",
        "files": [
            "checkbox-overview-example.ts",
            "checkbox-overview-example.html",
            "checkbox-overview-example.css"
        ],
        "selector": "checkbox-overview-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-overview-example.ts",
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "material/checkbox"
        }
    },
    "checkbox-reactive-forms": {
        "packagePath": "material/checkbox/checkbox-reactive-forms",
        "title": "Checkboxes with reactive forms",
        "componentName": "CheckboxReactiveFormsExample",
        "files": [
            "checkbox-reactive-forms-example.ts",
            "checkbox-reactive-forms-example.html",
            "checkbox-reactive-forms-example.css"
        ],
        "selector": "checkbox-reactive-forms-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-reactive-forms-example.ts",
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "material/checkbox"
        }
    },
    "chips-autocomplete": {
        "packagePath": "material/chips/chips-autocomplete",
        "title": "Chips Autocomplete",
        "componentName": "ChipsAutocompleteExample",
        "files": [
            "chips-autocomplete-example.ts",
            "chips-autocomplete-example.html",
            "chips-autocomplete-example.css"
        ],
        "selector": "chips-autocomplete-example",
        "additionalComponents": [],
        "primaryFile": "chips-autocomplete-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-avatar": {
        "packagePath": "material/chips/chips-avatar",
        "title": "Chips avatar",
        "componentName": "ChipsAvatarExample",
        "files": [
            "chips-avatar-example.ts",
            "chips-avatar-example.html",
            "chips-avatar-example.css"
        ],
        "selector": "chips-avatar-example",
        "additionalComponents": [],
        "primaryFile": "chips-avatar-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-drag-drop": {
        "packagePath": "material/chips/chips-drag-drop",
        "title": "Chips Drag and Drop",
        "componentName": "ChipsDragDropExample",
        "files": [
            "chips-drag-drop-example.ts",
            "chips-drag-drop-example.html",
            "chips-drag-drop-example.css"
        ],
        "selector": "chips-drag-drop-example",
        "additionalComponents": [],
        "primaryFile": "chips-drag-drop-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-form-control": {
        "packagePath": "material/chips/chips-form-control",
        "title": "Chips with form control",
        "componentName": "ChipsFormControlExample",
        "files": [
            "chips-form-control-example.ts",
            "chips-form-control-example.html",
            "chips-form-control-example.css"
        ],
        "selector": "chips-form-control-example",
        "additionalComponents": [],
        "primaryFile": "chips-form-control-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-harness": {
        "packagePath": "material/chips/chips-harness",
        "title": "Testing with MatChipsHarness",
        "componentName": "ChipsHarnessExample",
        "files": [
            "chips-harness-example.ts",
            "chips-harness-example.html",
            "chips-harness-example.spec.ts"
        ],
        "selector": "chips-harness-example",
        "additionalComponents": [],
        "primaryFile": "chips-harness-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-input": {
        "packagePath": "material/chips/chips-input",
        "title": "Chips with input",
        "componentName": "ChipsInputExample",
        "files": [
            "chips-input-example.ts",
            "chips-input-example.html",
            "chips-input-example.css"
        ],
        "selector": "chips-input-example",
        "additionalComponents": [],
        "primaryFile": "chips-input-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-overview": {
        "packagePath": "material/chips/chips-overview",
        "title": "Basic chips",
        "componentName": "ChipsOverviewExample",
        "files": [
            "chips-overview-example.ts",
            "chips-overview-example.html"
        ],
        "selector": "chips-overview-example",
        "additionalComponents": [],
        "primaryFile": "chips-overview-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "chips-stacked": {
        "packagePath": "material/chips/chips-stacked",
        "title": "Stacked chips",
        "componentName": "ChipsStackedExample",
        "files": [
            "chips-stacked-example.ts",
            "chips-stacked-example.html",
            "chips-stacked-example.css"
        ],
        "selector": "chips-stacked-example",
        "additionalComponents": [],
        "primaryFile": "chips-stacked-example.ts",
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "material/chips"
        }
    },
    "elevation-overview": {
        "packagePath": "material/core/elevation-overview",
        "title": "Elevation CSS classes",
        "componentName": "ElevationOverviewExample",
        "files": [
            "elevation-overview-example.ts",
            "elevation-overview-example.html",
            "elevation-overview-example.css"
        ],
        "selector": "elevation-overview-example",
        "additionalComponents": [],
        "primaryFile": "elevation-overview-example.ts",
        "module": {
            "name": "CoreExamplesModule",
            "importSpecifier": "material/core"
        }
    },
    "ripple-overview": {
        "packagePath": "material/core/ripple-overview",
        "title": "MatRipple basic usage",
        "componentName": "RippleOverviewExample",
        "files": [
            "ripple-overview-example.ts",
            "ripple-overview-example.html",
            "ripple-overview-example.css"
        ],
        "selector": "ripple-overview-example",
        "additionalComponents": [],
        "primaryFile": "ripple-overview-example.ts",
        "module": {
            "name": "CoreExamplesModule",
            "importSpecifier": "material/core"
        }
    },
    "date-range-picker-comparison": {
        "packagePath": "material/datepicker/date-range-picker-comparison",
        "title": "Date range picker comparison ranges",
        "componentName": "DateRangePickerComparisonExample",
        "files": [
            "date-range-picker-comparison-example.ts",
            "date-range-picker-comparison-example.html",
            "date-range-picker-comparison-example.css"
        ],
        "selector": "date-range-picker-comparison-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-comparison-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "date-range-picker-forms": {
        "packagePath": "material/datepicker/date-range-picker-forms",
        "title": "Date range picker forms integration",
        "componentName": "DateRangePickerFormsExample",
        "files": [
            "date-range-picker-forms-example.ts",
            "date-range-picker-forms-example.html"
        ],
        "selector": "date-range-picker-forms-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-forms-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "date-range-picker-overview": {
        "packagePath": "material/datepicker/date-range-picker-overview",
        "title": "Basic date range picker",
        "componentName": "DateRangePickerOverviewExample",
        "files": [
            "date-range-picker-overview-example.ts",
            "date-range-picker-overview-example.html"
        ],
        "selector": "date-range-picker-overview-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-overview-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "date-range-picker-selection-strategy": {
        "packagePath": "material/datepicker/date-range-picker-selection-strategy",
        "title": "Date range picker with custom a selection strategy",
        "componentName": "DateRangePickerSelectionStrategyExample",
        "files": [
            "date-range-picker-selection-strategy-example.ts",
            "date-range-picker-selection-strategy-example.html"
        ],
        "selector": "date-range-picker-selection-strategy-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-selection-strategy-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-actions": {
        "packagePath": "material/datepicker/datepicker-actions",
        "title": "Datepicker action buttons",
        "componentName": "DatepickerActionsExample",
        "files": [
            "datepicker-actions-example.ts",
            "datepicker-actions-example.html",
            "datepicker-actions-example.css"
        ],
        "selector": "datepicker-actions-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-actions-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-api": {
        "packagePath": "material/datepicker/datepicker-api",
        "title": "Datepicker open method",
        "componentName": "DatepickerApiExample",
        "files": [
            "datepicker-api-example.ts",
            "datepicker-api-example.html",
            "datepicker-api-example.css"
        ],
        "selector": "datepicker-api-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-api-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-color": {
        "packagePath": "material/datepicker/datepicker-color",
        "title": "Datepicker palette colors",
        "componentName": "DatepickerColorExample",
        "files": [
            "datepicker-color-example.ts",
            "datepicker-color-example.html",
            "datepicker-color-example.css"
        ],
        "selector": "datepicker-color-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-color-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-custom-header": {
        "packagePath": "material/datepicker/datepicker-custom-header",
        "title": "Datepicker with custom calendar header",
        "componentName": "DatepickerCustomHeaderExample",
        "files": [
            "datepicker-custom-header-example.ts",
            "datepicker-custom-header-example.html"
        ],
        "selector": "datepicker-custom-header-example",
        "additionalComponents": [
            "ExampleHeader"
        ],
        "primaryFile": "datepicker-custom-header-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-custom-icon": {
        "packagePath": "material/datepicker/datepicker-custom-icon",
        "title": "Datepicker with custom icon",
        "componentName": "DatepickerCustomIconExample",
        "files": [
            "datepicker-custom-icon-example.ts",
            "datepicker-custom-icon-example.html"
        ],
        "selector": "datepicker-custom-icon-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-custom-icon-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-date-class": {
        "packagePath": "material/datepicker/datepicker-date-class",
        "title": "Datepicker with custom date classes",
        "componentName": "DatepickerDateClassExample",
        "files": [
            "datepicker-date-class-example.ts",
            "datepicker-date-class-example.html",
            "datepicker-date-class-example.css"
        ],
        "selector": "datepicker-date-class-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-date-class-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-disabled": {
        "packagePath": "material/datepicker/datepicker-disabled",
        "title": "Disabled datepicker",
        "componentName": "DatepickerDisabledExample",
        "files": [
            "datepicker-disabled-example.ts",
            "datepicker-disabled-example.html"
        ],
        "selector": "datepicker-disabled-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-disabled-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-events": {
        "packagePath": "material/datepicker/datepicker-events",
        "title": "Datepicker input and change events",
        "componentName": "DatepickerEventsExample",
        "files": [
            "datepicker-events-example.ts",
            "datepicker-events-example.html",
            "datepicker-events-example.css"
        ],
        "selector": "datepicker-events-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-events-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-filter": {
        "packagePath": "material/datepicker/datepicker-filter",
        "title": "Datepicker with filter validation",
        "componentName": "DatepickerFilterExample",
        "files": [
            "datepicker-filter-example.ts",
            "datepicker-filter-example.html"
        ],
        "selector": "datepicker-filter-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-filter-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-formats": {
        "packagePath": "material/datepicker/datepicker-formats",
        "title": "Datepicker with custom formats",
        "componentName": "DatepickerFormatsExample",
        "files": [
            "datepicker-formats-example.ts",
            "datepicker-formats-example.html"
        ],
        "selector": "datepicker-formats-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-formats-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-harness": {
        "packagePath": "material/datepicker/datepicker-harness",
        "title": "Testing with MatDatepickerInputHarness",
        "componentName": "DatepickerHarnessExample",
        "files": [
            "datepicker-harness-example.ts",
            "datepicker-harness-example.html",
            "datepicker-harness-example.spec.ts"
        ],
        "selector": "datepicker-harness-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-harness-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-inline-calendar": {
        "packagePath": "material/datepicker/datepicker-inline-calendar",
        "title": "Datepicker inline calendar example",
        "componentName": "DatepickerInlineCalendarExample",
        "files": [
            "datepicker-inline-calendar-example.ts",
            "datepicker-inline-calendar-example.html",
            "datepicker-inline-calendar-example.css"
        ],
        "selector": "datepicker-inline-calendar-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-inline-calendar-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-locale": {
        "packagePath": "material/datepicker/datepicker-locale",
        "title": "Datepicker with different locale",
        "componentName": "DatepickerLocaleExample",
        "files": [
            "datepicker-locale-example.ts",
            "datepicker-locale-example.html",
            "datepicker-locale-example.css"
        ],
        "selector": "datepicker-locale-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-locale-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-min-max": {
        "packagePath": "material/datepicker/datepicker-min-max",
        "title": "Datepicker with min & max validation",
        "componentName": "DatepickerMinMaxExample",
        "files": [
            "datepicker-min-max-example.ts",
            "datepicker-min-max-example.html"
        ],
        "selector": "datepicker-min-max-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-min-max-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-moment": {
        "packagePath": "material/datepicker/datepicker-moment",
        "title": "Datepicker that uses Moment.js dates",
        "componentName": "DatepickerMomentExample",
        "files": [
            "datepicker-moment-example.ts",
            "datepicker-moment-example.html"
        ],
        "selector": "datepicker-moment-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-moment-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-overview": {
        "packagePath": "material/datepicker/datepicker-overview",
        "title": "Basic datepicker",
        "componentName": "DatepickerOverviewExample",
        "files": [
            "datepicker-overview-example.ts",
            "datepicker-overview-example.html"
        ],
        "selector": "datepicker-overview-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-overview-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-start-view": {
        "packagePath": "material/datepicker/datepicker-start-view",
        "title": "Datepicker start date",
        "componentName": "DatepickerStartViewExample",
        "files": [
            "datepicker-start-view-example.ts",
            "datepicker-start-view-example.html"
        ],
        "selector": "datepicker-start-view-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-start-view-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-touch": {
        "packagePath": "material/datepicker/datepicker-touch",
        "title": "Datepicker touch UI",
        "componentName": "DatepickerTouchExample",
        "files": [
            "datepicker-touch-example.ts",
            "datepicker-touch-example.html"
        ],
        "selector": "datepicker-touch-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-touch-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-value": {
        "packagePath": "material/datepicker/datepicker-value",
        "title": "Datepicker selected value",
        "componentName": "DatepickerValueExample",
        "files": [
            "datepicker-value-example.ts",
            "datepicker-value-example.html",
            "datepicker-value-example.css"
        ],
        "selector": "datepicker-value-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-value-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "datepicker-views-selection": {
        "packagePath": "material/datepicker/datepicker-views-selection",
        "title": "Datepicker emulating a Year and month picker",
        "componentName": "DatepickerViewsSelectionExample",
        "files": [
            "datepicker-views-selection-example.ts",
            "datepicker-views-selection-example.html",
            "datepicker-views-selection-example.css"
        ],
        "selector": "datepicker-views-selection-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-views-selection-example.ts",
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "material/datepicker"
        }
    },
    "dialog-content": {
        "packagePath": "material/dialog/dialog-content",
        "title": "Dialog with header, scrollable content and actions",
        "componentName": "DialogContentExample",
        "files": [
            "dialog-content-example.ts",
            "dialog-content-example.html",
            "dialog-content-example-dialog.html"
        ],
        "selector": "dialog-content-example",
        "additionalComponents": [
            "DialogContentExampleDialog"
        ],
        "primaryFile": "dialog-content-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "dialog-data": {
        "packagePath": "material/dialog/dialog-data",
        "title": "Injecting data when opening a dialog",
        "componentName": "DialogDataExample",
        "files": [
            "dialog-data-example.ts",
            "dialog-data-example.html",
            "dialog-data-example-dialog.html"
        ],
        "selector": "dialog-data-example",
        "additionalComponents": [
            "DialogDataExampleDialog"
        ],
        "primaryFile": "dialog-data-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "dialog-elements": {
        "packagePath": "material/dialog/dialog-elements",
        "title": "Dialog elements",
        "componentName": "DialogElementsExample",
        "files": [
            "dialog-elements-example.ts",
            "dialog-elements-example.html",
            "dialog-elements-example-dialog.html"
        ],
        "selector": "dialog-elements-example",
        "additionalComponents": [
            "DialogElementsExampleDialog"
        ],
        "primaryFile": "dialog-elements-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "dialog-from-menu": {
        "packagePath": "material/dialog/dialog-from-menu",
        "title": "Dialog launched from a menu",
        "componentName": "DialogFromMenuExample",
        "files": [
            "dialog-from-menu-example.ts",
            "dialog-from-menu-example.html",
            "dialog-from-menu-example-dialog.html"
        ],
        "selector": "dialog-from-menu-example",
        "additionalComponents": [
            "DialogFromMenuExampleDialog"
        ],
        "primaryFile": "dialog-from-menu-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "dialog-harness": {
        "packagePath": "material/dialog/dialog-harness",
        "title": "Testing with MatDialogHarness",
        "componentName": "DialogHarnessExample",
        "files": [
            "dialog-harness-example.ts",
            "dialog-harness-example.html",
            "dialog-harness-example.spec.ts"
        ],
        "selector": "dialog-harness-example",
        "additionalComponents": [],
        "primaryFile": "dialog-harness-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "dialog-overview": {
        "packagePath": "material/dialog/dialog-overview",
        "title": "Dialog Overview",
        "componentName": "DialogOverviewExample",
        "files": [
            "dialog-overview-example.ts",
            "dialog-overview-example.html",
            "dialog-overview-example-dialog.html"
        ],
        "selector": "dialog-overview-example",
        "additionalComponents": [
            "DialogOverviewExampleDialog"
        ],
        "primaryFile": "dialog-overview-example.ts",
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "material/dialog"
        }
    },
    "divider-harness": {
        "packagePath": "material/divider/divider-harness",
        "title": "Testing with MatDividerHarness",
        "componentName": "DividerHarnessExample",
        "files": [
            "divider-harness-example.ts",
            "divider-harness-example.html",
            "divider-harness-example.spec.ts"
        ],
        "selector": "divider-harness-example",
        "additionalComponents": [],
        "primaryFile": "divider-harness-example.ts",
        "module": {
            "name": "DividerExamplesModule",
            "importSpecifier": "material/divider"
        }
    },
    "divider-overview": {
        "packagePath": "material/divider/divider-overview",
        "title": "Basic divider",
        "componentName": "DividerOverviewExample",
        "files": [
            "divider-overview-example.ts",
            "divider-overview-example.html"
        ],
        "selector": "divider-overview-example",
        "additionalComponents": [],
        "primaryFile": "divider-overview-example.ts",
        "module": {
            "name": "DividerExamplesModule",
            "importSpecifier": "material/divider"
        }
    },
    "expansion-expand-collapse-all": {
        "packagePath": "material/expansion/expansion-expand-collapse-all",
        "title": "Accordion with expand/collapse all toggles",
        "componentName": "ExpansionExpandCollapseAllExample",
        "files": [
            "expansion-expand-collapse-all-example.ts",
            "expansion-expand-collapse-all-example.html",
            "expansion-expand-collapse-all-example.css"
        ],
        "selector": "expansion-expand-collapse-all-example",
        "additionalComponents": [],
        "primaryFile": "expansion-expand-collapse-all-example.ts",
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "material/expansion"
        }
    },
    "expansion-harness": {
        "packagePath": "material/expansion/expansion-harness",
        "title": "Testing with MatExpansionPanelHarness and MatAccordionHarness",
        "componentName": "ExpansionHarnessExample",
        "files": [
            "expansion-harness-example.ts",
            "expansion-harness-example.html",
            "expansion-harness-example.spec.ts"
        ],
        "selector": "expansion-harness-example",
        "additionalComponents": [],
        "primaryFile": "expansion-harness-example.ts",
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "material/expansion"
        }
    },
    "expansion-overview": {
        "packagePath": "material/expansion/expansion-overview",
        "title": "Basic expansion panel",
        "componentName": "ExpansionOverviewExample",
        "files": [
            "expansion-overview-example.ts",
            "expansion-overview-example.html",
            "expansion-overview-example.css"
        ],
        "selector": "expansion-overview-example",
        "additionalComponents": [],
        "primaryFile": "expansion-overview-example.ts",
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "material/expansion"
        }
    },
    "expansion-steps": {
        "packagePath": "material/expansion/expansion-steps",
        "title": "Expansion panel as accordion",
        "componentName": "ExpansionStepsExample",
        "files": [
            "expansion-steps-example.ts",
            "expansion-steps-example.html",
            "expansion-steps-example.css"
        ],
        "selector": "expansion-steps-example",
        "additionalComponents": [],
        "primaryFile": "expansion-steps-example.ts",
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "material/expansion"
        }
    },
    "form-field-appearance": {
        "packagePath": "material/form-field/form-field-appearance",
        "title": "Form field appearance variants",
        "componentName": "FormFieldAppearanceExample",
        "files": [
            "form-field-appearance-example.ts",
            "form-field-appearance-example.html"
        ],
        "selector": "form-field-appearance-example",
        "additionalComponents": [],
        "primaryFile": "form-field-appearance-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-custom-control": {
        "packagePath": "material/form-field/form-field-custom-control",
        "title": "Form field with custom telephone number input control.",
        "componentName": "FormFieldCustomControlExample",
        "files": [
            "form-field-custom-control-example.ts",
            "form-field-custom-control-example.html",
            "example-tel-input-example.html",
            "example-tel-input-example.css"
        ],
        "selector": "form-field-custom-control-example",
        "additionalComponents": [
            "MyTelInput"
        ],
        "primaryFile": "form-field-custom-control-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-error": {
        "packagePath": "material/form-field/form-field-error",
        "title": "Form field with error messages",
        "componentName": "FormFieldErrorExample",
        "files": [
            "form-field-error-example.ts",
            "form-field-error-example.html",
            "form-field-error-example.css"
        ],
        "selector": "form-field-error-example",
        "additionalComponents": [],
        "primaryFile": "form-field-error-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-harness": {
        "packagePath": "material/form-field/form-field-harness",
        "title": "Testing with MatFormFieldHarness",
        "componentName": "FormFieldHarnessExample",
        "files": [
            "form-field-harness-example.ts",
            "form-field-harness-example.html",
            "form-field-harness-example.spec.ts"
        ],
        "selector": "form-field-harness-example",
        "additionalComponents": [],
        "primaryFile": "form-field-harness-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-hint": {
        "packagePath": "material/form-field/form-field-hint",
        "title": "Form field with hints",
        "componentName": "FormFieldHintExample",
        "files": [
            "form-field-hint-example.ts",
            "form-field-hint-example.html",
            "form-field-hint-example.css"
        ],
        "selector": "form-field-hint-example",
        "additionalComponents": [],
        "primaryFile": "form-field-hint-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-label": {
        "packagePath": "material/form-field/form-field-label",
        "title": "Form field with label",
        "componentName": "FormFieldLabelExample",
        "files": [
            "form-field-label-example.ts",
            "form-field-label-example.html",
            "form-field-label-example.css"
        ],
        "selector": "form-field-label-example",
        "additionalComponents": [],
        "primaryFile": "form-field-label-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-overview": {
        "packagePath": "material/form-field/form-field-overview",
        "title": "Simple form field",
        "componentName": "FormFieldOverviewExample",
        "files": [
            "form-field-overview-example.ts",
            "form-field-overview-example.html",
            "form-field-overview-example.css"
        ],
        "selector": "form-field-overview-example",
        "additionalComponents": [],
        "primaryFile": "form-field-overview-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-prefix-suffix": {
        "packagePath": "material/form-field/form-field-prefix-suffix",
        "title": "Form field with prefix & suffix",
        "componentName": "FormFieldPrefixSuffixExample",
        "files": [
            "form-field-prefix-suffix-example.ts",
            "form-field-prefix-suffix-example.html",
            "form-field-prefix-suffix-example.css"
        ],
        "selector": "form-field-prefix-suffix-example",
        "additionalComponents": [],
        "primaryFile": "form-field-prefix-suffix-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "form-field-theming": {
        "packagePath": "material/form-field/form-field-theming",
        "title": "Form field theming",
        "componentName": "FormFieldThemingExample",
        "files": [
            "form-field-theming-example.ts",
            "form-field-theming-example.html",
            "form-field-theming-example.css"
        ],
        "selector": "form-field-theming-example",
        "additionalComponents": [],
        "primaryFile": "form-field-theming-example.ts",
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "material/form-field"
        }
    },
    "grid-list-dynamic": {
        "packagePath": "material/grid-list/grid-list-dynamic",
        "title": "Dynamic grid-list",
        "componentName": "GridListDynamicExample",
        "files": [
            "grid-list-dynamic-example.ts",
            "grid-list-dynamic-example.html"
        ],
        "selector": "grid-list-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-dynamic-example.ts",
        "module": {
            "name": "GridListExamplesModule",
            "importSpecifier": "material/grid-list"
        }
    },
    "grid-list-harness": {
        "packagePath": "material/grid-list/grid-list-harness",
        "title": "Testing with MatGridListHarness",
        "componentName": "GridListHarnessExample",
        "files": [
            "grid-list-harness-example.ts",
            "grid-list-harness-example.html",
            "grid-list-harness-example.spec.ts"
        ],
        "selector": "grid-list-harness-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-harness-example.ts",
        "module": {
            "name": "GridListExamplesModule",
            "importSpecifier": "material/grid-list"
        }
    },
    "grid-list-overview": {
        "packagePath": "material/grid-list/grid-list-overview",
        "title": "Basic grid-list",
        "componentName": "GridListOverviewExample",
        "files": [
            "grid-list-overview-example.ts",
            "grid-list-overview-example.html",
            "grid-list-overview-example.css"
        ],
        "selector": "grid-list-overview-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-overview-example.ts",
        "module": {
            "name": "GridListExamplesModule",
            "importSpecifier": "material/grid-list"
        }
    },
    "icon-harness": {
        "packagePath": "material/icon/icon-harness",
        "title": "Testing with MatIconHarness",
        "componentName": "IconHarnessExample",
        "files": [
            "icon-harness-example.ts",
            "icon-harness-example.html",
            "icon-harness-example.spec.ts"
        ],
        "selector": "icon-harness-example",
        "additionalComponents": [],
        "primaryFile": "icon-harness-example.ts",
        "module": {
            "name": "IconExamplesModule",
            "importSpecifier": "material/icon"
        }
    },
    "icon-overview": {
        "packagePath": "material/icon/icon-overview",
        "title": "Basic icons",
        "componentName": "IconOverviewExample",
        "files": [
            "icon-overview-example.ts",
            "icon-overview-example.html"
        ],
        "selector": "icon-overview-example",
        "additionalComponents": [],
        "primaryFile": "icon-overview-example.ts",
        "module": {
            "name": "IconExamplesModule",
            "importSpecifier": "material/icon"
        }
    },
    "icon-svg": {
        "packagePath": "material/icon/icon-svg",
        "title": "SVG icons",
        "componentName": "IconSvgExample",
        "files": [
            "icon-svg-example.ts",
            "icon-svg-example.html"
        ],
        "selector": "icon-svg-example",
        "additionalComponents": [],
        "primaryFile": "icon-svg-example.ts",
        "module": {
            "name": "IconExamplesModule",
            "importSpecifier": "material/icon"
        }
    },
    "input-clearable": {
        "packagePath": "material/input/input-clearable",
        "title": "Input with a clear button",
        "componentName": "InputClearableExample",
        "files": [
            "input-clearable-example.ts",
            "./input-clearable-example.html",
            "./input-clearable-example.css"
        ],
        "selector": "input-clearable-example",
        "additionalComponents": [],
        "primaryFile": "input-clearable-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-error-state-matcher": {
        "packagePath": "material/input/input-error-state-matcher",
        "title": "Input with a custom ErrorStateMatcher",
        "componentName": "InputErrorStateMatcherExample",
        "files": [
            "input-error-state-matcher-example.ts",
            "./input-error-state-matcher-example.html",
            "./input-error-state-matcher-example.css"
        ],
        "selector": "input-error-state-matcher-example",
        "additionalComponents": [],
        "primaryFile": "input-error-state-matcher-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-errors": {
        "packagePath": "material/input/input-errors",
        "title": "Input with error messages",
        "componentName": "InputErrorsExample",
        "files": [
            "input-errors-example.ts",
            "input-errors-example.html",
            "input-errors-example.css"
        ],
        "selector": "input-errors-example",
        "additionalComponents": [],
        "primaryFile": "input-errors-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-form": {
        "packagePath": "material/input/input-form",
        "title": "Inputs in a form",
        "componentName": "InputFormExample",
        "files": [
            "input-form-example.ts",
            "input-form-example.html",
            "input-form-example.css"
        ],
        "selector": "input-form-example",
        "additionalComponents": [],
        "primaryFile": "input-form-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-harness": {
        "packagePath": "material/input/input-harness",
        "title": "Testing with MatInputHarness",
        "componentName": "InputHarnessExample",
        "files": [
            "input-harness-example.ts",
            "input-harness-example.html",
            "input-harness-example.spec.ts"
        ],
        "selector": "input-harness-example",
        "additionalComponents": [],
        "primaryFile": "input-harness-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-hint": {
        "packagePath": "material/input/input-hint",
        "title": "Input with hints",
        "componentName": "InputHintExample",
        "files": [
            "input-hint-example.ts",
            "input-hint-example.html",
            "input-hint-example.css"
        ],
        "selector": "input-hint-example",
        "additionalComponents": [],
        "primaryFile": "input-hint-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-overview": {
        "packagePath": "material/input/input-overview",
        "title": "Basic Inputs",
        "componentName": "InputOverviewExample",
        "files": [
            "input-overview-example.ts",
            "input-overview-example.html",
            "input-overview-example.css"
        ],
        "selector": "input-overview-example",
        "additionalComponents": [],
        "primaryFile": "input-overview-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "input-prefix-suffix": {
        "packagePath": "material/input/input-prefix-suffix",
        "title": "Inputs with prefixes and suffixes",
        "componentName": "InputPrefixSuffixExample",
        "files": [
            "input-prefix-suffix-example.ts",
            "input-prefix-suffix-example.html",
            "input-prefix-suffix-example.css"
        ],
        "selector": "input-prefix-suffix-example",
        "additionalComponents": [],
        "primaryFile": "input-prefix-suffix-example.ts",
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "material/input"
        }
    },
    "list-harness": {
        "packagePath": "material/list/list-harness",
        "title": "Testing with MatListHarness",
        "componentName": "ListHarnessExample",
        "files": [
            "list-harness-example.ts",
            "list-harness-example.html",
            "list-harness-example.spec.ts"
        ],
        "selector": "list-harness-example",
        "additionalComponents": [],
        "primaryFile": "list-harness-example.ts",
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "material/list"
        }
    },
    "list-overview": {
        "packagePath": "material/list/list-overview",
        "title": "Basic list",
        "componentName": "ListOverviewExample",
        "files": [
            "list-overview-example.ts",
            "list-overview-example.html"
        ],
        "selector": "list-overview-example",
        "additionalComponents": [],
        "primaryFile": "list-overview-example.ts",
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "material/list"
        }
    },
    "list-sections": {
        "packagePath": "material/list/list-sections",
        "title": "List with sections",
        "componentName": "ListSectionsExample",
        "files": [
            "list-sections-example.ts",
            "list-sections-example.html",
            "list-sections-example.css"
        ],
        "selector": "list-sections-example",
        "additionalComponents": [],
        "primaryFile": "list-sections-example.ts",
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "material/list"
        }
    },
    "list-selection": {
        "packagePath": "material/list/list-selection",
        "title": "List with selection",
        "componentName": "ListSelectionExample",
        "files": [
            "list-selection-example.ts",
            "list-selection-example.html",
            "list-selection-example.css"
        ],
        "selector": "list-selection-example",
        "additionalComponents": [],
        "primaryFile": "list-selection-example.ts",
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "material/list"
        }
    },
    "list-single-selection": {
        "packagePath": "material/list/list-single-selection",
        "title": "List with single selection",
        "componentName": "ListSingleSelectionExample",
        "files": [
            "list-single-selection-example.ts",
            "list-single-selection-example.html",
            "list-single-selection-example.css"
        ],
        "selector": "list-single-selection-example",
        "additionalComponents": [],
        "primaryFile": "list-single-selection-example.ts",
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "material/list"
        }
    },
    "menu-harness": {
        "packagePath": "material/menu/menu-harness",
        "title": "Testing with MatMenuHarness",
        "componentName": "MenuHarnessExample",
        "files": [
            "menu-harness-example.ts",
            "menu-harness-example.html",
            "menu-harness-example.spec.ts"
        ],
        "selector": "menu-harness-example",
        "additionalComponents": [],
        "primaryFile": "menu-harness-example.ts",
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "material/menu"
        }
    },
    "menu-icons": {
        "packagePath": "material/menu/menu-icons",
        "title": "Menu with icons",
        "componentName": "MenuIconsExample",
        "files": [
            "menu-icons-example.ts",
            "menu-icons-example.html"
        ],
        "selector": "menu-icons-example",
        "additionalComponents": [],
        "primaryFile": "menu-icons-example.ts",
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "material/menu"
        }
    },
    "menu-nested": {
        "packagePath": "material/menu/menu-nested",
        "title": "Nested menu",
        "componentName": "MenuNestedExample",
        "files": [
            "menu-nested-example.ts",
            "menu-nested-example.html"
        ],
        "selector": "menu-nested-example",
        "additionalComponents": [],
        "primaryFile": "menu-nested-example.ts",
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "material/menu"
        }
    },
    "menu-overview": {
        "packagePath": "material/menu/menu-overview",
        "title": "Basic menu",
        "componentName": "MenuOverviewExample",
        "files": [
            "menu-overview-example.ts",
            "menu-overview-example.html"
        ],
        "selector": "menu-overview-example",
        "additionalComponents": [],
        "primaryFile": "menu-overview-example.ts",
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "material/menu"
        }
    },
    "menu-position": {
        "packagePath": "material/menu/menu-position",
        "title": "Menu positioning",
        "componentName": "MenuPositionExample",
        "files": [
            "menu-position-example.ts",
            "menu-position-example.html"
        ],
        "selector": "menu-position-example",
        "additionalComponents": [],
        "primaryFile": "menu-position-example.ts",
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "material/menu"
        }
    },
    "paginator-configurable": {
        "packagePath": "material/paginator/paginator-configurable",
        "title": "Configurable paginator",
        "componentName": "PaginatorConfigurableExample",
        "files": [
            "paginator-configurable-example.ts",
            "paginator-configurable-example.html",
            "paginator-configurable-example.css"
        ],
        "selector": "paginator-configurable-example",
        "additionalComponents": [],
        "primaryFile": "paginator-configurable-example.ts",
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "material/paginator"
        }
    },
    "paginator-harness": {
        "packagePath": "material/paginator/paginator-harness",
        "title": "Testing with MatPaginatorHarness",
        "componentName": "PaginatorHarnessExample",
        "files": [
            "paginator-harness-example.ts",
            "paginator-harness-example.html",
            "paginator-harness-example.spec.ts"
        ],
        "selector": "paginator-harness-example",
        "additionalComponents": [],
        "primaryFile": "paginator-harness-example.ts",
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "material/paginator"
        }
    },
    "paginator-intl": {
        "packagePath": "material/paginator/paginator-intl",
        "title": "Paginator internationalization",
        "componentName": "PaginatorIntlExample",
        "files": [
            "paginator-intl-example.ts",
            "paginator-intl-example.html"
        ],
        "selector": "paginator-intl-example",
        "additionalComponents": [],
        "primaryFile": "paginator-intl-example.ts",
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "material/paginator"
        }
    },
    "paginator-overview": {
        "packagePath": "material/paginator/paginator-overview",
        "title": "Paginator",
        "componentName": "PaginatorOverviewExample",
        "files": [
            "paginator-overview-example.ts",
            "paginator-overview-example.html"
        ],
        "selector": "paginator-overview-example",
        "additionalComponents": [],
        "primaryFile": "paginator-overview-example.ts",
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "material/paginator"
        }
    },
    "progress-bar-buffer": {
        "packagePath": "material/progress-bar/progress-bar-buffer",
        "title": "Buffer progress-bar",
        "componentName": "ProgressBarBufferExample",
        "files": [
            "progress-bar-buffer-example.ts",
            "progress-bar-buffer-example.html"
        ],
        "selector": "progress-bar-buffer-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-buffer-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-bar-configurable": {
        "packagePath": "material/progress-bar/progress-bar-configurable",
        "title": "Configurable progress-bar",
        "componentName": "ProgressBarConfigurableExample",
        "files": [
            "progress-bar-configurable-example.ts",
            "progress-bar-configurable-example.html",
            "progress-bar-configurable-example.css"
        ],
        "selector": "progress-bar-configurable-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-configurable-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-bar-determinate": {
        "packagePath": "material/progress-bar/progress-bar-determinate",
        "title": "Determinate progress-bar",
        "componentName": "ProgressBarDeterminateExample",
        "files": [
            "progress-bar-determinate-example.ts",
            "progress-bar-determinate-example.html"
        ],
        "selector": "progress-bar-determinate-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-determinate-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-bar-harness": {
        "packagePath": "material/progress-bar/progress-bar-harness",
        "title": "Testing with MatProgressBarHarness",
        "componentName": "ProgressBarHarnessExample",
        "files": [
            "progress-bar-harness-example.ts",
            "progress-bar-harness-example.html",
            "progress-bar-harness-example.spec.ts"
        ],
        "selector": "progress-bar-harness-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-harness-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-bar-indeterminate": {
        "packagePath": "material/progress-bar/progress-bar-indeterminate",
        "title": "Indeterminate progress-bar",
        "componentName": "ProgressBarIndeterminateExample",
        "files": [
            "progress-bar-indeterminate-example.ts",
            "progress-bar-indeterminate-example.html"
        ],
        "selector": "progress-bar-indeterminate-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-indeterminate-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-bar-query": {
        "packagePath": "material/progress-bar/progress-bar-query",
        "title": "Query progress-bar",
        "componentName": "ProgressBarQueryExample",
        "files": [
            "progress-bar-query-example.ts",
            "progress-bar-query-example.html"
        ],
        "selector": "progress-bar-query-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-query-example.ts",
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "material/progress-bar"
        }
    },
    "progress-spinner-configurable": {
        "packagePath": "material/progress-spinner/progress-spinner-configurable",
        "title": "Configurable progress spinner",
        "componentName": "ProgressSpinnerConfigurableExample",
        "files": [
            "progress-spinner-configurable-example.ts",
            "progress-spinner-configurable-example.html",
            "progress-spinner-configurable-example.css"
        ],
        "selector": "progress-spinner-configurable-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-configurable-example.ts",
        "module": {
            "name": "ProgressSpinnerExamplesModule",
            "importSpecifier": "material/progress-spinner"
        }
    },
    "progress-spinner-harness": {
        "packagePath": "material/progress-spinner/progress-spinner-harness",
        "title": "Testing with MatProgressSpinnerHarness",
        "componentName": "ProgressSpinnerHarnessExample",
        "files": [
            "progress-spinner-harness-example.ts",
            "progress-spinner-harness-example.html",
            "progress-spinner-harness-example.spec.ts"
        ],
        "selector": "progress-spinner-harness-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-harness-example.ts",
        "module": {
            "name": "ProgressSpinnerExamplesModule",
            "importSpecifier": "material/progress-spinner"
        }
    },
    "progress-spinner-overview": {
        "packagePath": "material/progress-spinner/progress-spinner-overview",
        "title": "Basic progress-spinner",
        "componentName": "ProgressSpinnerOverviewExample",
        "files": [
            "progress-spinner-overview-example.ts",
            "progress-spinner-overview-example.html"
        ],
        "selector": "progress-spinner-overview-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-overview-example.ts",
        "module": {
            "name": "ProgressSpinnerExamplesModule",
            "importSpecifier": "material/progress-spinner"
        }
    },
    "radio-harness": {
        "packagePath": "material/radio/radio-harness",
        "title": "Testing with MatRadioHarness",
        "componentName": "RadioHarnessExample",
        "files": [
            "radio-harness-example.ts",
            "radio-harness-example.html",
            "radio-harness-example.spec.ts"
        ],
        "selector": "radio-harness-example",
        "additionalComponents": [],
        "primaryFile": "radio-harness-example.ts",
        "module": {
            "name": "RadioExamplesModule",
            "importSpecifier": "material/radio"
        }
    },
    "radio-ng-model": {
        "packagePath": "material/radio/radio-ng-model",
        "title": "Radios with ngModel",
        "componentName": "RadioNgModelExample",
        "files": [
            "radio-ng-model-example.ts",
            "radio-ng-model-example.html",
            "radio-ng-model-example.css"
        ],
        "selector": "radio-ng-model-example",
        "additionalComponents": [],
        "primaryFile": "radio-ng-model-example.ts",
        "module": {
            "name": "RadioExamplesModule",
            "importSpecifier": "material/radio"
        }
    },
    "radio-overview": {
        "packagePath": "material/radio/radio-overview",
        "title": "Basic radios",
        "componentName": "RadioOverviewExample",
        "files": [
            "radio-overview-example.ts",
            "radio-overview-example.html",
            "radio-overview-example.css"
        ],
        "selector": "radio-overview-example",
        "additionalComponents": [],
        "primaryFile": "radio-overview-example.ts",
        "module": {
            "name": "RadioExamplesModule",
            "importSpecifier": "material/radio"
        }
    },
    "select-custom-trigger": {
        "packagePath": "material/select/select-custom-trigger",
        "title": "Select with custom trigger text",
        "componentName": "SelectCustomTriggerExample",
        "files": [
            "select-custom-trigger-example.ts",
            "select-custom-trigger-example.html",
            "select-custom-trigger-example.css"
        ],
        "selector": "select-custom-trigger-example",
        "additionalComponents": [],
        "primaryFile": "select-custom-trigger-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-disabled": {
        "packagePath": "material/select/select-disabled",
        "title": "Disabled select",
        "componentName": "SelectDisabledExample",
        "files": [
            "select-disabled-example.ts",
            "select-disabled-example.html"
        ],
        "selector": "select-disabled-example",
        "additionalComponents": [],
        "primaryFile": "select-disabled-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-error-state-matcher": {
        "packagePath": "material/select/select-error-state-matcher",
        "title": "Select with a custom ErrorStateMatcher",
        "componentName": "SelectErrorStateMatcherExample",
        "files": [
            "select-error-state-matcher-example.ts",
            "select-error-state-matcher-example.html"
        ],
        "selector": "select-error-state-matcher-example",
        "additionalComponents": [],
        "primaryFile": "select-error-state-matcher-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-form": {
        "packagePath": "material/select/select-form",
        "title": "Select in a form",
        "componentName": "SelectFormExample",
        "files": [
            "select-form-example.ts",
            "select-form-example.html"
        ],
        "selector": "select-form-example",
        "additionalComponents": [],
        "primaryFile": "select-form-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-harness": {
        "packagePath": "material/select/select-harness",
        "title": "Testing with MatSelectHarness",
        "componentName": "SelectHarnessExample",
        "files": [
            "select-harness-example.ts",
            "select-harness-example.html",
            "select-harness-example.spec.ts"
        ],
        "selector": "select-harness-example",
        "additionalComponents": [],
        "primaryFile": "select-harness-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-hint-error": {
        "packagePath": "material/select/select-hint-error",
        "title": "Select with form field features",
        "componentName": "SelectHintErrorExample",
        "files": [
            "select-hint-error-example.ts",
            "select-hint-error-example.html"
        ],
        "selector": "select-hint-error-example",
        "additionalComponents": [],
        "primaryFile": "select-hint-error-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-initial-value": {
        "packagePath": "material/select/select-initial-value",
        "title": "Basic select with initial value and no form",
        "componentName": "SelectInitialValueExample",
        "files": [
            "select-initial-value-example.ts",
            "select-initial-value-example.html"
        ],
        "selector": "select-initial-value-example",
        "additionalComponents": [],
        "primaryFile": "select-initial-value-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-multiple": {
        "packagePath": "material/select/select-multiple",
        "title": "Select with multiple selection",
        "componentName": "SelectMultipleExample",
        "files": [
            "select-multiple-example.ts",
            "select-multiple-example.html"
        ],
        "selector": "select-multiple-example",
        "additionalComponents": [],
        "primaryFile": "select-multiple-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-no-ripple": {
        "packagePath": "material/select/select-no-ripple",
        "title": "Select with no option ripple",
        "componentName": "SelectNoRippleExample",
        "files": [
            "select-no-ripple-example.ts",
            "select-no-ripple-example.html"
        ],
        "selector": "select-no-ripple-example",
        "additionalComponents": [],
        "primaryFile": "select-no-ripple-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-optgroup": {
        "packagePath": "material/select/select-optgroup",
        "title": "Select with option groups",
        "componentName": "SelectOptgroupExample",
        "files": [
            "select-optgroup-example.ts",
            "select-optgroup-example.html"
        ],
        "selector": "select-optgroup-example",
        "additionalComponents": [],
        "primaryFile": "select-optgroup-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-overview": {
        "packagePath": "material/select/select-overview",
        "title": "Basic select",
        "componentName": "SelectOverviewExample",
        "files": [
            "select-overview-example.ts",
            "select-overview-example.html"
        ],
        "selector": "select-overview-example",
        "additionalComponents": [],
        "primaryFile": "select-overview-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-panel-class": {
        "packagePath": "material/select/select-panel-class",
        "title": "Select with custom panel styling",
        "componentName": "SelectPanelClassExample",
        "files": [
            "select-panel-class-example.ts",
            "select-panel-class-example.html",
            "select-panel-class-example.css"
        ],
        "selector": "select-panel-class-example",
        "additionalComponents": [],
        "primaryFile": "select-panel-class-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-reactive-form": {
        "packagePath": "material/select/select-reactive-form",
        "title": "Select in a reactive form",
        "componentName": "SelectReactiveFormExample",
        "files": [
            "select-reactive-form-example.ts",
            "select-reactive-form-example.html"
        ],
        "selector": "select-reactive-form-example",
        "additionalComponents": [],
        "primaryFile": "select-reactive-form-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-reset": {
        "packagePath": "material/select/select-reset",
        "title": "Select with reset option",
        "componentName": "SelectResetExample",
        "files": [
            "select-reset-example.ts",
            "select-reset-example.html"
        ],
        "selector": "select-reset-example",
        "additionalComponents": [],
        "primaryFile": "select-reset-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "select-value-binding": {
        "packagePath": "material/select/select-value-binding",
        "title": "Select with 2-way value binding",
        "componentName": "SelectValueBindingExample",
        "files": [
            "select-value-binding-example.ts",
            "select-value-binding-example.html"
        ],
        "selector": "select-value-binding-example",
        "additionalComponents": [],
        "primaryFile": "select-value-binding-example.ts",
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "material/select"
        }
    },
    "sidenav-autosize": {
        "packagePath": "material/sidenav/sidenav-autosize",
        "title": "Autosize sidenav",
        "componentName": "SidenavAutosizeExample",
        "files": [
            "sidenav-autosize-example.ts",
            "sidenav-autosize-example.html",
            "sidenav-autosize-example.css"
        ],
        "selector": "sidenav-autosize-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-autosize-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-backdrop": {
        "packagePath": "material/sidenav/sidenav-backdrop",
        "title": "Drawer with explicit backdrop setting",
        "componentName": "SidenavBackdropExample",
        "files": [
            "sidenav-backdrop-example.ts",
            "sidenav-backdrop-example.html",
            "sidenav-backdrop-example.css"
        ],
        "selector": "sidenav-backdrop-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-backdrop-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-disable-close": {
        "packagePath": "material/sidenav/sidenav-disable-close",
        "title": "Sidenav with custom escape and backdrop click behavior",
        "componentName": "SidenavDisableCloseExample",
        "files": [
            "sidenav-disable-close-example.ts",
            "sidenav-disable-close-example.html",
            "sidenav-disable-close-example.css"
        ],
        "selector": "sidenav-disable-close-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-disable-close-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-drawer-overview": {
        "packagePath": "material/sidenav/sidenav-drawer-overview",
        "title": "Basic drawer",
        "componentName": "SidenavDrawerOverviewExample",
        "files": [
            "sidenav-drawer-overview-example.ts",
            "sidenav-drawer-overview-example.html",
            "sidenav-drawer-overview-example.css"
        ],
        "selector": "sidenav-drawer-overview-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-drawer-overview-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-fixed": {
        "packagePath": "material/sidenav/sidenav-fixed",
        "title": "Fixed sidenav",
        "componentName": "SidenavFixedExample",
        "files": [
            "sidenav-fixed-example.ts",
            "sidenav-fixed-example.html",
            "sidenav-fixed-example.css"
        ],
        "selector": "sidenav-fixed-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-fixed-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-harness": {
        "packagePath": "material/sidenav/sidenav-harness",
        "title": "Testing with MatSidenavHarness",
        "componentName": "SidenavHarnessExample",
        "files": [
            "sidenav-harness-example.ts",
            "sidenav-harness-example.html",
            "sidenav-harness-example.spec.ts"
        ],
        "selector": "sidenav-harness-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-harness-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-mode": {
        "packagePath": "material/sidenav/sidenav-mode",
        "title": "Sidenav with configurable mode",
        "componentName": "SidenavModeExample",
        "files": [
            "sidenav-mode-example.ts",
            "sidenav-mode-example.html",
            "sidenav-mode-example.css"
        ],
        "selector": "sidenav-mode-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-mode-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-open-close": {
        "packagePath": "material/sidenav/sidenav-open-close",
        "title": "Sidenav open & close behavior",
        "componentName": "SidenavOpenCloseExample",
        "files": [
            "sidenav-open-close-example.ts",
            "sidenav-open-close-example.html",
            "sidenav-open-close-example.css"
        ],
        "selector": "sidenav-open-close-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-open-close-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-overview": {
        "packagePath": "material/sidenav/sidenav-overview",
        "title": "Basic sidenav",
        "componentName": "SidenavOverviewExample",
        "files": [
            "sidenav-overview-example.ts",
            "sidenav-overview-example.html",
            "sidenav-overview-example.css"
        ],
        "selector": "sidenav-overview-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-overview-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-position": {
        "packagePath": "material/sidenav/sidenav-position",
        "title": "Implicit main content with two sidenavs",
        "componentName": "SidenavPositionExample",
        "files": [
            "sidenav-position-example.ts",
            "sidenav-position-example.html",
            "sidenav-position-example.css"
        ],
        "selector": "sidenav-position-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-position-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "sidenav-responsive": {
        "packagePath": "material/sidenav/sidenav-responsive",
        "title": "Responsive sidenav",
        "componentName": "SidenavResponsiveExample",
        "files": [
            "sidenav-responsive-example.ts",
            "sidenav-responsive-example.html",
            "sidenav-responsive-example.css"
        ],
        "selector": "sidenav-responsive-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-responsive-example.ts",
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "material/sidenav"
        }
    },
    "slide-toggle-configurable": {
        "packagePath": "material/slide-toggle/slide-toggle-configurable",
        "title": "Configurable slide-toggle",
        "componentName": "SlideToggleConfigurableExample",
        "files": [
            "slide-toggle-configurable-example.ts",
            "slide-toggle-configurable-example.html",
            "slide-toggle-configurable-example.css"
        ],
        "selector": "slide-toggle-configurable-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-configurable-example.ts",
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "material/slide-toggle"
        }
    },
    "slide-toggle-forms": {
        "packagePath": "material/slide-toggle/slide-toggle-forms",
        "title": "Slide-toggle with forms",
        "componentName": "SlideToggleFormsExample",
        "files": [
            "slide-toggle-forms-example.ts",
            "./slide-toggle-forms-example.html",
            "./slide-toggle-forms-example.css"
        ],
        "selector": "slide-toggle-forms-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-forms-example.ts",
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "material/slide-toggle"
        }
    },
    "slide-toggle-harness": {
        "packagePath": "material/slide-toggle/slide-toggle-harness",
        "title": "Testing with MatSlideToggleHarness",
        "componentName": "SlideToggleHarnessExample",
        "files": [
            "slide-toggle-harness-example.ts",
            "slide-toggle-harness-example.html",
            "slide-toggle-harness-example.spec.ts"
        ],
        "selector": "slide-toggle-harness-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-harness-example.ts",
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "material/slide-toggle"
        }
    },
    "slide-toggle-overview": {
        "packagePath": "material/slide-toggle/slide-toggle-overview",
        "title": "Basic slide-toggles",
        "componentName": "SlideToggleOverviewExample",
        "files": [
            "slide-toggle-overview-example.ts",
            "slide-toggle-overview-example.html"
        ],
        "selector": "slide-toggle-overview-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-overview-example.ts",
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "material/slide-toggle"
        }
    },
    "slider-configurable": {
        "packagePath": "material/slider/slider-configurable",
        "title": "Configurable slider",
        "componentName": "SliderConfigurableExample",
        "files": [
            "slider-configurable-example.ts",
            "slider-configurable-example.html",
            "slider-configurable-example.css"
        ],
        "selector": "slider-configurable-example",
        "additionalComponents": [],
        "primaryFile": "slider-configurable-example.ts",
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "material/slider"
        }
    },
    "slider-formatting": {
        "packagePath": "material/slider/slider-formatting",
        "title": "Slider with custom thumb label formatting.",
        "componentName": "SliderFormattingExample",
        "files": [
            "slider-formatting-example.ts",
            "slider-formatting-example.html",
            "slider-formatting-example.css"
        ],
        "selector": "slider-formatting-example",
        "additionalComponents": [],
        "primaryFile": "slider-formatting-example.ts",
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "material/slider"
        }
    },
    "slider-harness": {
        "packagePath": "material/slider/slider-harness",
        "title": "Testing with MatSliderHarness",
        "componentName": "SliderHarnessExample",
        "files": [
            "slider-harness-example.ts",
            "slider-harness-example.html",
            "slider-harness-example.spec.ts"
        ],
        "selector": "slider-harness-example",
        "additionalComponents": [],
        "primaryFile": "slider-harness-example.ts",
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "material/slider"
        }
    },
    "slider-overview": {
        "packagePath": "material/slider/slider-overview",
        "title": "Basic slider",
        "componentName": "SliderOverviewExample",
        "files": [
            "slider-overview-example.ts",
            "slider-overview-example.html",
            "slider-overview-example.css"
        ],
        "selector": "slider-overview-example",
        "additionalComponents": [],
        "primaryFile": "slider-overview-example.ts",
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "material/slider"
        }
    },
    "snack-bar-component": {
        "packagePath": "material/snack-bar/snack-bar-component",
        "title": "Snack-bar with a custom component",
        "componentName": "SnackBarComponentExample",
        "files": [
            "snack-bar-component-example.ts",
            "snack-bar-component-example.html",
            "snack-bar-component-example.css",
            "snack-bar-component-example-snack.html"
        ],
        "selector": "snack-bar-component-example",
        "additionalComponents": [
            "PizzaPartyComponent"
        ],
        "primaryFile": "snack-bar-component-example.ts",
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "material/snack-bar"
        }
    },
    "snack-bar-harness": {
        "packagePath": "material/snack-bar/snack-bar-harness",
        "title": "Testing with MatSnackBarHarness",
        "componentName": "SnackBarHarnessExample",
        "files": [
            "snack-bar-harness-example.ts",
            "snack-bar-harness-example.html",
            "snack-bar-harness-example.spec.ts"
        ],
        "selector": "snack-bar-harness-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-harness-example.ts",
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "material/snack-bar"
        }
    },
    "snack-bar-overview": {
        "packagePath": "material/snack-bar/snack-bar-overview",
        "title": "Basic snack-bar",
        "componentName": "SnackBarOverviewExample",
        "files": [
            "snack-bar-overview-example.ts",
            "snack-bar-overview-example.html",
            "snack-bar-overview-example.css"
        ],
        "selector": "snack-bar-overview-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-overview-example.ts",
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "material/snack-bar"
        }
    },
    "snack-bar-position": {
        "packagePath": "material/snack-bar/snack-bar-position",
        "title": "Snack-bar with configurable position",
        "componentName": "SnackBarPositionExample",
        "files": [
            "snack-bar-position-example.ts",
            "snack-bar-position-example.html",
            "snack-bar-position-example.css"
        ],
        "selector": "snack-bar-position-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-position-example.ts",
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "material/snack-bar"
        }
    },
    "sort-harness": {
        "packagePath": "material/sort/sort-harness",
        "title": "Testing with MatSortHarness",
        "componentName": "SortHarnessExample",
        "files": [
            "sort-harness-example.ts",
            "sort-harness-example.html",
            "sort-harness-example.spec.ts"
        ],
        "selector": "sort-harness-example",
        "additionalComponents": [],
        "primaryFile": "sort-harness-example.ts",
        "module": {
            "name": "SortExamplesModule",
            "importSpecifier": "material/sort"
        }
    },
    "sort-overview": {
        "packagePath": "material/sort/sort-overview",
        "title": "Sorting overview",
        "componentName": "SortOverviewExample",
        "files": [
            "sort-overview-example.ts",
            "sort-overview-example.html",
            "sort-overview-example.css"
        ],
        "selector": "sort-overview-example",
        "additionalComponents": [],
        "primaryFile": "sort-overview-example.ts",
        "module": {
            "name": "SortExamplesModule",
            "importSpecifier": "material/sort"
        }
    },
    "stepper-editable": {
        "packagePath": "material/stepper/stepper-editable",
        "title": "Stepper with editable steps",
        "componentName": "StepperEditableExample",
        "files": [
            "stepper-editable-example.ts",
            "stepper-editable-example.html",
            "stepper-editable-example.css"
        ],
        "selector": "stepper-editable-example",
        "additionalComponents": [],
        "primaryFile": "stepper-editable-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-errors": {
        "packagePath": "material/stepper/stepper-errors",
        "title": "Stepper that displays errors in the steps",
        "componentName": "StepperErrorsExample",
        "files": [
            "stepper-errors-example.ts",
            "stepper-errors-example.html",
            "stepper-errors-example.css"
        ],
        "selector": "stepper-errors-example",
        "additionalComponents": [],
        "primaryFile": "stepper-errors-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-harness": {
        "packagePath": "material/stepper/stepper-harness",
        "title": "Testing with MatStepperHarness",
        "componentName": "StepperHarnessExample",
        "files": [
            "stepper-harness-example.ts",
            "stepper-harness-example.html",
            "stepper-harness-example.spec.ts"
        ],
        "selector": "stepper-harness-example",
        "additionalComponents": [],
        "primaryFile": "stepper-harness-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-intl": {
        "packagePath": "material/stepper/stepper-intl",
        "title": "Stepper that uses the MatStepperIntl service",
        "componentName": "StepperIntlExample",
        "files": [
            "stepper-intl-example.ts",
            "stepper-intl-example.html",
            "stepper-intl-example.css"
        ],
        "selector": "stepper-intl-example",
        "additionalComponents": [],
        "primaryFile": "stepper-intl-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-label-position-bottom": {
        "packagePath": "material/stepper/stepper-label-position-bottom",
        "title": "Stepper label bottom position",
        "componentName": "StepperLabelPositionBottomExample",
        "files": [
            "stepper-label-position-bottom-example.ts",
            "stepper-label-position-bottom-example.html",
            "stepper-label-position-bottom-example.css"
        ],
        "selector": "stepper-label-position-bottom-example",
        "additionalComponents": [],
        "primaryFile": "stepper-label-position-bottom-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-lazy-content": {
        "packagePath": "material/stepper/stepper-lazy-content",
        "title": "Stepper lazy content rendering",
        "componentName": "StepperLazyContentExample",
        "files": [
            "stepper-lazy-content-example.ts",
            "stepper-lazy-content-example.html",
            "stepper-lazy-content-example.css"
        ],
        "selector": "stepper-lazy-content-example",
        "additionalComponents": [],
        "primaryFile": "stepper-lazy-content-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-optional": {
        "packagePath": "material/stepper/stepper-optional",
        "title": "Stepper with optional steps",
        "componentName": "StepperOptionalExample",
        "files": [
            "stepper-optional-example.ts",
            "stepper-optional-example.html",
            "stepper-optional-example.css"
        ],
        "selector": "stepper-optional-example",
        "additionalComponents": [],
        "primaryFile": "stepper-optional-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-overview": {
        "packagePath": "material/stepper/stepper-overview",
        "title": "Stepper overview",
        "componentName": "StepperOverviewExample",
        "files": [
            "stepper-overview-example.ts",
            "stepper-overview-example.html",
            "stepper-overview-example.css"
        ],
        "selector": "stepper-overview-example",
        "additionalComponents": [],
        "primaryFile": "stepper-overview-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-responsive": {
        "packagePath": "material/stepper/stepper-responsive",
        "title": "Stepper responsive",
        "componentName": "StepperResponsiveExample",
        "files": [
            "stepper-responsive-example.ts",
            "stepper-responsive-example.html",
            "stepper-responsive-example.css"
        ],
        "selector": "stepper-responsive-example",
        "additionalComponents": [],
        "primaryFile": "stepper-responsive-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-states": {
        "packagePath": "material/stepper/stepper-states",
        "title": "Stepper with customized states",
        "componentName": "StepperStatesExample",
        "files": [
            "stepper-states-example.ts",
            "stepper-states-example.html",
            "stepper-states-example.css"
        ],
        "selector": "stepper-states-example",
        "additionalComponents": [],
        "primaryFile": "stepper-states-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "stepper-vertical": {
        "packagePath": "material/stepper/stepper-vertical",
        "title": "Stepper vertical",
        "componentName": "StepperVerticalExample",
        "files": [
            "stepper-vertical-example.ts",
            "stepper-vertical-example.html",
            "stepper-vertical-example.css"
        ],
        "selector": "stepper-vertical-example",
        "additionalComponents": [],
        "primaryFile": "stepper-vertical-example.ts",
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "material/stepper"
        }
    },
    "table-basic": {
        "packagePath": "material/table/table-basic",
        "title": "Basic use of `<table mat-table>`",
        "componentName": "TableBasicExample",
        "files": [
            "table-basic-example.ts",
            "table-basic-example.html",
            "table-basic-example.css"
        ],
        "selector": "table-basic-example",
        "additionalComponents": [],
        "primaryFile": "table-basic-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-column-styling": {
        "packagePath": "material/table/table-column-styling",
        "title": "Styling columns using their auto-generated column names",
        "componentName": "TableColumnStylingExample",
        "files": [
            "table-column-styling-example.ts",
            "table-column-styling-example.html",
            "table-column-styling-example.css"
        ],
        "selector": "table-column-styling-example",
        "additionalComponents": [],
        "primaryFile": "table-column-styling-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-dynamic-array-data": {
        "packagePath": "material/table/table-dynamic-array-data",
        "title": "Adding and removing data when using an array-based datasource.",
        "componentName": "TableDynamicArrayDataExample",
        "files": [
            "table-dynamic-array-data-example.ts",
            "table-dynamic-array-data-example.html",
            "table-dynamic-array-data-example.css"
        ],
        "selector": "table-dynamic-array-data-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-array-data-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-dynamic-columns": {
        "packagePath": "material/table/table-dynamic-columns",
        "title": "Table dynamically changing the columns displayed",
        "componentName": "TableDynamicColumnsExample",
        "files": [
            "table-dynamic-columns-example.ts",
            "table-dynamic-columns-example.html",
            "table-dynamic-columns-example.css"
        ],
        "selector": "table-dynamic-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-columns-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-dynamic-observable-data": {
        "packagePath": "material/table/table-dynamic-observable-data",
        "title": "Adding and removing data when using an observable-based datasource.",
        "componentName": "TableDynamicObservableDataExample",
        "files": [
            "table-dynamic-observable-data-example.ts",
            "table-dynamic-observable-data-example.html",
            "table-dynamic-observable-data-example.css"
        ],
        "selector": "table-dynamic-observable-data-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-observable-data-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-expandable-rows": {
        "packagePath": "material/table/table-expandable-rows",
        "title": "Table with expandable rows",
        "componentName": "TableExpandableRowsExample",
        "files": [
            "table-expandable-rows-example.ts",
            "table-expandable-rows-example.html",
            "table-expandable-rows-example.css"
        ],
        "selector": "table-expandable-rows-example",
        "additionalComponents": [],
        "primaryFile": "table-expandable-rows-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-filtering": {
        "packagePath": "material/table/table-filtering",
        "title": "Table with filtering",
        "componentName": "TableFilteringExample",
        "files": [
            "table-filtering-example.ts",
            "table-filtering-example.html",
            "table-filtering-example.css"
        ],
        "selector": "table-filtering-example",
        "additionalComponents": [],
        "primaryFile": "table-filtering-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-flex-basic": {
        "packagePath": "material/table/table-flex-basic",
        "title": "Basic use of `<mat-table>` (uses display flex)",
        "componentName": "TableFlexBasicExample",
        "files": [
            "table-flex-basic-example.ts",
            "table-flex-basic-example.html",
            "table-flex-basic-example.css"
        ],
        "selector": "table-flex-basic-example",
        "additionalComponents": [],
        "primaryFile": "table-flex-basic-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-footer-row": {
        "packagePath": "material/table/table-footer-row",
        "title": "Footer row table",
        "componentName": "TableFooterRowExample",
        "files": [
            "table-footer-row-example.ts",
            "table-footer-row-example.html",
            "table-footer-row-example.css"
        ],
        "selector": "table-footer-row-example",
        "additionalComponents": [],
        "primaryFile": "table-footer-row-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-generated-columns": {
        "packagePath": "material/table/table-generated-columns",
        "title": "Table with columns defined using ngFor instead of statically written in the template.",
        "componentName": "TableGeneratedColumnsExample",
        "files": [
            "table-generated-columns-example.ts",
            "table-generated-columns-example.html",
            "table-generated-columns-example.css"
        ],
        "selector": "table-generated-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-generated-columns-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-harness": {
        "packagePath": "material/table/table-harness",
        "title": "Testing with MatTableHarness",
        "componentName": "TableHarnessExample",
        "files": [
            "table-harness-example.ts",
            "table-harness-example.html",
            "table-harness-example.spec.ts"
        ],
        "selector": "table-harness-example",
        "additionalComponents": [],
        "primaryFile": "table-harness-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-http": {
        "packagePath": "material/table/table-http",
        "title": "Table retrieving data through HTTP",
        "componentName": "TableHttpExample",
        "files": [
            "table-http-example.ts",
            "table-http-example.html",
            "table-http-example.css"
        ],
        "selector": "table-http-example",
        "additionalComponents": [],
        "primaryFile": "table-http-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-multiple-header-footer": {
        "packagePath": "material/table/table-multiple-header-footer",
        "title": "Table with multiple header and footer rows",
        "componentName": "TableMultipleHeaderFooterExample",
        "files": [
            "table-multiple-header-footer-example.ts",
            "table-multiple-header-footer-example.html",
            "table-multiple-header-footer-example.css"
        ],
        "selector": "table-multiple-header-footer-example",
        "additionalComponents": [],
        "primaryFile": "table-multiple-header-footer-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-overview": {
        "packagePath": "material/table/table-overview",
        "title": "Data table with sorting, pagination, and filtering.",
        "componentName": "TableOverviewExample",
        "files": [
            "table-overview-example.ts",
            "table-overview-example.html",
            "table-overview-example.css"
        ],
        "selector": "table-overview-example",
        "additionalComponents": [],
        "primaryFile": "table-overview-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-pagination": {
        "packagePath": "material/table/table-pagination",
        "title": "Table with pagination",
        "componentName": "TablePaginationExample",
        "files": [
            "table-pagination-example.ts",
            "table-pagination-example.html",
            "table-pagination-example.css"
        ],
        "selector": "table-pagination-example",
        "additionalComponents": [],
        "primaryFile": "table-pagination-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-recycle-rows": {
        "packagePath": "material/table/table-recycle-rows",
        "title": "Table that uses the recycle view repeater strategy.",
        "componentName": "TableRecycleRowsExample",
        "files": [
            "table-recycle-rows-example.ts",
            "table-recycle-rows-example.html",
            "table-recycle-rows-example.css"
        ],
        "selector": "table-recycle-rows-example",
        "additionalComponents": [],
        "primaryFile": "table-recycle-rows-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-reorderable": {
        "packagePath": "material/table/table-reorderable",
        "title": "Table with re-orderable columns",
        "componentName": "TableReorderableExample",
        "files": [
            "table-reorderable-example.ts",
            "./table-reorderable-example.html",
            "./table-reorderable-example.css"
        ],
        "selector": "table-reorderable-example",
        "additionalComponents": [],
        "primaryFile": "table-reorderable-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-row-binding": {
        "packagePath": "material/table/table-row-binding",
        "title": "Binding event handlers and properties to the table rows.",
        "componentName": "TableRowBindingExample",
        "files": [
            "table-row-binding-example.ts",
            "table-row-binding-example.html",
            "table-row-binding-example.css"
        ],
        "selector": "table-row-binding-example",
        "additionalComponents": [],
        "primaryFile": "table-row-binding-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-row-context": {
        "packagePath": "material/table/table-row-context",
        "title": "Table showing each row context properties.",
        "componentName": "TableRowContextExample",
        "files": [
            "table-row-context-example.ts",
            "table-row-context-example.html",
            "table-row-context-example.css"
        ],
        "selector": "table-row-context-example",
        "additionalComponents": [],
        "primaryFile": "table-row-context-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-selection": {
        "packagePath": "material/table/table-selection",
        "title": "Table with selection",
        "componentName": "TableSelectionExample",
        "files": [
            "table-selection-example.ts",
            "table-selection-example.html",
            "table-selection-example.css"
        ],
        "selector": "table-selection-example",
        "additionalComponents": [],
        "primaryFile": "table-selection-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sorting": {
        "packagePath": "material/table/table-sorting",
        "title": "Table with sorting",
        "componentName": "TableSortingExample",
        "files": [
            "table-sorting-example.ts",
            "table-sorting-example.html",
            "table-sorting-example.css"
        ],
        "selector": "table-sorting-example",
        "additionalComponents": [],
        "primaryFile": "table-sorting-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sticky-columns": {
        "packagePath": "material/table/table-sticky-columns",
        "title": "Table with sticky columns",
        "componentName": "TableStickyColumnsExample",
        "files": [
            "table-sticky-columns-example.ts",
            "table-sticky-columns-example.html",
            "table-sticky-columns-example.css"
        ],
        "selector": "table-sticky-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-columns-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sticky-complex-flex": {
        "packagePath": "material/table/table-sticky-complex-flex",
        "title": "Flex-layout tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexFlexExample",
        "files": [
            "table-sticky-complex-flex-example.ts",
            "table-sticky-complex-flex-example.html",
            "table-sticky-complex-flex-example.css"
        ],
        "selector": "table-sticky-complex-flex-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-complex-flex-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sticky-complex": {
        "packagePath": "material/table/table-sticky-complex",
        "title": "Tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexExample",
        "files": [
            "table-sticky-complex-example.ts",
            "table-sticky-complex-example.html",
            "table-sticky-complex-example.css"
        ],
        "selector": "table-sticky-complex-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-complex-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sticky-footer": {
        "packagePath": "material/table/table-sticky-footer",
        "title": "Table with a sticky footer",
        "componentName": "TableStickyFooterExample",
        "files": [
            "table-sticky-footer-example.ts",
            "table-sticky-footer-example.html",
            "table-sticky-footer-example.css"
        ],
        "selector": "table-sticky-footer-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-footer-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-sticky-header": {
        "packagePath": "material/table/table-sticky-header",
        "title": "Table with sticky header",
        "componentName": "TableStickyHeaderExample",
        "files": [
            "table-sticky-header-example.ts",
            "table-sticky-header-example.html",
            "table-sticky-header-example.css"
        ],
        "selector": "table-sticky-header-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-header-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-text-column-advanced": {
        "packagePath": "material/table/table-text-column-advanced",
        "title": "Use of 'mat-text-column' with various configurations of the interface.",
        "componentName": "TableTextColumnAdvancedExample",
        "files": [
            "table-text-column-advanced-example.ts",
            "table-text-column-advanced-example.html",
            "table-text-column-advanced-example.css"
        ],
        "selector": "table-text-column-advanced-example",
        "additionalComponents": [],
        "primaryFile": "table-text-column-advanced-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-text-column": {
        "packagePath": "material/table/table-text-column",
        "title": "Use of `mat-text-column` which can be used for simple columns that only need to display\na text value for the header and cells.",
        "componentName": "TableTextColumnExample",
        "files": [
            "table-text-column-example.ts",
            "table-text-column-example.html",
            "table-text-column-example.css"
        ],
        "selector": "table-text-column-example",
        "additionalComponents": [],
        "primaryFile": "table-text-column-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-with-ripples": {
        "packagePath": "material/table/table-with-ripples",
        "title": "Tables with Material Design ripples.",
        "componentName": "TableWithRipplesExample",
        "files": [
            "table-with-ripples-example.ts",
            "table-with-ripples-example.html",
            "table-with-ripples-example.css"
        ],
        "selector": "table-with-ripples-example",
        "additionalComponents": [],
        "primaryFile": "table-with-ripples-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "table-wrapped": {
        "packagePath": "material/table/table-wrapped",
        "title": "Table example that shows how to wrap a table component for definition and behavior reuse.",
        "componentName": "TableWrappedExample",
        "files": [
            "table-wrapped-example.ts",
            "table-wrapped-example.html",
            "table-wrapped-example.css",
            "wrapper-table.html"
        ],
        "selector": "table-wrapped-example",
        "additionalComponents": [
            "WrapperTable"
        ],
        "primaryFile": "table-wrapped-example.ts",
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "material/table"
        }
    },
    "tab-group-align": {
        "packagePath": "material/tabs/tab-group-align",
        "title": "Tab group with aligned labels",
        "componentName": "TabGroupAlignExample",
        "files": [
            "tab-group-align-example.ts",
            "tab-group-align-example.html",
            "tab-group-align-example.css"
        ],
        "selector": "tab-group-align-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-align-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-animations": {
        "packagePath": "material/tabs/tab-group-animations",
        "title": "Tab group animations",
        "componentName": "TabGroupAnimationsExample",
        "files": [
            "tab-group-animations-example.ts",
            "tab-group-animations-example.html",
            "tab-group-animations-example.css"
        ],
        "selector": "tab-group-animations-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-animations-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-async": {
        "packagePath": "material/tabs/tab-group-async",
        "title": "Tab group with asynchronously loading tab contents",
        "componentName": "TabGroupAsyncExample",
        "files": [
            "tab-group-async-example.ts",
            "tab-group-async-example.html"
        ],
        "selector": "tab-group-async-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-async-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-basic": {
        "packagePath": "material/tabs/tab-group-basic",
        "title": "Basic use of the tab group",
        "componentName": "TabGroupBasicExample",
        "files": [
            "tab-group-basic-example.ts",
            "tab-group-basic-example.html"
        ],
        "selector": "tab-group-basic-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-basic-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-custom-label": {
        "packagePath": "material/tabs/tab-group-custom-label",
        "title": "Using tabs with a custom label template",
        "componentName": "TabGroupCustomLabelExample",
        "files": [
            "tab-group-custom-label-example.ts",
            "tab-group-custom-label-example.html",
            "tab-group-custom-label-example.css"
        ],
        "selector": "tab-group-custom-label-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-custom-label-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-dynamic-height": {
        "packagePath": "material/tabs/tab-group-dynamic-height",
        "title": "Tab group with dynamic height based on tab contents",
        "componentName": "TabGroupDynamicHeightExample",
        "files": [
            "tab-group-dynamic-height-example.ts",
            "tab-group-dynamic-height-example.html",
            "tab-group-dynamic-height-example.css"
        ],
        "selector": "tab-group-dynamic-height-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-dynamic-height-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-dynamic": {
        "packagePath": "material/tabs/tab-group-dynamic",
        "title": "Tab group with dynamically changing tabs",
        "componentName": "TabGroupDynamicExample",
        "files": [
            "tab-group-dynamic-example.ts",
            "tab-group-dynamic-example.html",
            "tab-group-dynamic-example.css"
        ],
        "selector": "tab-group-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-dynamic-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-harness": {
        "packagePath": "material/tabs/tab-group-harness",
        "title": "Testing with MatTabGroupHarness",
        "componentName": "TabGroupHarnessExample",
        "files": [
            "tab-group-harness-example.ts",
            "tab-group-harness-example.html",
            "tab-group-harness-example.spec.ts"
        ],
        "selector": "tab-group-harness-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-harness-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-header-below": {
        "packagePath": "material/tabs/tab-group-header-below",
        "title": "Tab group with the headers on the bottom",
        "componentName": "TabGroupHeaderBelowExample",
        "files": [
            "tab-group-header-below-example.ts",
            "tab-group-header-below-example.html"
        ],
        "selector": "tab-group-header-below-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-header-below-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-lazy-loaded": {
        "packagePath": "material/tabs/tab-group-lazy-loaded",
        "title": "Tab group where the tab content is loaded lazily (when activated)",
        "componentName": "TabGroupLazyLoadedExample",
        "files": [
            "tab-group-lazy-loaded-example.ts",
            "tab-group-lazy-loaded-example.html"
        ],
        "selector": "tab-group-lazy-loaded-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-lazy-loaded-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-stretched": {
        "packagePath": "material/tabs/tab-group-stretched",
        "title": "Tab group with stretched labels",
        "componentName": "TabGroupStretchedExample",
        "files": [
            "tab-group-stretched-example.ts",
            "tab-group-stretched-example.html",
            "tab-group-stretched-example.css"
        ],
        "selector": "tab-group-stretched-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-stretched-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-group-theme": {
        "packagePath": "material/tabs/tab-group-theme",
        "title": "Customizing the theme options on the tab group",
        "componentName": "TabGroupThemeExample",
        "files": [
            "tab-group-theme-example.ts",
            "tab-group-theme-example.html",
            "tab-group-theme-example.css"
        ],
        "selector": "tab-group-theme-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-theme-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-nav-bar-basic": {
        "packagePath": "material/tabs/tab-nav-bar-basic",
        "title": "Basic use of the tab nav bar",
        "componentName": "TabNavBarBasicExample",
        "files": [
            "tab-nav-bar-basic-example.ts",
            "tab-nav-bar-basic-example.html",
            "tab-nav-bar-basic-example.css"
        ],
        "selector": "tab-nav-bar-basic-example",
        "additionalComponents": [],
        "primaryFile": "tab-nav-bar-basic-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "tab-nav-bar-with-panel": {
        "packagePath": "material/tabs/tab-nav-bar-with-panel",
        "title": "Use of the tab nav bar with the dedicated panel component.",
        "componentName": "TabNavBarWithPanelExample",
        "files": [
            "tab-nav-bar-with-panel-example.ts",
            "tab-nav-bar-with-panel-example.html",
            "tab-nav-bar-with-panel-example.css"
        ],
        "selector": "tab-nav-bar-with-panel-example",
        "additionalComponents": [],
        "primaryFile": "tab-nav-bar-with-panel-example.ts",
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "material/tabs"
        }
    },
    "toolbar-basic": {
        "packagePath": "material/toolbar/toolbar-basic",
        "title": "Basic toolbar",
        "componentName": "ToolbarBasicExample",
        "files": [
            "toolbar-basic-example.ts",
            "toolbar-basic-example.html",
            "toolbar-basic-example.css"
        ],
        "selector": "toolbar-basic-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-basic-example.ts",
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "material/toolbar"
        }
    },
    "toolbar-harness": {
        "packagePath": "material/toolbar/toolbar-harness",
        "title": "Testing with MatToolbarHarness",
        "componentName": "ToolbarHarnessExample",
        "files": [
            "toolbar-harness-example.ts",
            "toolbar-harness-example.html",
            "toolbar-harness-example.spec.ts"
        ],
        "selector": "toolbar-harness-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-harness-example.ts",
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "material/toolbar"
        }
    },
    "toolbar-multirow": {
        "packagePath": "material/toolbar/toolbar-multirow",
        "title": "Multi-row toolbar",
        "componentName": "ToolbarMultirowExample",
        "files": [
            "toolbar-multirow-example.ts",
            "toolbar-multirow-example.html",
            "toolbar-multirow-example.css"
        ],
        "selector": "toolbar-multirow-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-multirow-example.ts",
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "material/toolbar"
        }
    },
    "toolbar-overview": {
        "packagePath": "material/toolbar/toolbar-overview",
        "title": "Toolbar overview",
        "componentName": "ToolbarOverviewExample",
        "files": [
            "toolbar-overview-example.ts",
            "toolbar-overview-example.html",
            "toolbar-overview-example.css"
        ],
        "selector": "toolbar-overview-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-overview-example.ts",
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "material/toolbar"
        }
    },
    "tooltip-auto-hide": {
        "packagePath": "material/tooltip/tooltip-auto-hide",
        "title": "Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.",
        "componentName": "TooltipAutoHideExample",
        "files": [
            "tooltip-auto-hide-example.ts",
            "tooltip-auto-hide-example.html",
            "tooltip-auto-hide-example.css"
        ],
        "selector": "tooltip-auto-hide-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-auto-hide-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-custom-class": {
        "packagePath": "material/tooltip/tooltip-custom-class",
        "title": "Tooltip that can have a custom class applied.",
        "componentName": "TooltipCustomClassExample",
        "files": [
            "tooltip-custom-class-example.ts",
            "tooltip-custom-class-example.html",
            "tooltip-custom-class-example.css"
        ],
        "selector": "tooltip-custom-class-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-custom-class-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-delay": {
        "packagePath": "material/tooltip/tooltip-delay",
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipDelayExample",
        "files": [
            "tooltip-delay-example.ts",
            "tooltip-delay-example.html",
            "tooltip-delay-example.css"
        ],
        "selector": "tooltip-delay-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-delay-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-disabled": {
        "packagePath": "material/tooltip/tooltip-disabled",
        "title": "Tooltip that can be disabled",
        "componentName": "TooltipDisabledExample",
        "files": [
            "tooltip-disabled-example.ts",
            "tooltip-disabled-example.html",
            "tooltip-disabled-example.css"
        ],
        "selector": "tooltip-disabled-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-disabled-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-harness": {
        "packagePath": "material/tooltip/tooltip-harness",
        "title": "Testing with MatTooltipHarness",
        "componentName": "TooltipHarnessExample",
        "files": [
            "tooltip-harness-example.ts",
            "tooltip-harness-example.html",
            "tooltip-harness-example.spec.ts"
        ],
        "selector": "tooltip-harness-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-harness-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-manual": {
        "packagePath": "material/tooltip/tooltip-manual",
        "title": "Tooltip that can be manually shown/hidden.",
        "componentName": "TooltipManualExample",
        "files": [
            "tooltip-manual-example.ts",
            "tooltip-manual-example.html",
            "tooltip-manual-example.css"
        ],
        "selector": "tooltip-manual-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-manual-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-message": {
        "packagePath": "material/tooltip/tooltip-message",
        "title": "Tooltip with a changing message",
        "componentName": "TooltipMessageExample",
        "files": [
            "tooltip-message-example.ts",
            "tooltip-message-example.html",
            "tooltip-message-example.css"
        ],
        "selector": "tooltip-message-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-message-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-modified-defaults": {
        "packagePath": "material/tooltip/tooltip-modified-defaults",
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipModifiedDefaultsExample",
        "files": [
            "tooltip-modified-defaults-example.ts",
            "tooltip-modified-defaults-example.html"
        ],
        "selector": "tooltip-modified-defaults-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-modified-defaults-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-overview": {
        "packagePath": "material/tooltip/tooltip-overview",
        "title": "Basic tooltip",
        "componentName": "TooltipOverviewExample",
        "files": [
            "tooltip-overview-example.ts",
            "tooltip-overview-example.html"
        ],
        "selector": "tooltip-overview-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-overview-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tooltip-position": {
        "packagePath": "material/tooltip/tooltip-position",
        "title": "Tooltip with a custom position",
        "componentName": "TooltipPositionExample",
        "files": [
            "tooltip-position-example.ts",
            "tooltip-position-example.html",
            "tooltip-position-example.css"
        ],
        "selector": "tooltip-position-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-position-example.ts",
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "material/tooltip"
        }
    },
    "tree-checklist": {
        "packagePath": "material/tree/tree-checklist",
        "title": "Tree with checkboxes",
        "componentName": "TreeChecklistExample",
        "files": [
            "tree-checklist-example.ts",
            "tree-checklist-example.html",
            "tree-checklist-example.css"
        ],
        "selector": "tree-checklist-example",
        "additionalComponents": [],
        "primaryFile": "tree-checklist-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    },
    "tree-dynamic": {
        "packagePath": "material/tree/tree-dynamic",
        "title": "Tree with dynamic data",
        "componentName": "TreeDynamicExample",
        "files": [
            "tree-dynamic-example.ts",
            "tree-dynamic-example.html",
            "tree-dynamic-example.css"
        ],
        "selector": "tree-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "tree-dynamic-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    },
    "tree-flat-overview": {
        "packagePath": "material/tree/tree-flat-overview",
        "title": "Tree with flat nodes",
        "componentName": "TreeFlatOverviewExample",
        "files": [
            "tree-flat-overview-example.ts",
            "tree-flat-overview-example.html",
            "tree-flat-overview-example.css"
        ],
        "selector": "tree-flat-overview-example",
        "additionalComponents": [],
        "primaryFile": "tree-flat-overview-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    },
    "tree-harness": {
        "packagePath": "material/tree/tree-harness",
        "title": "Testing with MatTreeHarness",
        "componentName": "TreeHarnessExample",
        "files": [
            "tree-harness-example.ts",
            "tree-harness-example.html",
            "tree-harness-example.spec.ts"
        ],
        "selector": "tree-harness-example",
        "additionalComponents": [],
        "primaryFile": "tree-harness-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    },
    "tree-loadmore": {
        "packagePath": "material/tree/tree-loadmore",
        "title": "Tree with partially loaded data",
        "componentName": "TreeLoadmoreExample",
        "files": [
            "tree-loadmore-example.ts",
            "tree-loadmore-example.html",
            "tree-loadmore-example.css"
        ],
        "selector": "tree-loadmore-example",
        "additionalComponents": [],
        "primaryFile": "tree-loadmore-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    },
    "tree-nested-overview": {
        "packagePath": "material/tree/tree-nested-overview",
        "title": "Tree with nested nodes",
        "componentName": "TreeNestedOverviewExample",
        "files": [
            "tree-nested-overview-example.ts",
            "tree-nested-overview-example.html",
            "tree-nested-overview-example.css"
        ],
        "selector": "tree-nested-overview-example",
        "additionalComponents": [],
        "primaryFile": "tree-nested-overview-example.ts",
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "material/tree"
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9leGFtcGxlLW1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBZ0NILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFnQztJQUM3RCxrQkFBa0IsRUFBRTtRQUNsQixhQUFhLEVBQUUsd0NBQXdDO1FBQ3ZELE9BQU8sRUFBRSxlQUFlO1FBQ3hCLGVBQWUsRUFBRSx1QkFBdUI7UUFDeEMsT0FBTyxFQUFFO1lBQ1AsNkJBQTZCO1lBQzdCLCtCQUErQjtZQUMvQiw4QkFBOEI7U0FDL0I7UUFDRCxVQUFVLEVBQUUsMEJBQTBCO1FBQ3RDLHNCQUFzQixFQUFFLEVBQUU7UUFDMUIsYUFBYSxFQUFFLDZCQUE2QjtRQUM1QyxRQUFRLEVBQUU7WUFDUixNQUFNLEVBQUUsdUJBQXVCO1lBQy9CLGlCQUFpQixFQUFFLHVCQUF1QjtTQUMzQztLQUNGO0lBQ0QsaUJBQWlCLEVBQUU7UUFDakIsYUFBYSxFQUFFLHVDQUF1QztRQUN0RCxPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLGVBQWUsRUFBRSxzQkFBc0I7UUFDdkMsT0FBTyxFQUFFO1lBQ1AsNEJBQTRCO1lBQzVCLDhCQUE4QjtZQUM5Qiw2QkFBNkI7U0FDOUI7UUFDRCxVQUFVLEVBQUUseUJBQXlCO1FBQ3JDLHNCQUFzQixFQUFFLEVBQUU7UUFDMUIsYUFBYSxFQUFFLDRCQUE0QjtRQUMzQyxRQUFRLEVBQUU7WUFDUixNQUFNLEVBQUUsdUJBQXVCO1lBQy9CLGlCQUFpQixFQUFFLHVCQUF1QjtTQUMzQztLQUNGO0lBQ0Qsa0JBQWtCLEVBQUU7UUFDbEIsYUFBYSxFQUFFLHdDQUF3QztRQUN2RCxPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLGVBQWUsRUFBRSx1QkFBdUI7UUFDeEMsT0FBTyxFQUFFO1lBQ1AsNkJBQTZCO1lBQzdCLCtCQUErQjtZ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LEVBQUUsc0JBQXNCO1FBQ2xDLHNCQUFzQixFQUFFLEVBQUU7UUFDMUIsYUFBYSxFQUFFLHlCQUF5QjtRQUN4QyxRQUFRLEVBQUU7WUFDUixNQUFNLEVBQUUsb0JBQW9CO1lBQzVCLGlCQUFpQixFQUFFLGVBQWU7U0FDbkM7S0FDRjtJQUNELGVBQWUsRUFBRTtRQUNmLGFBQWEsRUFBRSw2QkFBNkI7UUFDNUMsT0FBTyxFQUFFLGlDQUFpQztRQUMxQyxlQUFlLEVBQUUscUJBQXFCO1FBQ3RDLE9BQU8sRUFBRTtZQUNQLDBCQUEwQjtZQUMxQiw0QkFBNEI7WUFDNUIsMkJBQTJCO1NBQzVCO1FBQ0QsVUFBVSxFQUFFLHVCQUF1QjtRQUNuQyxzQkFBc0IsRUFBRSxFQUFFO1FBQzFCLGFBQWEsRUFBRSwwQkFBMEI7UUFDekMsUUFBUSxFQUFFO1lBQ1IsTUFBTSxFQUFFLG9CQUFvQjtZQUM1QixpQkFBaUIsRUFBRSxlQUFlO1NBQ25DO0tBQ0Y7SUFDRCxzQkFBc0IsRUFBRTtRQUN0QixhQUFhLEVBQUUsb0NBQW9DO1FBQ25ELE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsZUFBZSxFQUFFLDJCQUEyQjtRQUM1QyxPQUFPLEVBQUU7WUFDUCxpQ0FBaUM7WUFDakMsbUNBQW1DO1lBQ25DLGtDQUFrQztTQUNuQztRQUNELFVBQVUsRUFBRSw4QkFBOEI7UUFDMUMsc0JBQXNCLEVBQUUsRUFBRTtRQUMxQixhQUFhLEVBQUUsaUNBQWlDO1FBQ2hELFFBQVEsRUFBRTtZQUNSLE1BQU0sRUFBRSxvQkFBb0I7WUFDNUIsaUJBQWlCLEVBQUUsZUFBZTtTQUNuQztLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogRE8gTk9UIE1BTlVBTExZIEVESVQgVEhJUyBGSUxFLiBUSElTIEZJTEUgSVMgQVVUT01BVElDQUxMWSBHRU5FUkFURUQuXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBMaXZlRXhhbXBsZSB7XG4gIC8qKiBUaXRsZSBvZiB0aGUgZXhhbXBsZS4gKi9cbiAgdGl0bGU6IHN0cmluZztcbiAgLyoqIE5hbWUgb2YgdGhlIGV4YW1wbGUgY29tcG9uZW50LiAqL1xuICBjb21wb25lbnROYW1lOiBzdHJpbmc7XG4gIC8qKiBTZWxlY3RvciB0byBtYXRjaCB0aGUgY29tcG9uZW50IG9mIHRoaXMgZXhhbXBsZS4gKi9cbiAgc2VsZWN0b3I6IHN0cmluZztcbiAgLyoqIE5hbWUgb2YgdGhlIHByaW1hcnkgZmlsZSBvZiB0aGlzIGV4YW1wbGUuICovXG4gIHByaW1hcnlGaWxlOiBzdHJpbmc7XG4gIC8qKiBMaXN0IG9mIGZpbGVzIHdoaWNoIGFyZSBwYXJ0IG9mIHRoZSBleGFtcGxlLiAqL1xuICBmaWxlczogc3RyaW5nW107XG4gIC8qKiBQYXRoIHRvIHRoZSBkaXJlY3RvcnkgY29udGFpbmluZyB0aGUgZXhhbXBsZS4gKi9cbiAgcGFja2FnZVBhdGg6IHN0cmluZztcbiAgLyoqIExpc3Qgb2YgYWRkaXRpb25hbCBjb21wb25lbnRzIHdoaWNoIGFyZSBwYXJ0IG9mIHRoZSBleGFtcGxlLiAqL1xuICBhZGRpdGlvbmFsQ29tcG9uZW50czogc3RyaW5nW107XG4gIC8qKiBOZ01vZHVsZSB0aGF0IGRlY2xhcmVzIHRoaXMgZXhhbXBsZS4gKi9cbiAgbW9kdWxlOiBOZ01vZHVsZUluZm87XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmdNb2R1bGVJbmZvIHtcbiAgLyoqIE5hbWUgb2YgdGhlIE5nTW9kdWxlLiAqL1xuICBuYW1lOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJbXBvcnQgc3BlY2lmaWVyIHRoYXQgcmVzb2x2ZXMgdG8gdGhpcyBtb2R1bGUuIFRoZSBzcGVjaWZpZXIgaXMgbm90IHNjb3BlZCB0b1xuICAgKiBgQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlc2AgYmVjYXVzZSBpdCdzIHVwIHRvIHRoZSBjb25zdW1lciBob3cgdGhlIG1vZHVsZSBpc1xuICAgKiBpbXBvcnRlZC4gRm9yIGV4YW1wbGUsIGluIHRoZSBkb2NzIGFwcCwgbW9kdWxlcyBhcmUgbGF6aWx5IGltcG9ydGVkIGZyb20gYGZlc20yMDE1L2AuXG4gICAqL1xuICBpbXBvcnRTcGVjaWZpZXI6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IEVYQU1QTEVfQ09NUE9ORU5UUzoge1tpZDogc3RyaW5nXTogTGl2ZUV4YW1wbGV9ID0ge1xuICBcImNkay1tZW51LWNvbnRleHRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGstZXhwZXJpbWVudGFsL21lbnUvY2RrLW1lbnUtY29udGV4dFwiLFxuICAgIFwidGl0bGVcIjogXCJDb250ZXh0IG1lbnUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTWVudUNvbnRleHRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1tZW51LWNvbnRleHQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1jb250ZXh0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbWVudS1jb250ZXh0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbWVudS1jb250ZXh0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtNZW51RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLW1lbnUtaW5saW5lXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51L2Nkay1tZW51LWlubGluZVwiLFxuICAgIFwidGl0bGVcIjogXCJHbWFpbCBpbmxpbmUgbWVudS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtNZW51SW5saW5lRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1tZW51LWlubGluZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtaW5saW5lLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka01lbnVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGstZXhwZXJpbWVudGFsL21lbnVcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstbWVudS1tZW51YmFyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51L2Nkay1tZW51LW1lbnViYXJcIixcbiAgICBcInRpdGxlXCI6IFwiR29vZ2xlIERvY3MgTWVudSBCYXIuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTWVudU1lbnViYXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1tZW51LW1lbnViYXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1tZW51YmFyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbWVudS1tZW51YmFyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbWVudS1tZW51YmFyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1tZW51YmFyLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtNZW51RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51L2Nkay1tZW51LXN0YW5kYWxvbmUtbWVudVwiLFxuICAgIFwidGl0bGVcIjogXCJNZW51IHdpdGggU3RhbmRhbG9uZSBUcmlnZ2VyLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka01lbnVTdGFuZGFsb25lTWVudUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLW1lbnUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1tZW51LXN0YW5kYWxvbmUtbWVudS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtNZW51RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1zdGF0ZWZ1bC1tZW51XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9tZW51L2Nkay1tZW51LXN0YW5kYWxvbmUtc3RhdGVmdWwtbWVudVwiLFxuICAgIFwidGl0bGVcIjogXCJTdGF0ZWZ1bCBNZW51IHdpdGggU3RhbmRhbG9uZSBUcmlnZ2VyLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka01lbnVTdGFuZGFsb25lU3RhdGVmdWxNZW51RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1tZW51LXN0YW5kYWxvbmUtc3RhdGVmdWwtbWVudS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1zdGF0ZWZ1bC1tZW51LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka01lbnVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGstZXhwZXJpbWVudGFsL21lbnVcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleFwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgUG9wb3ZlciBFZGl0IG9uIGEgZmxleCBjZGstdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrUG9wb3ZlckVkaXRDZGtUYWJsZUZsZXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlLWZsZXgtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGstZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9jZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgUG9wb3ZlciBFZGl0IG9uIGEgQ0RLIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdENka1RhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0L2Nkay1wb3BvdmVyLWVkaXQtY2VsbC1zcGFuLXZhbmlsbGEtdGFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ0RLIFBvcG92ZXIgRWRpdCBzcGFubmluZyBtdWx0aXBsZSBjb2x1bW5zIG9uIGFuIEhUTUwgZGF0YS10YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BvcG92ZXJFZGl0Q2VsbFNwYW5WYW5pbGxhVGFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtY2VsbC1zcGFuLXZhbmlsbGEtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXBvcG92ZXItZWRpdC10YWItb3V0LXZhbmlsbGEtdGFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGstZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9jZGstcG9wb3Zlci1lZGl0LXRhYi1vdXQtdmFuaWxsYS10YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgUG9wb3ZlciBFZGl0IHdpdGggc3ByZWFkc2hlZXQtbGlrZSBjb25maWd1cmF0aW9uIG9uIGFuIEhUTUwgZGF0YS10YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BvcG92ZXJFZGl0VGFiT3V0VmFuaWxsYVRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LXRhYi1vdXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtdGFiLW91dC12YW5pbGxhLXRhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LXRhYi1vdXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXBvcG92ZXItZWRpdC10YWItb3V0LXZhbmlsbGEtdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1wb3BvdmVyLWVkaXQtdGFiLW91dC12YW5pbGxhLXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXBvcG92ZXItZWRpdC12YW5pbGxhLXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvY2RrLXBvcG92ZXItZWRpdC12YW5pbGxhLXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNESyBQb3BvdmVyIEVkaXQgb24gYW4gSFRNTCBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrUG9wb3ZlckVkaXRWYW5pbGxhVGFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC12YW5pbGxhLXRhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstcG9wb3Zlci1lZGl0LXZhbmlsbGEtdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrUG9wb3ZlckVkaXRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGstZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdFwiXG4gICAgfVxuICB9LFxuICBcImNkay1zZWxlY3Rpb24tY29sdW1uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9zZWxlY3Rpb24vY2RrLXNlbGVjdGlvbi1jb2x1bW5cIixcbiAgICBcInRpdGxlXCI6IFwiQ0RLIFNlbGVjdGlvbiBDb2x1bW4gb24gYSBDREsgdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrU2VsZWN0aW9uQ29sdW1uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTZWxlY3Rpb25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGstZXhwZXJpbWVudGFsL3NlbGVjdGlvblwiXG4gICAgfVxuICB9LFxuICBcImNkay1zZWxlY3Rpb24tbGlzdFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvc2VsZWN0aW9uL2Nkay1zZWxlY3Rpb24tbGlzdFwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgU2VsZWN0aW9uIG9uIGEgc2ltcGxlIGxpc3QuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrU2VsZWN0aW9uTGlzdEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstc2VsZWN0aW9uLWxpc3QtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1NlbGVjdGlvbkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay1leHBlcmltZW50YWwvc2VsZWN0aW9uXCJcbiAgICB9XG4gIH0sXG4gIFwiZm9jdXMtbW9uaXRvci1kaXJlY3RpdmVzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2ExMXkvZm9jdXMtbW9uaXRvci1kaXJlY3RpdmVzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1vbml0b3JpbmcgZm9jdXMgd2l0aCBGb2N1c01vbml0b3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb2N1c01vbml0b3JEaXJlY3RpdmVzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3ItZGlyZWN0aXZlcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9jdXMtbW9uaXRvci1kaXJlY3RpdmVzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0ExMXlFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvYTExeVwiXG4gICAgfVxuICB9LFxuICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2ExMXkvZm9jdXMtbW9uaXRvci1mb2N1cy12aWFcIixcbiAgICBcInRpdGxlXCI6IFwiRm9jdXNpbmcgd2l0aCBhIHNwZWNpZmljIEZvY3VzT3JpZ2luXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9jdXNNb25pdG9yRm9jdXNWaWFFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9jdXMtbW9uaXRvci1mb2N1cy12aWEtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb2N1cy1tb25pdG9yLWZvY3VzLXZpYS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZm9jdXMtbW9uaXRvci1mb2N1cy12aWEtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0ExMXlFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvYTExeVwiXG4gICAgfVxuICB9LFxuICBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvYTExeS9mb2N1cy1tb25pdG9yLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1vbml0b3JpbmcgZm9jdXMgd2l0aCBGb2N1c01vbml0b3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb2N1c01vbml0b3JPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9jdXMtbW9uaXRvci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0ExMXlFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvYTExeVwiXG4gICAgfVxuICB9LFxuICBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvYWNjb3JkaW9uL2Nkay1hY2NvcmRpb24tb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQWNjb3JkaW9uIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrQWNjb3JkaW9uT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstYWNjb3JkaW9uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstYWNjb3JkaW9uLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstYWNjb3JkaW9uLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstYWNjb3JkaW9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtBY2NvcmRpb25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvYWNjb3JkaW9uXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWNsaXBib2FyZC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9jbGlwYm9hcmQvY2RrLWNsaXBib2FyZC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJDbGlwYm9hcmQgb3ZlcnZpZXdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtDbGlwYm9hcmRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWNsaXBib2FyZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0NsaXBib2FyZEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9jbGlwYm9hcmRcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWF4aXMtbG9ja1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1heGlzLWxvY2tcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIHBvc2l0aW9uIGxvY2tpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEF4aXNMb2NrRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWF4aXMtbG9jay1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtYXhpcy1sb2NrLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWF4aXMtbG9jay1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1heGlzLWxvY2stZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtYXhpcy1sb2NrLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLWJvdW5kYXJ5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBib3VuZGFyeVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wQm91bmRhcnlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtYm91bmRhcnktZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWdyb3VwXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWdyb3VwXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBjb25uZWN0ZWQgc29ydGluZyBncm91cFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wQ29ubmVjdGVkU29ydGluZ0dyb3VwRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWdyb3VwLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgY29ubmVjdGVkIHNvcnRpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcENvbm5lY3RlZFNvcnRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wbGFjZWhvbGRlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1jdXN0b20tcGxhY2Vob2xkZXJcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIGN1c3RvbSBwbGFjZWhvbGRlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wQ3VzdG9tUGxhY2Vob2xkZXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcGxhY2Vob2xkZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wbGFjZWhvbGRlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcGxhY2Vob2xkZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0RyYWdEcm9wRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gICAgfVxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIGN1c3RvbSBwcmV2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BDdXN0b21QcmV2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wcmV2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcHJldmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcHJldmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcHJldmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcHJldmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1kZWxheVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1kZWxheVwiLFxuICAgIFwidGl0bGVcIjogXCJEZWxheWVkIGRyYWdnaW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BEZWxheUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1kZWxheS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGVsYXktZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGVsYXktZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtZGVsYXktZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtZGVsYXktZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0RyYWdEcm9wRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gICAgfVxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1zb3J0aW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBkaXNhYmxlZCBzb3J0aW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BEaXNhYmxlZFNvcnRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1zb3J0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1kaXNhYmxlZFwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgZGlzYWJsZWRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcERpc2FibGVkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1lbnRlci1wcmVkaWNhdGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBlbnRlciBwcmVkaWNhdGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEVudGVyUHJlZGljYXRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWVudGVyLXByZWRpY2F0ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWVudGVyLXByZWRpY2F0ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1lbnRlci1wcmVkaWNhdGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWZyZWUtZHJhZy1wb3NpdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1mcmVlLWRyYWctcG9zaXRpb25cIixcbiAgICBcInRpdGxlXCI6IFwiUHJvZ3JhbW1hdGljYWxseSBzZXR0aW5nIHRoZSBmcmVlIGRyYWcgcG9zaXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEZyZWVEcmFnUG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtZnJlZS1kcmFnLXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1mcmVlLWRyYWctcG9zaXRpb24tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZnJlZS1kcmFnLXBvc2l0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWZyZWUtZHJhZy1wb3NpdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1mcmVlLWRyYWctcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0RyYWdEcm9wRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gICAgfVxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtaGFuZGxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLWhhbmRsZVwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3Agd2l0aCBhIGhhbmRsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wSGFuZGxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWhhbmRsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtaGFuZGxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWhhbmRsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1oYW5kbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtaGFuZGxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWhvcml6b250YWwtc29ydGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1ob3Jpem9udGFsLXNvcnRpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIGhvcml6b250YWwgc29ydGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wSG9yaXpvbnRhbFNvcnRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1ob3Jpem9udGFsLXNvcnRpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWhvcml6b250YWwtc29ydGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1ob3Jpem9udGFsLXNvcnRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0RyYWdEcm9wRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gICAgfVxuICB9LFxuICBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3Atb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgRHJhZyZEcm9wXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka0RyYWdEcm9wRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gICAgfVxuICB9LFxuICBcImNkay1kcmFnLWRyb3Atcm9vdC1lbGVtZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudFwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3Agd2l0aCBhbHRlcm5hdGUgcm9vdCBlbGVtZW50XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BSb290RWxlbWVudEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1yb290LWVsZW1lbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1yb290LWVsZW1lbnQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3Atcm9vdC1lbGVtZW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3Agc29ydCBwcmVkaWNhdGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcFNvcnRQcmVkaWNhdGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3Atc29ydC1wcmVkaWNhdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLXNvcnQtcHJlZGljYXRlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLXNvcnQtcHJlZGljYXRlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLXNvcnQtcHJlZGljYXRlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLXNvcnQtcHJlZGljYXRlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLXNvcnRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3Atc29ydGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3Agc29ydGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wU29ydGluZ0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1zb3J0aW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLXNvcnRpbmctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3Atc29ydGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtEcmFnRHJvcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9kcmFnLWRyb3BcIlxuICAgIH1cbiAgfSxcbiAgXCJicmVha3BvaW50LW9ic2VydmVyLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2xheW91dC9icmVha3BvaW50LW9ic2VydmVyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlJlc3BvbmQgdG8gdmlld3BvcnQgY2hhbmdlcyB3aXRoIEJyZWFrcG9pbnRPYnNlcnZlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJyZWFrcG9pbnRPYnNlcnZlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJicmVha3BvaW50LW9ic2VydmVyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrTGF5b3V0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL2xheW91dFwiXG4gICAgfVxuICB9LFxuICBcImNkay1vdmVybGF5LWJhc2ljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL292ZXJsYXkvY2RrLW92ZXJsYXktYmFzaWNcIixcbiAgICBcInRpdGxlXCI6IFwiT3ZlcmxheSBiYXNpYyBleGFtcGxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrT3ZlcmxheUJhc2ljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstb3ZlcmxheS1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgICBcIi4vY2RrLW92ZXJsYXktYmFzaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vY2RrLW92ZXJsYXktYmFzaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1vdmVybGF5LWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstb3ZlcmxheS1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrT3ZlcmxheUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9vdmVybGF5XCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXBsYXRmb3JtLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3BsYXRmb3JtL2Nkay1wbGF0Zm9ybS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJQbGF0Zm9ybSBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BsYXRmb3JtT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBsYXRmb3JtLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtQbGF0Zm9ybUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9wbGF0Zm9ybVwiXG4gICAgfVxuICB9LFxuICBcImNkay1wb3J0YWwtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvcG9ydGFsL2Nkay1wb3J0YWwtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiUG9ydGFsIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrUG9ydGFsT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wb3J0YWwtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ29tcG9uZW50UG9ydGFsRXhhbXBsZVwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBvcnRhbC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrUG9ydGFsRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3BvcnRhbFwiXG4gICAgfVxuICB9LFxuICBcImNkay12aXJ0dWFsLXNjcm9sbC1hcHBlbmQtb25seVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlZpcnR1YWwgc2Nyb2xsIHdpdGggdmlldyByZWN5Y2xpbmcgZGlzYWJsZWQuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbEFwcGVuZE9ubHlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1hcHBlbmQtb25seS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1hcHBlbmQtb25seS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtYXBwZW5kLW9ubHktZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1hcHBlbmQtb25seS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrU2Nyb2xsaW5nRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gICAgfVxuICB9LFxuICBcImNkay12aXJ0dWFsLXNjcm9sbC1jb250ZXh0XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtY29udGV4dFwiLFxuICAgIFwidGl0bGVcIjogXCJWaXJ0dWFsIHNjcm9sbCBjb250ZXh0IHZhcmlhYmxlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1ZpcnR1YWxTY3JvbGxDb250ZXh0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtY29udGV4dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1jb250ZXh0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtY29udGV4dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWNvbnRleHQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTY3JvbGxpbmdFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneVwiLFxuICAgIFwidGl0bGVcIjogXCJWaXJ0dWFsIHNjcm9sbCB3aXRoIGEgY3VzdG9tIHN0cmF0ZWd5XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbEN1c3RvbVN0cmF0ZWd5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtY3VzdG9tLXN0cmF0ZWd5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrU2Nyb2xsaW5nRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gICAgfVxuICB9LFxuICBcImNkay12aXJ0dWFsLXNjcm9sbC1kYXRhLXNvdXJjZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlZpcnR1YWwgc2Nyb2xsIHdpdGggYSBjdXN0b20gZGF0YSBzb3VyY2VcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsRGF0YVNvdXJjZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1kYXRhLXNvdXJjZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTY3JvbGxpbmdFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtZGxcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGxpbmcgYDxkbD5gXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbERsRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1kbC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZGwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1Njcm9sbGluZ0V4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9zY3JvbGxpbmdcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZpeGVkIHNpemUgdmlydHVhbCBzY3JvbGwgd2l0aCBjdXN0b20gYnVmZmVyIHBhcmFtZXRlcnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsRml4ZWRCdWZmZXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1maXhlZC1idWZmZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTY3JvbGxpbmdFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nL2Nkay12aXJ0dWFsLXNjcm9sbC1ob3Jpem9udGFsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkhvcml6b250YWwgdmlydHVhbCBzY3JvbGxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsSG9yaXpvbnRhbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtaG9yaXpvbnRhbC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1ob3Jpem9udGFsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtaG9yaXpvbnRhbC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrU2Nyb2xsaW5nRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gICAgfVxuICB9LFxuICBcImNkay12aXJ0dWFsLXNjcm9sbC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHZpcnR1YWwgc2Nyb2xsXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1Njcm9sbGluZ0V4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9zY3JvbGxpbmdcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtdGVtcGxhdGUtY2FjaGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nL2Nkay12aXJ0dWFsLXNjcm9sbC10ZW1wbGF0ZS1jYWNoZVwiLFxuICAgIFwidGl0bGVcIjogXCJWaXJ0dWFsIHNjcm9sbCB3aXRoIG5vIHRlbXBsYXRlIGNhY2hpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsVGVtcGxhdGVDYWNoZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtdGVtcGxhdGUtY2FjaGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC10ZW1wbGF0ZS1jYWNoZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTY3JvbGxpbmdFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zdGVwcGVyL2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiQSBjdXN0b20gQ0RLIHN0ZXBwZXIgd2l0aG91dCBhIGZvcm1cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtDdXN0b21TdGVwcGVyV2l0aG91dEZvcm1FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLmNzc1wiLFxuICAgICAgXCIuL2V4YW1wbGUtY3VzdG9tLXN0ZXBwZXIuaHRtbFwiLFxuICAgICAgXCIuL2V4YW1wbGUtY3VzdG9tLXN0ZXBwZXIuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ3VzdG9tU3RlcHBlclwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrU3RlcHBlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLWxpbmVhci1zdGVwcGVyLXdpdGgtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zdGVwcGVyL2Nkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiQSBjdXN0b20gQ0RLIGxpbmVhciBzdGVwcGVyIHdpdGggZm9ybXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtMaW5lYXJTdGVwcGVyV2l0aEZvcm1FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL2Nkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm0tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vY2RrLWxpbmVhci1zdGVwcGVyLXdpdGgtZm9ybS1leGFtcGxlLmNzc1wiLFxuICAgICAgXCIuL2V4YW1wbGUtY3VzdG9tLWxpbmVhci1zdGVwcGVyLmh0bWxcIixcbiAgICAgIFwiLi9leGFtcGxlLWN1c3RvbS1saW5lYXItc3RlcHBlci5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm0tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJDdXN0b21MaW5lYXJTdGVwcGVyXCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtTdGVwcGVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3N0ZXBwZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstdGFibGUtYmFzaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGFibGUvY2RrLXRhYmxlLWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIENESyBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVGFibGVCYXNpY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRhYmxlLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRhYmxlLWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdGFibGUtYmFzaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10YWJsZS1iYXNpYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRhYmxlLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcImNkay10YWJsZS1maXhlZC1sYXlvdXRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGFibGUvY2RrLXRhYmxlLWZpeGVkLWxheW91dFwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgdGFibGUgd2l0aCBhIGZpeGVkIGxheW91dC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtUYWJsZUZpeGVkTGF5b3V0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdGFibGUtZml4ZWQtbGF5b3V0LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRhYmxlLWZpeGVkLWxheW91dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXRhYmxlLWZpeGVkLWxheW91dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXRhYmxlLWZpeGVkLWxheW91dC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRhYmxlLWZpeGVkLWxheW91dC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2RrVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJjZGstdGFibGUtZmxleC1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90YWJsZS9jZGstdGFibGUtZmxleC1iYXNpY1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB1c2Ugb2YgYDxjZGstdGFibGU+YCAodXNlcyBkaXNwbGF5IGZsZXgpXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVGFibGVGbGV4QmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay10YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay10YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdGFibGUtZmxleC1iYXNpYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1RhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXRhYmxlLXJlY3ljbGUtcm93c1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90YWJsZS9jZGstdGFibGUtcmVjeWNsZS1yb3dzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHRoYXQgdXNlcyB0aGUgcmVjeWNsZSB2aWV3IHJlcGVhdGVyIHN0cmF0ZWd5LlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1RhYmxlUmVjeWNsZVJvd3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay10YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRleHQtZmllbGQtYXV0b2ZpbGwtZGlyZWN0aXZlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3RleHQtZmllbGQvdGV4dC1maWVsZC1hdXRvZmlsbC1kaXJlY3RpdmVcIixcbiAgICBcInRpdGxlXCI6IFwiTW9uaXRvcmluZyBhdXRvZmlsbCBzdGF0ZSB3aXRoIGNka0F1dG9maWxsXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGV4dEZpZWxkQXV0b2ZpbGxEaXJlY3RpdmVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRleHQtZmllbGQtYXV0b2ZpbGwtZGlyZWN0aXZlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9maWxsLWRpcmVjdGl2ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9maWxsLWRpcmVjdGl2ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGV4dC1maWVsZC1hdXRvZmlsbC1kaXJlY3RpdmUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRleHQtZmllbGQtYXV0b2ZpbGwtZGlyZWN0aXZlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtUZXh0RmllbGRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvdGV4dC1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcInRleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90ZXh0LWZpZWxkL3RleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvclwiLFxuICAgIFwidGl0bGVcIjogXCJNb25pdG9yaW5nIGF1dG9maWxsIHN0YXRlIHdpdGggQXV0b2ZpbGxNb25pdG9yXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGV4dEZpZWxkQXV0b2ZpbGxNb25pdG9yRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3ItZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL3RleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3ItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtUZXh0RmllbGRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvdGV4dC1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWFcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGV4dC1maWVsZC90ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkF1dG8tcmVzaXppbmcgdGV4dGFyZWFcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUZXh0RmllbGRBdXRvc2l6ZVRleHRhcmVhRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL3RleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1RleHRGaWVsZEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcImNkay90ZXh0LWZpZWxkXCJcbiAgICB9XG4gIH0sXG4gIFwiY2RrLXRyZWUtZmxhdFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90cmVlL2Nkay10cmVlLWZsYXRcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIGZsYXQgbm9kZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtUcmVlRmxhdEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRyZWUtZmxhdC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay10cmVlLWZsYXQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay10cmVlLWZsYXQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10cmVlLWZsYXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay10cmVlLWZsYXQtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNka1RyZWVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJjZGsvdHJlZVwiXG4gICAgfVxuICB9LFxuICBcImNkay10cmVlLW5lc3RlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90cmVlL2Nkay10cmVlLW5lc3RlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggbmVzdGVkIG5vZGVzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVHJlZU5lc3RlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdHJlZS1uZXN0ZWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10cmVlLW5lc3RlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDZGtUcmVlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwiY2RrL3RyZWVcIlxuICAgIH1cbiAgfSxcbiAgXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZS1mbGV4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL2NvbHVtbi1yZXNpemUvZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleFwiLFxuICAgIFwidGl0bGVcIjogXCJEZWZhdWx0LWVuYWJsZWQgY29sdW1uIHJlc2l6ZSB3aXRoIGEgZmxleC1iYXNlZCBtYXQtdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGVmYXVsdEVuYWJsZWRDb2x1bW5SZXNpemVGbGV4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZS1mbGV4LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ29sdW1uUmVzaXplRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL2NvbHVtbi1yZXNpemVcIlxuICAgIH1cbiAgfSxcbiAgXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplL2RlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRlZmF1bHQtZW5hYmxlZCBjb2x1bW4gcmVzaXplIHdpdGggYSB0YWJsZS1iYXNlZCBtYXQtdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGVmYXVsdEVuYWJsZWRDb2x1bW5SZXNpemVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNvbHVtblJlc2l6ZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplXCJcbiAgICB9XG4gIH0sXG4gIFwib3B0LWluLWNvbHVtbi1yZXNpemVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvY29sdW1uLXJlc2l6ZS9vcHQtaW4tY29sdW1uLXJlc2l6ZVwiLFxuICAgIFwidGl0bGVcIjogXCJPcHQtaW4gY29sdW1uIHJlc2l6ZSB3aXRoIGEgdGFibGUtYmFzZWQgbWF0LXRhYmxlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk9wdEluQ29sdW1uUmVzaXplRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJvcHQtaW4tY29sdW1uLXJlc2l6ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcIm9wdC1pbi1jb2x1bW4tcmVzaXplLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJvcHQtaW4tY29sdW1uLXJlc2l6ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwib3B0LWluLWNvbHVtbi1yZXNpemUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcIm9wdC1pbi1jb2x1bW4tcmVzaXplLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDb2x1bW5SZXNpemVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvY29sdW1uLXJlc2l6ZVwiXG4gICAgfVxuICB9LFxuICBcIm1kYy1jYXJkLWZhbmN5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL21kYy1jYXJkL21kYy1jYXJkLWZhbmN5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNhcmQgd2l0aCBtdWx0aXBsZSBzZWN0aW9uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1kY0NhcmRGYW5jeUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibWRjLWNhcmQtZmFuY3ktZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZGMtY2FyZC1mYW5jeS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwibWRjLWNhcmQtZmFuY3ktZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1kYy1jYXJkLWZhbmN5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtZGMtY2FyZC1mYW5jeS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWRjQ2FyZEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9tZGMtY2FyZFwiXG4gICAgfVxuICB9LFxuICBcIm1kYy1mb3JtLWZpZWxkLWN1c3RvbS1jb250cm9sXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL21kYy1mb3JtLWZpZWxkL21kYy1mb3JtLWZpZWxkLWN1c3RvbS1jb250cm9sXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBjdXN0b20gdGVsZXBob25lIG51bWJlciBpbnB1dCBjb250cm9sLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1kY0Zvcm1GaWVsZEN1c3RvbUNvbnRyb2xFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb3JtLWZpZWxkLWN1c3RvbS1jb250cm9sLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleGFtcGxlLXRlbC1pbnB1dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZXhhbXBsZS10ZWwtaW5wdXQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1kYy1mb3JtLWZpZWxkLWN1c3RvbS1jb250cm9sLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiTXlUZWxJbnB1dFwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZm9ybS1maWVsZC1jdXN0b20tY29udHJvbC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWRjRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL21kYy1mb3JtLWZpZWxkXCJcbiAgICB9XG4gIH0sXG4gIFwicG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi1tYXQtdGFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0L3BvcG92ZXItZWRpdC1jZWxsLXNwYW4tbWF0LXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1hdGVyaWFsIFBvcG92ZXIgRWRpdCBzcGFubmluZyBtdWx0aXBsZSBjb2x1bW5zIG9uIGEgTWF0ZXJpYWwgZGF0YS10YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlBvcG92ZXJFZGl0Q2VsbFNwYW5NYXRUYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi1tYXQtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi1tYXQtdGFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBvcG92ZXItZWRpdC1jZWxsLXNwYW4tbWF0LXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUG9wb3ZlckVkaXRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9wb3BvdmVyLWVkaXQtbWF0LXRhYmxlLWZsZXhcIixcbiAgICBcInRpdGxlXCI6IFwiTWF0ZXJpYWwgUG9wb3ZlciBFZGl0IG9uIGEgZmxleCBNYXRlcmlhbCBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUG9wb3ZlckVkaXRNYXRUYWJsZUZsZXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZmxleC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwb3BvdmVyLWVkaXQtbWF0LXRhYmxlLWZsZXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUG9wb3ZlckVkaXRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgICB9XG4gIH0sXG4gIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvcG9wb3Zlci1lZGl0LW1hdC10YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJNYXRlcmlhbCBQb3BvdmVyIEVkaXQgb24gYSBNYXRlcmlhbCBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUG9wb3ZlckVkaXRNYXRUYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlBvcG92ZXJFZGl0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdFwiXG4gICAgfVxuICB9LFxuICBcInBvcG92ZXItZWRpdC10YWItb3V0LW1hdC10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvcG9wb3Zlci1lZGl0LXRhYi1vdXQtbWF0LXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1hdGVyaWFsIFBvcG92ZXIgRWRpdCB3aXRoIHNwcmVhZHNoZWV0LWxpa2UgY29uZmlndXJhdGlvbiBvbiBhIE1hdGVyaWFsIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQb3BvdmVyRWRpdFRhYk91dE1hdFRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC10YWItb3V0LW1hdC10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwicG9wb3Zlci1lZGl0LXRhYi1vdXQtbWF0LXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlBvcG92ZXJFZGl0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdFwiXG4gICAgfVxuICB9LFxuICBcIm1hdC1zZWxlY3Rpb24tY29sdW1uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3NlbGVjdGlvbi9tYXQtc2VsZWN0aW9uLWNvbHVtblwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB0aGF0IHVzZXMgYG1hdFNlbGVjdGlvbkNvbHVtbmAgd2hpY2ggYWxsb3dzIHVzZXJzIHRvIHNlbGVjdCByb3dzLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1hdFNlbGVjdGlvbkNvbHVtbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibWF0LXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZS50c1wiLFxuICAgICAgXCJtYXQtc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwibWF0LXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1hdC1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtYXQtc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWF0U2VsZWN0aW9uRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3NlbGVjdGlvblwiXG4gICAgfVxuICB9LFxuICBcIm1hdC1zZWxlY3Rpb24tbGlzdFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9zZWxlY3Rpb24vbWF0LXNlbGVjdGlvbi1saXN0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1hdCBTZWxlY3Rpb24gb24gYSBzaW1wbGUgbGlzdC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJNYXRTZWxlY3Rpb25MaXN0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJtYXQtc2VsZWN0aW9uLWxpc3QtZXhhbXBsZS50c1wiLFxuICAgICAgXCJtYXQtc2VsZWN0aW9uLWxpc3QtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJtYXQtc2VsZWN0aW9uLWxpc3QtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcIm1hdC1zZWxlY3Rpb24tbGlzdC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWF0U2VsZWN0aW9uRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3NlbGVjdGlvblwiXG4gICAgfVxuICB9LFxuICBcImF1dG9jb21wbGV0ZS1hdXRvLWFjdGl2ZS1maXJzdC1vcHRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLWF1dG8tYWN0aXZlLWZpcnN0LW9wdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJIaWdobGlnaHQgdGhlIGZpcnN0IGF1dG9jb21wbGV0ZSBvcHRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVBdXRvQWN0aXZlRmlyc3RPcHRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1hdXRvLWFjdGl2ZS1maXJzdC1vcHRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJBdXRvY29tcGxldGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGVcIlxuICAgIH1cbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtZGlzcGxheVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUtZGlzcGxheVwiLFxuICAgIFwidGl0bGVcIjogXCJEaXNwbGF5IHZhbHVlIGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZURpc3BsYXlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1kaXNwbGF5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWRpc3BsYXktZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1kaXNwbGF5LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtZGlzcGxheS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYXV0b2NvbXBsZXRlLWRpc3BsYXktZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkF1dG9jb21wbGV0ZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZVwiXG4gICAgfVxuICB9LFxuICBcImF1dG9jb21wbGV0ZS1maWx0ZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLWZpbHRlclwiLFxuICAgIFwidGl0bGVcIjogXCJGaWx0ZXIgYXV0b2NvbXBsZXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQXV0b2NvbXBsZXRlRmlsdGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJhdXRvY29tcGxldGUtZmlsdGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWZpbHRlci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWZpbHRlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYXV0b2NvbXBsZXRlLWZpbHRlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYXV0b2NvbXBsZXRlLWZpbHRlci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQXV0b2NvbXBsZXRlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgICB9XG4gIH0sXG4gIFwiYXV0b2NvbXBsZXRlLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEF1dG9jb21wbGV0ZUhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQXV0b2NvbXBsZXRlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgICB9XG4gIH0sXG4gIFwiYXV0b2NvbXBsZXRlLW9wdGdyb3VwXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1vcHRncm91cFwiLFxuICAgIFwidGl0bGVcIjogXCJPcHRpb24gZ3JvdXBzIGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZU9wdGdyb3VwRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJhdXRvY29tcGxldGUtb3B0Z3JvdXAtZXhhbXBsZS50c1wiLFxuICAgICAgXCJhdXRvY29tcGxldGUtb3B0Z3JvdXAtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtb3B0Z3JvdXAtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1vcHRncm91cC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQXV0b2NvbXBsZXRlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgICB9XG4gIH0sXG4gIFwiYXV0b2NvbXBsZXRlLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJBdXRvY29tcGxldGUgb3ZlcnZpZXdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYXV0b2NvbXBsZXRlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYXV0b2NvbXBsZXRlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJBdXRvY29tcGxldGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGVcIlxuICAgIH1cbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtcGxhaW4taW5wdXRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLXBsYWluLWlucHV0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlBsYWluIGlucHV0IGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZVBsYWluSW5wdXRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLXBsYWluLWlucHV0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtcGxhaW4taW5wdXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQXV0b2NvbXBsZXRlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgICB9XG4gIH0sXG4gIFwiYXV0b2NvbXBsZXRlLXNpbXBsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUtc2ltcGxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNpbXBsZSBhdXRvY29tcGxldGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVTaW1wbGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1zaW1wbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJhdXRvY29tcGxldGUtc2ltcGxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtc2ltcGxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtc2ltcGxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtc2ltcGxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJBdXRvY29tcGxldGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGVcIlxuICAgIH1cbiAgfSxcbiAgXCJiYWRnZS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYmFkZ2UvYmFkZ2UtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0QmFkZ2VIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQmFkZ2VIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJiYWRnZS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYmFkZ2UtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYmFkZ2UtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJhZGdlLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJhZGdlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkJhZGdlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYmFkZ2VcIlxuICAgIH1cbiAgfSxcbiAgXCJiYWRnZS1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2JhZGdlL2JhZGdlLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhZGdlIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQmFkZ2VPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYmFkZ2Utb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJiYWRnZS1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJhZGdlLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJiYWRnZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQmFkZ2VFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9iYWRnZVwiXG4gICAgfVxuICB9LFxuICBcImJvdHRvbS1zaGVldC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYm90dG9tLXNoZWV0L2JvdHRvbS1zaGVldC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRCb3R0b21TaGVldEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCb3R0b21TaGVldEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJvdHRvbS1zaGVldC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYm90dG9tLXNoZWV0LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJvdHRvbS1zaGVldC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYm90dG9tLXNoZWV0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJvdHRvbS1zaGVldC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCb3R0b21TaGVldEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2JvdHRvbS1zaGVldFwiXG4gICAgfVxuICB9LFxuICBcImJvdHRvbS1zaGVldC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2JvdHRvbS1zaGVldC9ib3R0b20tc2hlZXQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQm90dG9tIFNoZWV0IE92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQm90dG9tU2hlZXRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYm90dG9tLXNoZWV0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYm90dG9tLXNoZWV0LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJib3R0b20tc2hlZXQtb3ZlcnZpZXctZXhhbXBsZS1zaGVldC5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJib3R0b20tc2hlZXQtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJCb3R0b21TaGVldE92ZXJ2aWV3RXhhbXBsZVNoZWV0XCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJib3R0b20tc2hlZXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkJvdHRvbVNoZWV0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvYm90dG9tLXNoZWV0XCJcbiAgICB9XG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2VcIixcbiAgICBcInRpdGxlXCI6IFwiQnV0dG9uIHRvZ2dsZSBhcHBlYXJhbmNlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQnV0dG9uVG9nZ2xlQXBwZWFyYW5jZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJidXR0b24tdG9nZ2xlLWFwcGVhcmFuY2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25Ub2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgICB9XG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1leGNsdXNpdmVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlL2J1dHRvbi10b2dnbGUtZXhjbHVzaXZlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkV4Y2x1c2l2ZSBzZWxlY3Rpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25Ub2dnbGVFeGNsdXNpdmVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJ1dHRvbi10b2dnbGUtZXhjbHVzaXZlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1leGNsdXNpdmUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtZXhjbHVzaXZlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJidXR0b24tdG9nZ2xlLWV4Y2x1c2l2ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1leGNsdXNpdmUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkJ1dHRvblRvZ2dsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJidXR0b24tdG9nZ2xlLWZvcm1zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLWZvcm1zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJ1dHRvbi10b2dnbGVzIHdpdGggZm9ybXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25Ub2dnbGVGb3Jtc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtZm9ybXMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJidXR0b24tdG9nZ2xlLWZvcm1zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJidXR0b24tdG9nZ2xlLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25Ub2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgICB9XG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEJ1dHRvblRvZ2dsZUhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25Ub2dnbGVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJidXR0b24tdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJidXR0b24tdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10b2dnbGUtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25Ub2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgICB9XG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1tb2RlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLW1vZGVcIixcbiAgICBcInRpdGxlXCI6IFwiQnV0dG9uIHRvZ2dsZSBzZWxlY3Rpb24gbW9kZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJ1dHRvblRvZ2dsZU1vZGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJ1dHRvbi10b2dnbGUtbW9kZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtbW9kZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10b2dnbGUtbW9kZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1tb2RlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25Ub2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgICB9XG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGUvYnV0dG9uLXRvZ2dsZS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBidXR0b24tdG9nZ2xlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJ1dHRvblRvZ2dsZU92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJidXR0b24tdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJ1dHRvbi10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkJ1dHRvblRvZ2dsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJidXR0b24taGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvbi9idXR0b24taGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0QnV0dG9uSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJ1dHRvbkhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJ1dHRvbi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJ1dHRvbi1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYnV0dG9uLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJ1dHRvbi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b25cIlxuICAgIH1cbiAgfSxcbiAgXCJidXR0b24tb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24vYnV0dG9uLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGJ1dHRvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25PdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJidXR0b24tb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b25cIlxuICAgIH1cbiAgfSxcbiAgXCJidXR0b24tdHlwZXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24vYnV0dG9uLXR5cGVzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJ1dHRvbiB2YXJpZXRpZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25UeXBlc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLXR5cGVzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLXR5cGVzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJidXR0b24tdHlwZXMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10eXBlcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXR5cGVzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJCdXR0b25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9idXR0b25cIlxuICAgIH1cbiAgfSxcbiAgXCJjYXJkLWFjdGlvbnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtYWN0aW9uc1wiLFxuICAgIFwidGl0bGVcIjogXCJDYXJkIHdpdGggYWN0aW9ucyBhbGlnbm1lbnQgb3B0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2FyZEFjdGlvbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNhcmQtYWN0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNhcmQtYWN0aW9ucy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNhcmQtYWN0aW9ucy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2FyZC1hY3Rpb25zLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDYXJkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2FyZFwiXG4gICAgfVxuICB9LFxuICBcImNhcmQtZmFuY3lcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtZmFuY3lcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIG11bHRpcGxlIHNlY3Rpb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2FyZEZhbmN5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjYXJkLWZhbmN5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2FyZC1mYW5jeS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2FyZC1mYW5jeS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1mYW5jeS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2FyZC1mYW5jeS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2FyZEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2NhcmRcIlxuICAgIH1cbiAgfSxcbiAgXCJjYXJkLWZvb3RlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NhcmQvY2FyZC1mb290ZXJcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIGZvb3RlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNhcmRGb290ZXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNhcmQtZm9vdGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2FyZC1mb290ZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNhcmQtZm9vdGVyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjYXJkLWZvb3Rlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2FyZC1mb290ZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNhcmRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jYXJkXCJcbiAgICB9XG4gIH0sXG4gIFwiY2FyZC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZC9jYXJkLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdENhcmRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2FyZEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNhcmQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNhcmQtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2FyZC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjYXJkLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNhcmRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jYXJkXCJcbiAgICB9XG4gIH0sXG4gIFwiY2FyZC1tZWRpYS1zaXplXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZC9jYXJkLW1lZGlhLXNpemVcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIG1lZGlhIHNpemVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkTWVkaWFTaXplRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNhcmQtbWVkaWEtc2l6ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1tZWRpYS1zaXplLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNhcmRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jYXJkXCJcbiAgICB9XG4gIH0sXG4gIFwiY2FyZC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NhcmQvY2FyZC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBjYXJkc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNhcmRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2FyZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNhcmQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjYXJkLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjYXJkLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDYXJkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2FyZFwiXG4gICAgfVxuICB9LFxuICBcImNhcmQtc3VidGl0bGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtc3VidGl0bGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIHN1Yi10aXRsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNhcmRTdWJ0aXRsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2FyZC1zdWJ0aXRsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNhcmQtc3VidGl0bGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNhcmQtc3VidGl0bGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNhcmQtc3VidGl0bGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNhcmQtc3VidGl0bGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNhcmRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jYXJkXCJcbiAgICB9XG4gIH0sXG4gIFwiY2hlY2tib3gtY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hlY2tib3gvY2hlY2tib3gtY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBjaGVja2JveFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNoZWNrYm94Q29uZmlndXJhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoZWNrYm94LWNvbmZpZ3VyYWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hlY2tib3gtY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoZWNrYm94RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hlY2tib3hcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGVja2JveC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hlY2tib3gvY2hlY2tib3gtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Q2hlY2tib3hIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hlY2tib3hIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hlY2tib3gtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hlY2tib3gtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoZWNrYm94LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoZWNrYm94LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoZWNrYm94RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hlY2tib3hcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGVja2JveC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoZWNrYm94L2NoZWNrYm94LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGNoZWNrYm94ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGVja2JveE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoZWNrYm94LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGVja2JveC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hlY2tib3gtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoZWNrYm94LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDaGVja2JveEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2NoZWNrYm94XCJcbiAgICB9XG4gIH0sXG4gIFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGVja2JveC9jaGVja2JveC1yZWFjdGl2ZS1mb3Jtc1wiLFxuICAgIFwidGl0bGVcIjogXCJDaGVja2JveGVzIHdpdGggcmVhY3RpdmUgZm9ybXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGVja2JveFJlYWN0aXZlRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoZWNrYm94LXJlYWN0aXZlLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoZWNrYm94LXJlYWN0aXZlLWZvcm1zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGVja2JveC1yZWFjdGl2ZS1mb3Jtcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoZWNrYm94RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hlY2tib3hcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGlwcy1hdXRvY29tcGxldGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1hdXRvY29tcGxldGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ2hpcHMgQXV0b2NvbXBsZXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNBdXRvY29tcGxldGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtYXV0b2NvbXBsZXRlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGlwcy1hdXRvY29tcGxldGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2hpcHNFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jaGlwc1wiXG4gICAgfVxuICB9LFxuICBcImNoaXBzLWF2YXRhclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzL2NoaXBzLWF2YXRhclwiLFxuICAgIFwidGl0bGVcIjogXCJDaGlwcyBhdmF0YXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0F2YXRhckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGlwcy1hdmF0YXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoaXBzLWF2YXRhci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDaGlwc0V4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgICB9XG4gIH0sXG4gIFwiY2hpcHMtZHJhZy1kcm9wXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtZHJhZy1kcm9wXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNoaXBzIERyYWcgYW5kIERyb3BcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0RyYWdEcm9wRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoaXBzLWRyYWctZHJvcC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtZHJhZy1kcm9wLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoaXBzRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGlwcy1mb3JtLWNvbnRyb2xcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1mb3JtLWNvbnRyb2xcIixcbiAgICBcInRpdGxlXCI6IFwiQ2hpcHMgd2l0aCBmb3JtIGNvbnRyb2xcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0Zvcm1Db250cm9sRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoaXBzLWZvcm0tY29udHJvbC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtZm9ybS1jb250cm9sLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoaXBzRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGlwcy1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Q2hpcHNIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoaXBzLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoaXBzRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGlwcy1pbnB1dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzL2NoaXBzLWlucHV0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNoaXBzIHdpdGggaW5wdXRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0lucHV0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoaXBzLWlucHV0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGlwcy1pbnB1dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtaW5wdXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWlucHV0LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJDaGlwc0V4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgICB9XG4gIH0sXG4gIFwiY2hpcHMtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBjaGlwc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNoaXBzT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoaXBzLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGlwcy1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNoaXBzRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICAgIH1cbiAgfSxcbiAgXCJjaGlwcy1zdGFja2VkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtc3RhY2tlZFwiLFxuICAgIFwidGl0bGVcIjogXCJTdGFja2VkIGNoaXBzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNTdGFja2VkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1zdGFja2VkLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ2hpcHNFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jaGlwc1wiXG4gICAgfVxuICB9LFxuICBcImVsZXZhdGlvbi1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NvcmUvZWxldmF0aW9uLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkVsZXZhdGlvbiBDU1MgY2xhc3Nlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkVsZXZhdGlvbk92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImVsZXZhdGlvbi1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZWxldmF0aW9uLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkNvcmVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9jb3JlXCJcbiAgICB9XG4gIH0sXG4gIFwicmlwcGxlLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY29yZS9yaXBwbGUtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiTWF0UmlwcGxlIGJhc2ljIHVzYWdlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUmlwcGxlT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInJpcHBsZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInJpcHBsZS1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicmlwcGxlLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJyaXBwbGUtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInJpcHBsZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiQ29yZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2NvcmVcIlxuICAgIH1cbiAgfSxcbiAgXCJkYXRlLXJhbmdlLXBpY2tlci1jb21wYXJpc29uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlLXJhbmdlLXBpY2tlci1jb21wYXJpc29uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGUgcmFuZ2UgcGlja2VyIGNvbXBhcmlzb24gcmFuZ2VzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZVJhbmdlUGlja2VyQ29tcGFyaXNvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb24tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb24tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLWZvcm1zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGUgcmFuZ2UgcGlja2VyIGZvcm1zIGludGVncmF0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZVJhbmdlUGlja2VyRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlLXJhbmdlLXBpY2tlci1mb3Jtcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZS1yYW5nZS1waWNrZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGRhdGUgcmFuZ2UgcGlja2VyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZVJhbmdlUGlja2VyT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlLXJhbmdlLXBpY2tlci1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZS1yYW5nZS1waWNrZXItc2VsZWN0aW9uLXN0cmF0ZWd5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3lcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZSByYW5nZSBwaWNrZXIgd2l0aCBjdXN0b20gYSBzZWxlY3Rpb24gc3RyYXRlZ3lcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlUmFuZ2VQaWNrZXJTZWxlY3Rpb25TdHJhdGVneUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItc2VsZWN0aW9uLXN0cmF0ZWd5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItc2VsZWN0aW9uLXN0cmF0ZWd5LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItc2VsZWN0aW9uLXN0cmF0ZWd5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3ktZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1hY3Rpb25zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWFjdGlvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBhY3Rpb24gYnV0dG9uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJBY3Rpb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItYWN0aW9ucy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1hY3Rpb25zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1hcGlcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItYXBpXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgb3BlbiBtZXRob2RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyQXBpRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWFwaS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItYXBpLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWFwaS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1hcGktZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItYXBpLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItY29sb3JcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItY29sb3JcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBwYWxldHRlIGNvbG9yc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJDb2xvckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1jb2xvci1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItY29sb3ItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItY29sb3ItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItY29sb3ItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItY29sb3ItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1jdXN0b20taGVhZGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWN1c3RvbS1oZWFkZXJcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGN1c3RvbSBjYWxlbmRhciBoZWFkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyQ3VzdG9tSGVhZGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJFeGFtcGxlSGVhZGVyXCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1jdXN0b20taWNvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1jdXN0b20taWNvblwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHdpdGggY3VzdG9tIGljb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyQ3VzdG9tSWNvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1jdXN0b20taWNvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItY3VzdG9tLWljb24tZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1pY29uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1pY29uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItZGF0ZS1jbGFzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1kYXRlLWNsYXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgd2l0aCBjdXN0b20gZGF0ZSBjbGFzc2VzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckRhdGVDbGFzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1kYXRlLWNsYXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1kYXRlLWNsYXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWRhdGUtY2xhc3MtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItZGF0ZS1jbGFzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1kYXRlLWNsYXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItZGlzYWJsZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItZGlzYWJsZWRcIixcbiAgICBcInRpdGxlXCI6IFwiRGlzYWJsZWQgZGF0ZXBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJEaXNhYmxlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItZGlzYWJsZWQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItZXZlbnRzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWV2ZW50c1wiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIGlucHV0IGFuZCBjaGFuZ2UgZXZlbnRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckV2ZW50c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1ldmVudHMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWV2ZW50cy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1ldmVudHMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItZXZlbnRzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWV2ZW50cy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGF0ZXBpY2tlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJkYXRlcGlja2VyLWZpbHRlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1maWx0ZXJcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGZpbHRlciB2YWxpZGF0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckZpbHRlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1maWx0ZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWZpbHRlci1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItZmlsdGVyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWZpbHRlci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGF0ZXBpY2tlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJkYXRlcGlja2VyLWZvcm1hdHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItZm9ybWF0c1wiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHdpdGggY3VzdG9tIGZvcm1hdHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyRm9ybWF0c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWZvcm1hdHMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdERhdGVwaWNrZXJJbnB1dEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGF0ZXBpY2tlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1pbmxpbmUtY2FsZW5kYXJcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBpbmxpbmUgY2FsZW5kYXIgZXhhbXBsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJJbmxpbmVDYWxlbmRhckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1pbmxpbmUtY2FsZW5kYXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1pbmxpbmUtY2FsZW5kYXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItaW5saW5lLWNhbGVuZGFyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGF0ZXBpY2tlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJkYXRlcGlja2VyLWxvY2FsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1sb2NhbGVcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGRpZmZlcmVudCBsb2NhbGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyTG9jYWxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWxvY2FsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItbG9jYWxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWxvY2FsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1sb2NhbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItbG9jYWxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItbWluLW1heFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1taW4tbWF4XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgd2l0aCBtaW4gJiBtYXggdmFsaWRhdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJNaW5NYXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItbWluLW1heC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItbWluLW1heC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItbWluLW1heC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1taW4tbWF4LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItbW9tZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLW1vbWVudFwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHRoYXQgdXNlcyBNb21lbnQuanMgZGF0ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyTW9tZW50RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLW1vbWVudC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItbW9tZW50LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1tb21lbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItbW9tZW50LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgZGF0ZXBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItc3RhcnQtdmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1zdGFydC12aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgc3RhcnQgZGF0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJTdGFydFZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItc3RhcnQtdmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItc3RhcnQtdmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItc3RhcnQtdmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1zdGFydC12aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItdG91Y2hcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItdG91Y2hcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB0b3VjaCBVSVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJUb3VjaEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci10b3VjaC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItdG91Y2gtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLXRvdWNoLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLXRvdWNoLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRhdGVwaWNrZXItdmFsdWVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItdmFsdWVcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBzZWxlY3RlZCB2YWx1ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJWYWx1ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci12YWx1ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRhdGVwaWNrZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGF0ZXBpY2tlci12aWV3cy1zZWxlY3Rpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItdmlld3Mtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgZW11bGF0aW5nIGEgWWVhciBhbmQgbW9udGggcGlja2VyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlclZpZXdzU2VsZWN0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLXZpZXdzLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItdmlld3Mtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLXZpZXdzLXNlbGVjdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci12aWV3cy1zZWxlY3Rpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItdmlld3Mtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEYXRlcGlja2VyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gICAgfVxuICB9LFxuICBcImRpYWxvZy1jb250ZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGlhbG9nL2RpYWxvZy1jb250ZW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRpYWxvZyB3aXRoIGhlYWRlciwgc2Nyb2xsYWJsZSBjb250ZW50IGFuZCBhY3Rpb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGlhbG9nQ29udGVudEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGlhbG9nLWNvbnRlbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkaWFsb2ctY29udGVudC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGlhbG9nLWNvbnRlbnQtZXhhbXBsZS1kaWFsb2cuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGlhbG9nLWNvbnRlbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJEaWFsb2dDb250ZW50RXhhbXBsZURpYWxvZ1wiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGlhbG9nLWNvbnRlbnQtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRpYWxvZ0V4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2RpYWxvZ1wiXG4gICAgfVxuICB9LFxuICBcImRpYWxvZy1kYXRhXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGlhbG9nL2RpYWxvZy1kYXRhXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkluamVjdGluZyBkYXRhIHdoZW4gb3BlbmluZyBhIGRpYWxvZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0RhdGFFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1kYXRhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWRhdGEtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1kYXRhLWV4YW1wbGUtZGlhbG9nLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpYWxvZy1kYXRhLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiRGlhbG9nRGF0YUV4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1kYXRhLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEaWFsb2dFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICAgIH1cbiAgfSxcbiAgXCJkaWFsb2ctZWxlbWVudHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2cvZGlhbG9nLWVsZW1lbnRzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRpYWxvZyBlbGVtZW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0VsZW1lbnRzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaWFsb2ctZWxlbWVudHMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkaWFsb2ctZWxlbWVudHMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1lbGVtZW50cy1leGFtcGxlLWRpYWxvZy5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkaWFsb2ctZWxlbWVudHMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJEaWFsb2dFbGVtZW50c0V4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1lbGVtZW50cy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGlhbG9nRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGlhbG9nXCJcbiAgICB9XG4gIH0sXG4gIFwiZGlhbG9nLWZyb20tbWVudVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctZnJvbS1tZW51XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRpYWxvZyBsYXVuY2hlZCBmcm9tIGEgbWVudVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0Zyb21NZW51RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaWFsb2ctZnJvbS1tZW51LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWZyb20tbWVudS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGlhbG9nLWZyb20tbWVudS1leGFtcGxlLWRpYWxvZy5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkaWFsb2ctZnJvbS1tZW51LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiRGlhbG9nRnJvbU1lbnVFeGFtcGxlRGlhbG9nXCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkaWFsb2ctZnJvbS1tZW51LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEaWFsb2dFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICAgIH1cbiAgfSxcbiAgXCJkaWFsb2ctaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0RGlhbG9nSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0hhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGlhbG9nLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEaWFsb2dFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICAgIH1cbiAgfSxcbiAgXCJkaWFsb2ctb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2cvZGlhbG9nLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRpYWxvZyBPdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ092ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJkaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkaWFsb2ctb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJEaWFsb2dPdmVydmlld0V4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRGlhbG9nRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZGlhbG9nXCJcbiAgICB9XG4gIH0sXG4gIFwiZGl2aWRlci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGl2aWRlci9kaXZpZGVyLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdERpdmlkZXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGl2aWRlckhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpdmlkZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRpdmlkZXItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGl2aWRlci1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGl2aWRlci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkaXZpZGVyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRpdmlkZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kaXZpZGVyXCJcbiAgICB9XG4gIH0sXG4gIFwiZGl2aWRlci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpdmlkZXIvZGl2aWRlci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBkaXZpZGVyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGl2aWRlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaXZpZGVyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGl2aWRlci1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpdmlkZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpdmlkZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkRpdmlkZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9kaXZpZGVyXCJcbiAgICB9XG4gIH0sXG4gIFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb24vZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGxcIixcbiAgICBcInRpdGxlXCI6IFwiQWNjb3JkaW9uIHdpdGggZXhwYW5kL2NvbGxhcHNlIGFsbCB0b2dnbGVzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRXhwYW5zaW9uRXhwYW5kQ29sbGFwc2VBbGxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImV4cGFuc2lvbi1leHBhbmQtY29sbGFwc2UtYWxsLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4cGFuc2lvbi1leHBhbmQtY29sbGFwc2UtYWxsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJleHBhbnNpb24tZXhwYW5kLWNvbGxhcHNlLWFsbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkV4cGFuc2lvbkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2V4cGFuc2lvblwiXG4gICAgfVxuICB9LFxuICBcImV4cGFuc2lvbi1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZXhwYW5zaW9uL2V4cGFuc2lvbi1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRFeHBhbnNpb25QYW5lbEhhcm5lc3MgYW5kIE1hdEFjY29yZGlvbkhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJFeHBhbnNpb25IYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJleHBhbnNpb24taGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImV4cGFuc2lvbi1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleHBhbnNpb24taGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImV4cGFuc2lvbi1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJleHBhbnNpb24taGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRXhwYW5zaW9uRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZXhwYW5zaW9uXCJcbiAgICB9XG4gIH0sXG4gIFwiZXhwYW5zaW9uLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZXhwYW5zaW9uL2V4cGFuc2lvbi1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBleHBhbnNpb24gcGFuZWxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJFeHBhbnNpb25PdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZXhwYW5zaW9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZXhwYW5zaW9uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleHBhbnNpb24tb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImV4cGFuc2lvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZXhwYW5zaW9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJFeHBhbnNpb25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9leHBhbnNpb25cIlxuICAgIH1cbiAgfSxcbiAgXCJleHBhbnNpb24tc3RlcHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb24vZXhwYW5zaW9uLXN0ZXBzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkV4cGFuc2lvbiBwYW5lbCBhcyBhY2NvcmRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJFeHBhbnNpb25TdGVwc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZXhwYW5zaW9uLXN0ZXBzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZXhwYW5zaW9uLXN0ZXBzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleHBhbnNpb24tc3RlcHMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImV4cGFuc2lvbi1zdGVwcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZXhwYW5zaW9uLXN0ZXBzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJFeHBhbnNpb25FeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9leHBhbnNpb25cIlxuICAgIH1cbiAgfSxcbiAgXCJmb3JtLWZpZWxkLWFwcGVhcmFuY2VcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtYXBwZWFyYW5jZVwiLFxuICAgIFwidGl0bGVcIjogXCJGb3JtIGZpZWxkIGFwcGVhcmFuY2UgdmFyaWFudHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb3JtRmllbGRBcHBlYXJhbmNlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJmb3JtLWZpZWxkLWFwcGVhcmFuY2UtZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb3JtLWZpZWxkLWFwcGVhcmFuY2UtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWFwcGVhcmFuY2UtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtYXBwZWFyYW5jZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2xcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2xcIixcbiAgICBcInRpdGxlXCI6IFwiRm9ybSBmaWVsZCB3aXRoIGN1c3RvbSB0ZWxlcGhvbmUgbnVtYmVyIGlucHV0IGNvbnRyb2wuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkQ3VzdG9tQ29udHJvbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1jdXN0b20tY29udHJvbC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2wtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4YW1wbGUtdGVsLWlucHV0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleGFtcGxlLXRlbC1pbnB1dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1jdXN0b20tY29udHJvbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIk15VGVsSW5wdXRcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkZvcm1GaWVsZEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICAgIH1cbiAgfSxcbiAgXCJmb3JtLWZpZWxkLWVycm9yXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZC9mb3JtLWZpZWxkLWVycm9yXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBlcnJvciBtZXNzYWdlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZEVycm9yRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJmb3JtLWZpZWxkLWVycm9yLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9ybS1maWVsZC1lcnJvci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1lcnJvci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1lcnJvci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZm9ybS1maWVsZC1lcnJvci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRGb3JtRmllbGRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9ybS1maWVsZC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJmb3JtLWZpZWxkLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtaGludFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1oaW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBoaW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZEhpbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1oaW50LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWhpbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtbGFiZWxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtbGFiZWxcIixcbiAgICBcInRpdGxlXCI6IFwiRm9ybSBmaWVsZCB3aXRoIGxhYmVsXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkTGFiZWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtbGFiZWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb3JtLWZpZWxkLWxhYmVsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJmb3JtLWZpZWxkLWxhYmVsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWxhYmVsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb3JtLWZpZWxkLWxhYmVsLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJGb3JtRmllbGRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkXCJcbiAgICB9XG4gIH0sXG4gIFwiZm9ybS1maWVsZC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJTaW1wbGUgZm9ybSBmaWVsZFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJmb3JtLWZpZWxkLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9ybS1maWVsZC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZm9ybS1maWVsZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1wcmVmaXgtc3VmZml4XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBwcmVmaXggJiBzdWZmaXhcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb3JtRmllbGRQcmVmaXhTdWZmaXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1wcmVmaXgtc3VmZml4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLXByZWZpeC1zdWZmaXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImZvcm0tZmllbGQtdGhlbWluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC10aGVtaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgdGhlbWluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZFRoZW1pbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtdGhlbWluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtdGhlbWluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC10aGVtaW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLXRoZW1pbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtdGhlbWluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiRm9ybUZpZWxkRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gICAgfVxuICB9LFxuICBcImdyaWQtbGlzdC1keW5hbWljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZ3JpZC1saXN0L2dyaWQtbGlzdC1keW5hbWljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkR5bmFtaWMgZ3JpZC1saXN0XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiR3JpZExpc3REeW5hbWljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJncmlkLWxpc3QtZHluYW1pYy1leGFtcGxlLnRzXCIsXG4gICAgICBcImdyaWQtbGlzdC1keW5hbWljLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZ3JpZC1saXN0LWR5bmFtaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImdyaWQtbGlzdC1keW5hbWljLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJHcmlkTGlzdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gICAgfVxuICB9LFxuICBcImdyaWQtbGlzdC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZ3JpZC1saXN0L2dyaWQtbGlzdC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRHcmlkTGlzdEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJHcmlkTGlzdEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImdyaWQtbGlzdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZ3JpZC1saXN0LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImdyaWQtbGlzdC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZ3JpZC1saXN0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImdyaWQtbGlzdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJHcmlkTGlzdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gICAgfVxuICB9LFxuICBcImdyaWQtbGlzdC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdC9ncmlkLWxpc3Qtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgZ3JpZC1saXN0XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiR3JpZExpc3RPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZ3JpZC1saXN0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZ3JpZC1saXN0LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJncmlkLWxpc3Qtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImdyaWQtbGlzdC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZ3JpZC1saXN0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJHcmlkTGlzdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gICAgfVxuICB9LFxuICBcImljb24taGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2ljb24vaWNvbi1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRJY29uSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkljb25IYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJpY29uLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJpY29uLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImljb24taGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImljb24taGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaWNvbi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJY29uRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvaWNvblwiXG4gICAgfVxuICB9LFxuICBcImljb24tb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pY29uL2ljb24tb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgaWNvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJJY29uT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImljb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJpY29uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaWNvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaWNvbi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSWNvbkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2ljb25cIlxuICAgIH1cbiAgfSxcbiAgXCJpY29uLXN2Z1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2ljb24vaWNvbi1zdmdcIixcbiAgICBcInRpdGxlXCI6IFwiU1ZHIGljb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSWNvblN2Z0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaWNvbi1zdmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJpY29uLXN2Zy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImljb24tc3ZnLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpY29uLXN2Zy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSWNvbkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2ljb25cIlxuICAgIH1cbiAgfSxcbiAgXCJpbnB1dC1jbGVhcmFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pbnB1dC9pbnB1dC1jbGVhcmFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiSW5wdXQgd2l0aCBhIGNsZWFyIGJ1dHRvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0Q2xlYXJhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJpbnB1dC1jbGVhcmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL2lucHV0LWNsZWFyYWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi9pbnB1dC1jbGVhcmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LWNsZWFyYWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtY2xlYXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJbnB1dEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgICB9XG4gIH0sXG4gIFwiaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWVycm9yLXN0YXRlLW1hdGNoZXJcIixcbiAgICBcInRpdGxlXCI6IFwiSW5wdXQgd2l0aCBhIGN1c3RvbSBFcnJvclN0YXRlTWF0Y2hlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0RXJyb3JTdGF0ZU1hdGNoZXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImlucHV0LWVycm9yLXN0YXRlLW1hdGNoZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL2lucHV0LWVycm9yLXN0YXRlLW1hdGNoZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSW5wdXRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9pbnB1dFwiXG4gICAgfVxuICB9LFxuICBcImlucHV0LWVycm9yc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWVycm9yc1wiLFxuICAgIFwidGl0bGVcIjogXCJJbnB1dCB3aXRoIGVycm9yIG1lc3NhZ2VzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRFcnJvcnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImlucHV0LWVycm9ycy1leGFtcGxlLnRzXCIsXG4gICAgICBcImlucHV0LWVycm9ycy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaW5wdXQtZXJyb3JzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpbnB1dC1lcnJvcnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImlucHV0LWVycm9ycy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSW5wdXRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9pbnB1dFwiXG4gICAgfVxuICB9LFxuICBcImlucHV0LWZvcm1cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pbnB1dC9pbnB1dC1mb3JtXCIsXG4gICAgXCJ0aXRsZVwiOiBcIklucHV0cyBpbiBhIGZvcm1cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJJbnB1dEZvcm1FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImlucHV0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCJpbnB1dC1mb3JtLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJpbnB1dC1mb3JtLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpbnB1dC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpbnB1dC1mb3JtLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJbnB1dEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgICB9XG4gIH0sXG4gIFwiaW5wdXQtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdElucHV0SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0SGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImlucHV0LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImlucHV0LWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpbnB1dC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpbnB1dC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJbnB1dEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgICB9XG4gIH0sXG4gIFwiaW5wdXQtaGludFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWhpbnRcIixcbiAgICBcInRpdGxlXCI6IFwiSW5wdXQgd2l0aCBoaW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0SGludEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgICBcImlucHV0LWhpbnQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImlucHV0LWhpbnQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LWhpbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImlucHV0LWhpbnQtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIklucHV0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICAgIH1cbiAgfSxcbiAgXCJpbnB1dC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIElucHV0c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImlucHV0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiaW5wdXQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImlucHV0LW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpbnB1dC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIklucHV0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICAgIH1cbiAgfSxcbiAgXCJpbnB1dC1wcmVmaXgtc3VmZml4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtcHJlZml4LXN1ZmZpeFwiLFxuICAgIFwidGl0bGVcIjogXCJJbnB1dHMgd2l0aCBwcmVmaXhlcyBhbmQgc3VmZml4ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJJbnB1dFByZWZpeFN1ZmZpeEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgICBcImlucHV0LXByZWZpeC1zdWZmaXgtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImlucHV0LXByZWZpeC1zdWZmaXgtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LXByZWZpeC1zdWZmaXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImlucHV0LXByZWZpeC1zdWZmaXgtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIklucHV0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICAgIH1cbiAgfSxcbiAgXCJsaXN0LWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9saXN0L2xpc3QtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0TGlzdEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJMaXN0SGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibGlzdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwibGlzdC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJsaXN0LWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJsaXN0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImxpc3QtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTGlzdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2xpc3RcIlxuICAgIH1cbiAgfSxcbiAgXCJsaXN0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbGlzdC9saXN0LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGxpc3RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJMaXN0T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImxpc3Qtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJsaXN0LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibGlzdC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTGlzdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL2xpc3RcIlxuICAgIH1cbiAgfSxcbiAgXCJsaXN0LXNlY3Rpb25zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbGlzdC9saXN0LXNlY3Rpb25zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Qgd2l0aCBzZWN0aW9uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkxpc3RTZWN0aW9uc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibGlzdC1zZWN0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcImxpc3Qtc2VjdGlvbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImxpc3Qtc2VjdGlvbnMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImxpc3Qtc2VjdGlvbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImxpc3Qtc2VjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkxpc3RFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9saXN0XCJcbiAgICB9XG4gIH0sXG4gIFwibGlzdC1zZWxlY3Rpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9saXN0L2xpc3Qtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Qgd2l0aCBzZWxlY3Rpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJMaXN0U2VsZWN0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJsaXN0LXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImxpc3Qtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJsaXN0LXNlbGVjdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibGlzdC1zZWxlY3Rpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImxpc3Qtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJMaXN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvbGlzdFwiXG4gICAgfVxuICB9LFxuICBcImxpc3Qtc2luZ2xlLXNlbGVjdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2xpc3QvbGlzdC1zaW5nbGUtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Qgd2l0aCBzaW5nbGUgc2VsZWN0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTGlzdFNpbmdsZVNlbGVjdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJsaXN0LXNpbmdsZS1zZWxlY3Rpb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImxpc3Qtc2luZ2xlLXNlbGVjdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJMaXN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvbGlzdFwiXG4gICAgfVxuICB9LFxuICBcIm1lbnUtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL21lbnUvbWVudS1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRNZW51SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1lbnVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJtZW51LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZW51LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIm1lbnUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1lbnUtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibWVudS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJNZW51RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvbWVudVwiXG4gICAgfVxuICB9LFxuICBcIm1lbnUtaWNvbnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9tZW51L21lbnUtaWNvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiTWVudSB3aXRoIGljb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWVudUljb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJtZW51LWljb25zLWV4YW1wbGUudHNcIixcbiAgICAgIFwibWVudS1pY29ucy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1lbnUtaWNvbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcIm1lbnUtaWNvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIk1lbnVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9tZW51XCJcbiAgICB9XG4gIH0sXG4gIFwibWVudS1uZXN0ZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9tZW51L21lbnUtbmVzdGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk5lc3RlZCBtZW51XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWVudU5lc3RlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibWVudS1uZXN0ZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZW51LW5lc3RlZC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1lbnUtbmVzdGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtZW51LW5lc3RlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWVudUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICAgIH1cbiAgfSxcbiAgXCJtZW51LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbWVudS9tZW51LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIG1lbnVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJNZW51T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm1lbnUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZW51LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWVudS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibWVudS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWVudUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICAgIH1cbiAgfSxcbiAgXCJtZW51LXBvc2l0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbWVudS9tZW51LXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1lbnUgcG9zaXRpb25pbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJNZW51UG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm1lbnUtcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZW51LXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWVudS1wb3NpdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibWVudS1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTWVudUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICAgIH1cbiAgfSxcbiAgXCJwYWdpbmF0b3ItY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yL3BhZ2luYXRvci1jb25maWd1cmFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ29uZmlndXJhYmxlIHBhZ2luYXRvclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlBhZ2luYXRvckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicGFnaW5hdG9yLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInBhZ2luYXRvci1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInBhZ2luYXRvci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBhZ2luYXRvci1jb25maWd1cmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBhZ2luYXRvci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlBhZ2luYXRvckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvclwiXG4gICAgfVxuICB9LFxuICBcInBhZ2luYXRvci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yL3BhZ2luYXRvci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRQYWdpbmF0b3JIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUGFnaW5hdG9ySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwYWdpbmF0b3ItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwYWdpbmF0b3ItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlBhZ2luYXRvckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvclwiXG4gICAgfVxuICB9LFxuICBcInBhZ2luYXRvci1pbnRsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yL3BhZ2luYXRvci1pbnRsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlBhZ2luYXRvciBpbnRlcm5hdGlvbmFsaXphdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlBhZ2luYXRvckludGxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInBhZ2luYXRvci1pbnRsLWV4YW1wbGUudHNcIixcbiAgICAgIFwicGFnaW5hdG9yLWludGwtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwYWdpbmF0b3ItaW50bC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicGFnaW5hdG9yLWludGwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlBhZ2luYXRvckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvclwiXG4gICAgfVxuICB9LFxuICBcInBhZ2luYXRvci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvci9wYWdpbmF0b3Itb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiUGFnaW5hdG9yXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUGFnaW5hdG9yT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInBhZ2luYXRvci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInBhZ2luYXRvci1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBhZ2luYXRvci1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicGFnaW5hdG9yLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJQYWdpbmF0b3JFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9wYWdpbmF0b3JcIlxuICAgIH1cbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItYnVmZmVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1idWZmZXJcIixcbiAgICBcInRpdGxlXCI6IFwiQnVmZmVyIHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFyQnVmZmVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItYnVmZmVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWJ1ZmZlci1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1idWZmZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1idWZmZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlByb2dyZXNzQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwicHJvZ3Jlc3MtYmFyLWNvbmZpZ3VyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBwcm9ncmVzcy1iYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc0JhckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlByb2dyZXNzQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwicHJvZ3Jlc3MtYmFyLWRldGVybWluYXRlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1kZXRlcm1pbmF0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJEZXRlcm1pbmF0ZSBwcm9ncmVzcy1iYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc0JhckRldGVybWluYXRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1kZXRlcm1pbmF0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUHJvZ3Jlc3NCYXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXJcIlxuICAgIH1cbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0UHJvZ3Jlc3NCYXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUHJvZ3Jlc3NCYXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUHJvZ3Jlc3NCYXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXJcIlxuICAgIH1cbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJJbmRldGVybWluYXRlIHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFySW5kZXRlcm1pbmF0ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWluZGV0ZXJtaW5hdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1pbmRldGVybWluYXRlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUHJvZ3Jlc3NCYXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXJcIlxuICAgIH1cbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItcXVlcnlcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXIvcHJvZ3Jlc3MtYmFyLXF1ZXJ5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlF1ZXJ5IHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFyUXVlcnlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicHJvZ3Jlc3MtYmFyLXF1ZXJ5LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJQcm9ncmVzc0JhckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhclwiXG4gICAgfVxuICB9LFxuICBcInByb2dyZXNzLXNwaW5uZXItY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJDb25maWd1cmFibGUgcHJvZ3Jlc3Mgc3Bpbm5lclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzU3Bpbm5lckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLXNwaW5uZXItY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUHJvZ3Jlc3NTcGlubmVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lclwiXG4gICAgfVxuICB9LFxuICBcInByb2dyZXNzLXNwaW5uZXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXIvcHJvZ3Jlc3Mtc3Bpbm5lci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRQcm9ncmVzc1NwaW5uZXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUHJvZ3Jlc3NTcGlubmVySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwcm9ncmVzcy1zcGlubmVyLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLXNwaW5uZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiUHJvZ3Jlc3NTcGlubmVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lclwiXG4gICAgfVxuICB9LFxuICBcInByb2dyZXNzLXNwaW5uZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyL3Byb2dyZXNzLXNwaW5uZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgcHJvZ3Jlc3Mtc3Bpbm5lclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzU3Bpbm5lck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLXNwaW5uZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLXNwaW5uZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlByb2dyZXNzU3Bpbm5lckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJyYWRpby1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcmFkaW8vcmFkaW8taGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0UmFkaW9IYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUmFkaW9IYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJyYWRpby1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8taGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicmFkaW8taGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInJhZGlvLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInJhZGlvLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlJhZGlvRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcmFkaW9cIlxuICAgIH1cbiAgfSxcbiAgXCJyYWRpby1uZy1tb2RlbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvL3JhZGlvLW5nLW1vZGVsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlJhZGlvcyB3aXRoIG5nTW9kZWxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJSYWRpb05nTW9kZWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInJhZGlvLW5nLW1vZGVsLWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8tbmctbW9kZWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInJhZGlvLW5nLW1vZGVsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJyYWRpby1uZy1tb2RlbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicmFkaW8tbmctbW9kZWwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlJhZGlvRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcmFkaW9cIlxuICAgIH1cbiAgfSxcbiAgXCJyYWRpby1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvL3JhZGlvLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHJhZGlvc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlJhZGlvT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInJhZGlvLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8tb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInJhZGlvLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJyYWRpby1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicmFkaW8tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlJhZGlvRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvcmFkaW9cIlxuICAgIH1cbiAgfSxcbiAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWN1c3RvbS10cmlnZ2VyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIGN1c3RvbSB0cmlnZ2VyIHRleHRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RDdXN0b21UcmlnZ2VyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNlbGVjdC1jdXN0b20tdHJpZ2dlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LWN1c3RvbS10cmlnZ2VyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNlbGVjdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gICAgfVxuICB9LFxuICBcInNlbGVjdC1kaXNhYmxlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtZGlzYWJsZWRcIixcbiAgICBcInRpdGxlXCI6IFwiRGlzYWJsZWQgc2VsZWN0XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0RGlzYWJsZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1kaXNhYmxlZC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1kaXNhYmxlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTZWxlY3RFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICAgIH1cbiAgfSxcbiAgXCJzZWxlY3QtZXJyb3Itc3RhdGUtbWF0Y2hlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtZXJyb3Itc3RhdGUtbWF0Y2hlclwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBhIGN1c3RvbSBFcnJvclN0YXRlTWF0Y2hlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdEVycm9yU3RhdGVNYXRjaGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LWVycm9yLXN0YXRlLW1hdGNoZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTZWxlY3RFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICAgIH1cbiAgfSxcbiAgXCJzZWxlY3QtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtZm9ybVwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3QgaW4gYSBmb3JtXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0Rm9ybUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtZm9ybS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFNlbGVjdEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzZWxlY3QtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LWhpbnQtZXJyb3JcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWhpbnQtZXJyb3JcIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IHdpdGggZm9ybSBmaWVsZCBmZWF0dXJlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdEhpbnRFcnJvckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWhpbnQtZXJyb3ItZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtaGludC1lcnJvci1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1oaW50LWVycm9yLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtaGludC1lcnJvci1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LWluaXRpYWwtdmFsdWVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWluaXRpYWwtdmFsdWVcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgc2VsZWN0IHdpdGggaW5pdGlhbCB2YWx1ZSBhbmQgbm8gZm9ybVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdEluaXRpYWxWYWx1ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWluaXRpYWwtdmFsdWUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtaW5pdGlhbC12YWx1ZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1pbml0aWFsLXZhbHVlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtaW5pdGlhbC12YWx1ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LW11bHRpcGxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1tdWx0aXBsZVwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBtdWx0aXBsZSBzZWxlY3Rpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RNdWx0aXBsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LW11bHRpcGxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LW11bHRpcGxlLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LW11bHRpcGxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtbXVsdGlwbGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNlbGVjdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gICAgfVxuICB9LFxuICBcInNlbGVjdC1uby1yaXBwbGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LW5vLXJpcHBsZVwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBubyBvcHRpb24gcmlwcGxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0Tm9SaXBwbGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1uby1yaXBwbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3Qtbm8tcmlwcGxlLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LW5vLXJpcHBsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LW5vLXJpcHBsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LW9wdGdyb3VwXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1vcHRncm91cFwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBvcHRpb24gZ3JvdXBzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0T3B0Z3JvdXBFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LW9wdGdyb3VwLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTZWxlY3RFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICAgIH1cbiAgfSxcbiAgXCJzZWxlY3Qtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHNlbGVjdFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3Qtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3Qtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3Qtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LXBhbmVsLWNsYXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1wYW5lbC1jbGFzc1wiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBjdXN0b20gcGFuZWwgc3R5bGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdFBhbmVsQ2xhc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1wYW5lbC1jbGFzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1wYW5lbC1jbGFzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2VsZWN0LXBhbmVsLWNsYXNzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3QtcGFuZWwtY2xhc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1wYW5lbC1jbGFzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LXJlYWN0aXZlLWZvcm1cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LXJlYWN0aXZlLWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IGluIGEgcmVhY3RpdmUgZm9ybVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdFJlYWN0aXZlRm9ybUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LXJlYWN0aXZlLWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtcmVhY3RpdmUtZm9ybS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1yZWFjdGl2ZS1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtcmVhY3RpdmUtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2VsZWN0RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgICB9XG4gIH0sXG4gIFwic2VsZWN0LXJlc2V0XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1yZXNldFwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCByZXNldCBvcHRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RSZXNldEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LXJlc2V0LWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LXJlc2V0LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LXJlc2V0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtcmVzZXQtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNlbGVjdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gICAgfVxuICB9LFxuICBcInNlbGVjdC12YWx1ZS1iaW5kaW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC12YWx1ZS1iaW5kaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIDItd2F5IHZhbHVlIGJpbmRpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RWYWx1ZUJpbmRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LXZhbHVlLWJpbmRpbmctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3QtdmFsdWUtYmluZGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LXZhbHVlLWJpbmRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNlbGVjdEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gICAgfVxuICB9LFxuICBcInNpZGVuYXYtYXV0b3NpemVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtYXV0b3NpemVcIixcbiAgICBcInRpdGxlXCI6IFwiQXV0b3NpemUgc2lkZW5hdlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZBdXRvc2l6ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1hdXRvc2l6ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNpZGVuYXZFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgICB9XG4gIH0sXG4gIFwic2lkZW5hdi1iYWNrZHJvcFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1iYWNrZHJvcFwiLFxuICAgIFwidGl0bGVcIjogXCJEcmF3ZXIgd2l0aCBleHBsaWNpdCBiYWNrZHJvcCBzZXR0aW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdkJhY2tkcm9wRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LWJhY2tkcm9wLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1iYWNrZHJvcC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1iYWNrZHJvcC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1iYWNrZHJvcC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1iYWNrZHJvcC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2lkZW5hdkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICAgIH1cbiAgfSxcbiAgXCJzaWRlbmF2LWRpc2FibGUtY2xvc2VcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtZGlzYWJsZS1jbG9zZVwiLFxuICAgIFwidGl0bGVcIjogXCJTaWRlbmF2IHdpdGggY3VzdG9tIGVzY2FwZSBhbmQgYmFja2Ryb3AgY2xpY2sgYmVoYXZpb3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2RGlzYWJsZUNsb3NlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LWRpc2FibGUtY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LWRpc2FibGUtY2xvc2UtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtZGlzYWJsZS1jbG9zZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1kaXNhYmxlLWNsb3NlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LWRpc2FibGUtY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNpZGVuYXZFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgICB9XG4gIH0sXG4gIFwic2lkZW5hdi1kcmF3ZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtZHJhd2VyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGRyYXdlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZEcmF3ZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1kcmF3ZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LWRyYXdlci1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1kcmF3ZXItb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtZHJhd2VyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LWRyYXdlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2lkZW5hdkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICAgIH1cbiAgfSxcbiAgXCJzaWRlbmF2LWZpeGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LWZpeGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZpeGVkIHNpZGVuYXZcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2Rml4ZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNpZGVuYXYtZml4ZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTaWRlbmF2RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gICAgfVxuICB9LFxuICBcInNpZGVuYXYtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRTaWRlbmF2SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTaWRlbmF2RXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gICAgfVxuICB9LFxuICBcInNpZGVuYXYtbW9kZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1tb2RlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNpZGVuYXYgd2l0aCBjb25maWd1cmFibGUgbW9kZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZNb2RlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LW1vZGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LW1vZGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtbW9kZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1tb2RlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LW1vZGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNpZGVuYXZFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgICB9XG4gIH0sXG4gIFwic2lkZW5hdi1vcGVuLWNsb3NlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LW9wZW4tY2xvc2VcIixcbiAgICBcInRpdGxlXCI6IFwiU2lkZW5hdiBvcGVuICYgY2xvc2UgYmVoYXZpb3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2T3BlbkNsb3NlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtb3Blbi1jbG9zZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1vcGVuLWNsb3NlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNpZGVuYXZFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgICB9XG4gIH0sXG4gIFwic2lkZW5hdi1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBzaWRlbmF2XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdk92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2lkZW5hdkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICAgIH1cbiAgfSxcbiAgXCJzaWRlbmF2LXBvc2l0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkltcGxpY2l0IG1haW4gY29udGVudCB3aXRoIHR3byBzaWRlbmF2c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZQb3NpdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtcG9zaXRpb24tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtcG9zaXRpb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtcG9zaXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNpZGVuYXZFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgICB9XG4gIH0sXG4gIFwic2lkZW5hdi1yZXNwb25zaXZlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LXJlc3BvbnNpdmVcIixcbiAgICBcInRpdGxlXCI6IFwiUmVzcG9uc2l2ZSBzaWRlbmF2XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdlJlc3BvbnNpdmVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1yZXNwb25zaXZlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LXJlc3BvbnNpdmUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2lkZW5hdkV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICAgIH1cbiAgfSxcbiAgXCJzbGlkZS10b2dnbGUtY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGUtdG9nZ2xlL3NsaWRlLXRvZ2dsZS1jb25maWd1cmFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ29uZmlndXJhYmxlIHNsaWRlLXRvZ2dsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlVG9nZ2xlQ29uZmlndXJhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbGlkZS10b2dnbGUtY29uZmlndXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2xpZGVUb2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJzbGlkZS10b2dnbGUtZm9ybXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGUvc2xpZGUtdG9nZ2xlLWZvcm1zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNsaWRlLXRvZ2dsZSB3aXRoIGZvcm1zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2xpZGVUb2dnbGVGb3Jtc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi9zbGlkZS10b2dnbGUtZm9ybXMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vc2xpZGUtdG9nZ2xlLWZvcm1zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZS10b2dnbGUtZm9ybXMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNsaWRlLXRvZ2dsZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2xpZGVUb2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJzbGlkZS10b2dnbGUtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZS9zbGlkZS10b2dnbGUtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U2xpZGVUb2dnbGVIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2xpZGVUb2dnbGVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbGlkZS10b2dnbGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNsaWRlLXRvZ2dsZS1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbGlkZS10b2dnbGUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNsaWRlLXRvZ2dsZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZS10b2dnbGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2xpZGVUb2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJzbGlkZS10b2dnbGUtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGUvc2xpZGUtdG9nZ2xlLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHNsaWRlLXRvZ2dsZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbGlkZVRvZ2dsZU92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbGlkZS10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbGlkZS10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZS10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNsaWRlLXRvZ2dsZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2xpZGVUb2dnbGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGVcIlxuICAgIH1cbiAgfSxcbiAgXCJzbGlkZXItY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyL3NsaWRlci1jb25maWd1cmFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ29uZmlndXJhYmxlIHNsaWRlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGVyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNsaWRlci1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNsaWRlci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNsaWRlci1jb25maWd1cmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNsaWRlci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNsaWRlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NsaWRlclwiXG4gICAgfVxuICB9LFxuICBcInNsaWRlci1mb3JtYXR0aW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyL3NsaWRlci1mb3JtYXR0aW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNsaWRlciB3aXRoIGN1c3RvbSB0aHVtYiBsYWJlbCBmb3JtYXR0aW5nLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlckZvcm1hdHRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNsaWRlci1mb3JtYXR0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2xpZGVyLWZvcm1hdHRpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNsaWRlci1mb3JtYXR0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZXItZm9ybWF0dGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGVyLWZvcm1hdHRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNsaWRlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NsaWRlclwiXG4gICAgfVxuICB9LFxuICBcInNsaWRlci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyL3NsaWRlci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRTbGlkZXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2xpZGVySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGVyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbGlkZXItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2xpZGVyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZXItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGVyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNsaWRlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NsaWRlclwiXG4gICAgfVxuICB9LFxuICBcInNsaWRlci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlci9zbGlkZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgc2xpZGVyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2xpZGVyT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNsaWRlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNsaWRlci1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2xpZGVyLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNsaWRlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU2xpZGVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc2xpZGVyXCJcbiAgICB9XG4gIH0sXG4gIFwic25hY2stYmFyLWNvbXBvbmVudFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NuYWNrLWJhci9zbmFjay1iYXItY29tcG9uZW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNuYWNrLWJhciB3aXRoIGEgY3VzdG9tIGNvbXBvbmVudFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNuYWNrQmFyQ29tcG9uZW50RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbmFjay1iYXItY29tcG9uZW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwic25hY2stYmFyLWNvbXBvbmVudC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic25hY2stYmFyLWNvbXBvbmVudC1leGFtcGxlLmNzc1wiLFxuICAgICAgXCJzbmFjay1iYXItY29tcG9uZW50LWV4YW1wbGUtc25hY2suaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic25hY2stYmFyLWNvbXBvbmVudC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIlBpenphUGFydHlDb21wb25lbnRcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNuYWNrLWJhci1jb21wb25lbnQtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNuYWNrQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwic25hY2stYmFyLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbmFjay1iYXIvc25hY2stYmFyLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFNuYWNrQmFySGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNuYWNrQmFySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic25hY2stYmFyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbmFjay1iYXItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic25hY2stYmFyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbmFjay1iYXItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic25hY2stYmFyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNuYWNrQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwic25hY2stYmFyLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyL3NuYWNrLWJhci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBzbmFjay1iYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbmFja0Jhck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbmFjay1iYXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbmFjay1iYXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNuYWNrLWJhci1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic25hY2stYmFyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbmFjay1iYXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNuYWNrQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwic25hY2stYmFyLXBvc2l0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyL3NuYWNrLWJhci1wb3NpdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJTbmFjay1iYXIgd2l0aCBjb25maWd1cmFibGUgcG9zaXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbmFja0JhclBvc2l0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbmFjay1iYXItcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbmFjay1iYXItcG9zaXRpb24tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNuYWNrLWJhci1wb3NpdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic25hY2stYmFyLXBvc2l0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbmFjay1iYXItcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNuYWNrQmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwic29ydC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc29ydC9zb3J0LWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFNvcnRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU29ydEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNvcnQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNvcnQtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic29ydC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic29ydC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzb3J0LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlNvcnRFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zb3J0XCJcbiAgICB9XG4gIH0sXG4gIFwic29ydC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NvcnQvc29ydC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJTb3J0aW5nIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU29ydE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzb3J0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwic29ydC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic29ydC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic29ydC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic29ydC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU29ydEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3NvcnRcIlxuICAgIH1cbiAgfSxcbiAgXCJzdGVwcGVyLWVkaXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLWVkaXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgd2l0aCBlZGl0YWJsZSBzdGVwc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJFZGl0YWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1lZGl0YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItZWRpdGFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItZWRpdGFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItZWRpdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItZWRpdGFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlN0ZXBwZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwic3RlcHBlci1lcnJvcnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItZXJyb3JzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgdGhhdCBkaXNwbGF5cyBlcnJvcnMgaW4gdGhlIHN0ZXBzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlckVycm9yc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1lcnJvcnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLWVycm9ycy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic3RlcHBlci1lcnJvcnMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItZXJyb3JzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLWVycm9ycy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU3RlcHBlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJzdGVwcGVyLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U3RlcHBlckhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwic3RlcHBlci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU3RlcHBlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJzdGVwcGVyLWludGxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItaW50bFwiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHRoYXQgdXNlcyB0aGUgTWF0U3RlcHBlckludGwgc2VydmljZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJJbnRsRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWludGwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLWludGwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItaW50bC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1pbnRsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLWludGwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlN0ZXBwZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwic3RlcHBlci1sYWJlbC1wb3NpdGlvbi1ib3R0b21cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgbGFiZWwgYm90dG9tIHBvc2l0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlckxhYmVsUG9zaXRpb25Cb3R0b21FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInN0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tLWV4YW1wbGUudHNcIixcbiAgICAgIFwic3RlcHBlci1sYWJlbC1wb3NpdGlvbi1ib3R0b20tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLWxhYmVsLXBvc2l0aW9uLWJvdHRvbS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic3RlcHBlci1sYWJlbC1wb3NpdGlvbi1ib3R0b20tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlN0ZXBwZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwic3RlcHBlci1sYXp5LWNvbnRlbnRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItbGF6eS1jb250ZW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgbGF6eSBjb250ZW50IHJlbmRlcmluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJMYXp5Q29udGVudEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLWxhenktY29udGVudC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItbGF6eS1jb250ZW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLWxhenktY29udGVudC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU3RlcHBlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJzdGVwcGVyLW9wdGlvbmFsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLW9wdGlvbmFsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgd2l0aCBvcHRpb25hbCBzdGVwc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJPcHRpb25hbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1vcHRpb25hbC1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlN0ZXBwZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwic3RlcHBlci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwic3RlcHBlci1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic3RlcHBlci1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic3RlcHBlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiU3RlcHBlckV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICAgIH1cbiAgfSxcbiAgXCJzdGVwcGVyLXJlc3BvbnNpdmVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItcmVzcG9uc2l2ZVwiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHJlc3BvbnNpdmVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyUmVzcG9uc2l2ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1yZXNwb25zaXZlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic3RlcHBlci1yZXNwb25zaXZlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLXJlc3BvbnNpdmUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItcmVzcG9uc2l2ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic3RlcHBlci1yZXNwb25zaXZlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTdGVwcGVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc3RlcHBlclwiXG4gICAgfVxuICB9LFxuICBcInN0ZXBwZXItc3RhdGVzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLXN0YXRlc1wiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHdpdGggY3VzdG9taXplZCBzdGF0ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyU3RhdGVzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLXN0YXRlcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItc3RhdGVzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLXN0YXRlcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1zdGF0ZXMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItc3RhdGVzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJTdGVwcGVyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvc3RlcHBlclwiXG4gICAgfVxuICB9LFxuICBcInN0ZXBwZXItdmVydGljYWxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItdmVydGljYWxcIixcbiAgICBcInRpdGxlXCI6IFwiU3RlcHBlciB2ZXJ0aWNhbFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJWZXJ0aWNhbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci12ZXJ0aWNhbC1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItdmVydGljYWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItdmVydGljYWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItdmVydGljYWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItdmVydGljYWwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlN0ZXBwZXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtYmFzaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1iYXNpY1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB1c2Ugb2YgYDx0YWJsZSBtYXQtdGFibGU+YFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlQmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtYmFzaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWJhc2ljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1iYXNpYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1jb2x1bW4tc3R5bGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWNvbHVtbi1zdHlsaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0eWxpbmcgY29sdW1ucyB1c2luZyB0aGVpciBhdXRvLWdlbmVyYXRlZCBjb2x1bW4gbmFtZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUNvbHVtblN0eWxpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWNvbHVtbi1zdHlsaW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtY29sdW1uLXN0eWxpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWNvbHVtbi1zdHlsaW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1jb2x1bW4tc3R5bGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtY29sdW1uLXN0eWxpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1keW5hbWljLWFycmF5LWRhdGFcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1keW5hbWljLWFycmF5LWRhdGFcIixcbiAgICBcInRpdGxlXCI6IFwiQWRkaW5nIGFuZCByZW1vdmluZyBkYXRhIHdoZW4gdXNpbmcgYW4gYXJyYXktYmFzZWQgZGF0YXNvdXJjZS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUR5bmFtaWNBcnJheURhdGFFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWR5bmFtaWMtYXJyYXktZGF0YS1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWR5bmFtaWMtYXJyYXktZGF0YS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZHluYW1pYy1hcnJheS1kYXRhLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1keW5hbWljLWFycmF5LWRhdGEtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWR5bmFtaWMtYXJyYXktZGF0YS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWR5bmFtaWMtY29sdW1uc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWR5bmFtaWMtY29sdW1uc1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSBkeW5hbWljYWxseSBjaGFuZ2luZyB0aGUgY29sdW1ucyBkaXNwbGF5ZWRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUR5bmFtaWNDb2x1bW5zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1keW5hbWljLWNvbHVtbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1keW5hbWljLWNvbHVtbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWR5bmFtaWMtY29sdW1ucy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZHluYW1pYy1jb2x1bW5zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1keW5hbWljLWNvbHVtbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWR5bmFtaWMtb2JzZXJ2YWJsZS1kYXRhXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkFkZGluZyBhbmQgcmVtb3ZpbmcgZGF0YSB3aGVuIHVzaW5nIGFuIG9ic2VydmFibGUtYmFzZWQgZGF0YXNvdXJjZS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUR5bmFtaWNPYnNlcnZhYmxlRGF0YUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtZHluYW1pYy1vYnNlcnZhYmxlLWRhdGEtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZHluYW1pYy1vYnNlcnZhYmxlLWRhdGEtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWR5bmFtaWMtb2JzZXJ2YWJsZS1kYXRhLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWV4cGFuZGFibGUtcm93c1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWV4cGFuZGFibGUtcm93c1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIGV4cGFuZGFibGUgcm93c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRXhwYW5kYWJsZVJvd3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWV4cGFuZGFibGUtcm93cy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWV4cGFuZGFibGUtcm93cy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZXhwYW5kYWJsZS1yb3dzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1leHBhbmRhYmxlLXJvd3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWV4cGFuZGFibGUtcm93cy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWZpbHRlcmluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWZpbHRlcmluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIGZpbHRlcmluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRmlsdGVyaW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1maWx0ZXJpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1maWx0ZXJpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWZpbHRlcmluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZmlsdGVyaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1maWx0ZXJpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1mbGV4LWJhc2ljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZmxleC1iYXNpY1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB1c2Ugb2YgYDxtYXQtdGFibGU+YCAodXNlcyBkaXNwbGF5IGZsZXgpXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVGbGV4QmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtZm9vdGVyLXJvd1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWZvb3Rlci1yb3dcIixcbiAgICBcInRpdGxlXCI6IFwiRm9vdGVyIHJvdyB0YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRm9vdGVyUm93RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1mb290ZXItcm93LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWdlbmVyYXRlZC1jb2x1bW5zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZ2VuZXJhdGVkLWNvbHVtbnNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBjb2x1bW5zIGRlZmluZWQgdXNpbmcgbmdGb3IgaW5zdGVhZCBvZiBzdGF0aWNhbGx5IHdyaXR0ZW4gaW4gdGhlIHRlbXBsYXRlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlR2VuZXJhdGVkQ29sdW1uc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtZ2VuZXJhdGVkLWNvbHVtbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1nZW5lcmF0ZWQtY29sdW1ucy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZ2VuZXJhdGVkLWNvbHVtbnMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWdlbmVyYXRlZC1jb2x1bW5zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1nZW5lcmF0ZWQtY29sdW1ucy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRUYWJsZUhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLWh0dHBcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1odHRwXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHJldHJpZXZpbmcgZGF0YSB0aHJvdWdoIEhUVFBcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUh0dHBFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWh0dHAtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1odHRwLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1odHRwLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1odHRwLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1odHRwLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3RlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXJcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBtdWx0aXBsZSBoZWFkZXIgYW5kIGZvb3RlciByb3dzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVNdWx0aXBsZUhlYWRlckZvb3RlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGEgdGFibGUgd2l0aCBzb3J0aW5nLCBwYWdpbmF0aW9uLCBhbmQgZmlsdGVyaW5nLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1wYWdpbmF0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtcGFnaW5hdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIHBhZ2luYXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVBhZ2luYXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXBhZ2luYXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1wYWdpbmF0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1wYWdpbmF0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1wYWdpbmF0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1wYWdpbmF0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtcmVjeWNsZS1yb3dzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtcmVjeWNsZS1yb3dzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHRoYXQgdXNlcyB0aGUgcmVjeWNsZSB2aWV3IHJlcGVhdGVyIHN0cmF0ZWd5LlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlUmVjeWNsZVJvd3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXJlY3ljbGUtcm93cy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXJlY3ljbGUtcm93cy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXJlY3ljbGUtcm93cy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLXJlb3JkZXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtcmVvcmRlcmFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCByZS1vcmRlcmFibGUgY29sdW1uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlUmVvcmRlcmFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXJlb3JkZXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi90YWJsZS1yZW9yZGVyYWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi90YWJsZS1yZW9yZGVyYWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtcmVvcmRlcmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXJlb3JkZXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtcm93LWJpbmRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1yb3ctYmluZGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJCaW5kaW5nIGV2ZW50IGhhbmRsZXJzIGFuZCBwcm9wZXJ0aWVzIHRvIHRoZSB0YWJsZSByb3dzLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlUm93QmluZGluZ0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtcm93LWJpbmRpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1yb3ctYmluZGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtcm93LWJpbmRpbmctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXJvdy1iaW5kaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1yb3ctYmluZGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLXJvdy1jb250ZXh0XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtcm93LWNvbnRleHRcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgc2hvd2luZyBlYWNoIHJvdyBjb250ZXh0IHByb3BlcnRpZXMuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVSb3dDb250ZXh0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1yb3ctY29udGV4dC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXJvdy1jb250ZXh0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1yb3ctY29udGV4dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtcm93LWNvbnRleHQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXJvdy1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtc2VsZWN0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggc2VsZWN0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVTZWxlY3Rpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXNlbGVjdGlvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc2VsZWN0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1zZWxlY3Rpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLXNvcnRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1zb3J0aW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggc29ydGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlU29ydGluZ0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXNvcnRpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXNvcnRpbmctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXNvcnRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXNvcnRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1zdGlja3ktY29sdW1uc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXN0aWNreS1jb2x1bW5zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggc3RpY2t5IGNvbHVtbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVN0aWNreUNvbHVtbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXN0aWNreS1jb2x1bW5zLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbHVtbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1jb2x1bW5zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1zdGlja3ktY29sdW1ucy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc3RpY2t5LWNvbHVtbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc3RpY2t5LWNvbXBsZXgtZmxleFwiLFxuICAgIFwidGl0bGVcIjogXCJGbGV4LWxheW91dCB0YWJsZXMgd2l0aCB0b2dnbGUtYWJsZSBzdGlja3kgaGVhZGVycywgZm9vdGVycywgYW5kIGNvbHVtbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVN0aWNreUNvbXBsZXhGbGV4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZmxleC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZmxleC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZmxleC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLXN0aWNreS1jb21wbGV4XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc3RpY2t5LWNvbXBsZXhcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGVzIHdpdGggdG9nZ2xlLWFibGUgc3RpY2t5IGhlYWRlcnMsIGZvb3RlcnMsIGFuZCBjb2x1bW5zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVTdGlja3lDb21wbGV4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtc3RpY2t5LWZvb3RlclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXN0aWNreS1mb290ZXJcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBhIHN0aWNreSBmb290ZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVN0aWNreUZvb3RlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtc3RpY2t5LWZvb3Rlci1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1mb290ZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1mb290ZXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXN0aWNreS1mb290ZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXN0aWNreS1mb290ZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS1zdGlja3ktaGVhZGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc3RpY2t5LWhlYWRlclwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIHN0aWNreSBoZWFkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVN0aWNreUhlYWRlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtc3RpY2t5LWhlYWRlci1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1oZWFkZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1oZWFkZXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXN0aWNreS1oZWFkZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXN0aWNreS1oZWFkZXItZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS10ZXh0LWNvbHVtbi1hZHZhbmNlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXRleHQtY29sdW1uLWFkdmFuY2VkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlVzZSBvZiAnbWF0LXRleHQtY29sdW1uJyB3aXRoIHZhcmlvdXMgY29uZmlndXJhdGlvbnMgb2YgdGhlIGludGVyZmFjZS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVRleHRDb2x1bW5BZHZhbmNlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtdGV4dC1jb2x1bW4tYWR2YW5jZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS10ZXh0LWNvbHVtbi1hZHZhbmNlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtdGV4dC1jb2x1bW4tYWR2YW5jZWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXRleHQtY29sdW1uLWFkdmFuY2VkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS10ZXh0LWNvbHVtbi1hZHZhbmNlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYmxlLXRleHQtY29sdW1uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtdGV4dC1jb2x1bW5cIixcbiAgICBcInRpdGxlXCI6IFwiVXNlIG9mIGBtYXQtdGV4dC1jb2x1bW5gIHdoaWNoIGNhbiBiZSB1c2VkIGZvciBzaW1wbGUgY29sdW1ucyB0aGF0IG9ubHkgbmVlZCB0byBkaXNwbGF5XFxuYSB0ZXh0IHZhbHVlIGZvciB0aGUgaGVhZGVyIGFuZCBjZWxscy5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVRleHRDb2x1bW5FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXRleHQtY29sdW1uLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtdGV4dC1jb2x1bW4tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXRleHQtY29sdW1uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS10ZXh0LWNvbHVtbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtdGV4dC1jb2x1bW4tZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYmxlRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWJsZS13aXRoLXJpcHBsZXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS13aXRoLXJpcHBsZXNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGVzIHdpdGggTWF0ZXJpYWwgRGVzaWduIHJpcHBsZXMuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVXaXRoUmlwcGxlc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtd2l0aC1yaXBwbGVzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtd2l0aC1yaXBwbGVzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS13aXRoLXJpcHBsZXMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXdpdGgtcmlwcGxlcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtd2l0aC1yaXBwbGVzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJsZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgICB9XG4gIH0sXG4gIFwidGFibGUtd3JhcHBlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXdyYXBwZWRcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgZXhhbXBsZSB0aGF0IHNob3dzIGhvdyB0byB3cmFwIGEgdGFibGUgY29tcG9uZW50IGZvciBkZWZpbml0aW9uIGFuZCBiZWhhdmlvciByZXVzZS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVdyYXBwZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXdyYXBwZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS13cmFwcGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS13cmFwcGVkLWV4YW1wbGUuY3NzXCIsXG4gICAgICBcIndyYXBwZXItdGFibGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtd3JhcHBlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIldyYXBwZXJUYWJsZVwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtd3JhcHBlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFibGVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1hbGlnblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWFsaWduXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aXRoIGFsaWduZWQgbGFiZWxzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBBbGlnbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWFsaWduLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWFsaWduLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtYWxpZ24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1hbGlnbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWFsaWduLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItZ3JvdXAtYW5pbWF0aW9uc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWFuaW1hdGlvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFiIGdyb3VwIGFuaW1hdGlvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cEFuaW1hdGlvbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1hbmltYXRpb25zLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWFuaW1hdGlvbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYi1ncm91cC1hbmltYXRpb25zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtYW5pbWF0aW9ucy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWFuaW1hdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYkdyb3VwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1hc3luY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWFzeW5jXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aXRoIGFzeW5jaHJvbm91c2x5IGxvYWRpbmcgdGFiIGNvbnRlbnRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBBc3luY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWFzeW5jLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWFzeW5jLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWFzeW5jLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtYXN5bmMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYkdyb3VwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHVzZSBvZiB0aGUgdGFiIGdyb3VwXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBCYXNpY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWJhc2ljLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYkdyb3VwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1jdXN0b20tbGFiZWxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1jdXN0b20tbGFiZWxcIixcbiAgICBcInRpdGxlXCI6IFwiVXNpbmcgdGFicyB3aXRoIGEgY3VzdG9tIGxhYmVsIHRlbXBsYXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBDdXN0b21MYWJlbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWN1c3RvbS1sYWJlbC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1jdXN0b20tbGFiZWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYi1ncm91cC1jdXN0b20tbGFiZWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1jdXN0b20tbGFiZWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1jdXN0b20tbGFiZWwtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYkdyb3VwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1keW5hbWljLWhlaWdodFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aXRoIGR5bmFtaWMgaGVpZ2h0IGJhc2VkIG9uIHRhYiBjb250ZW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwRHluYW1pY0hlaWdodEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtZHluYW1pYy1oZWlnaHQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1keW5hbWljLWhlaWdodC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItZ3JvdXAtZHluYW1pY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWR5bmFtaWNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFiIGdyb3VwIHdpdGggZHluYW1pY2FsbHkgY2hhbmdpbmcgdGFic1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwRHluYW1pY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtZHluYW1pYy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1keW5hbWljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtZHluYW1pYy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFiR3JvdXBFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgICB9XG4gIH0sXG4gIFwidGFiLWdyb3VwLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRUYWJHcm91cEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYi1ncm91cC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItZ3JvdXAtaGVhZGVyLWJlbG93XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFicy90YWItZ3JvdXAtaGVhZGVyLWJlbG93XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aXRoIHRoZSBoZWFkZXJzIG9uIHRoZSBib3R0b21cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cEhlYWRlckJlbG93RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtaGVhZGVyLWJlbG93LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWhlYWRlci1iZWxvdy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1oZWFkZXItYmVsb3ctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1oZWFkZXItYmVsb3ctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRhYkdyb3VwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gICAgfVxuICB9LFxuICBcInRhYi1ncm91cC1sYXp5LWxvYWRlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWxhenktbG9hZGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aGVyZSB0aGUgdGFiIGNvbnRlbnQgaXMgbG9hZGVkIGxhemlseSAod2hlbiBhY3RpdmF0ZWQpXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBMYXp5TG9hZGVkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1sYXp5LWxvYWRlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVGFiR3JvdXBFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgICB9XG4gIH0sXG4gIFwidGFiLWdyb3VwLXN0cmV0Y2hlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLXN0cmV0Y2hlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBzdHJldGNoZWQgbGFiZWxzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBTdHJldGNoZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1zdHJldGNoZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItZ3JvdXAtdGhlbWVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC10aGVtZVwiLFxuICAgIFwidGl0bGVcIjogXCJDdXN0b21pemluZyB0aGUgdGhlbWUgb3B0aW9ucyBvbiB0aGUgdGFiIGdyb3VwXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBUaGVtZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLXRoZW1lLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLXRoZW1lLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtdGhlbWUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC10aGVtZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLXRoZW1lLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItbmF2LWJhci1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLW5hdi1iYXItYmFzaWNcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgdXNlIG9mIHRoZSB0YWIgbmF2IGJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYk5hdkJhckJhc2ljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItbmF2LWJhci1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1uYXYtYmFyLWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItbmF2LWJhci1iYXNpYy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLW5hdi1iYXItYmFzaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1uYXYtYmFyLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0YWItbmF2LWJhci13aXRoLXBhbmVsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFicy90YWItbmF2LWJhci13aXRoLXBhbmVsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlVzZSBvZiB0aGUgdGFiIG5hdiBiYXIgd2l0aCB0aGUgZGVkaWNhdGVkIHBhbmVsIGNvbXBvbmVudC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJOYXZCYXJXaXRoUGFuZWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1uYXYtYmFyLXdpdGgtcGFuZWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItbmF2LWJhci13aXRoLXBhbmVsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItbmF2LWJhci13aXRoLXBhbmVsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItbmF2LWJhci13aXRoLXBhbmVsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItbmF2LWJhci13aXRoLXBhbmVsLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUYWJHcm91cEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICAgIH1cbiAgfSxcbiAgXCJ0b29sYmFyLWJhc2ljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbGJhci90b29sYmFyLWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHRvb2xiYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sYmFyQmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2xiYXItYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sYmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbGJhclwiXG4gICAgfVxuICB9LFxuICBcInRvb2xiYXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2xiYXIvdG9vbGJhci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRUb29sYmFySGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2xiYXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sYmFyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sYmFyLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2xiYXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2xiYXItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbGJhci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sYmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbGJhclwiXG4gICAgfVxuICB9LFxuICBcInRvb2xiYXItbXVsdGlyb3dcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sYmFyL3Rvb2xiYXItbXVsdGlyb3dcIixcbiAgICBcInRpdGxlXCI6IFwiTXVsdGktcm93IHRvb2xiYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sYmFyTXVsdGlyb3dFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2xiYXItbXVsdGlyb3ctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sYmFyLW11bHRpcm93LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sYmFyLW11bHRpcm93LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sYmFyLW11bHRpcm93LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sYmFyLW11bHRpcm93LWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sYmFyRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbGJhclwiXG4gICAgfVxuICB9LFxuICBcInRvb2xiYXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sYmFyL3Rvb2xiYXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVG9vbGJhciBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2xiYXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbGJhci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRvb2xiYXJFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90b29sYmFyXCJcbiAgICB9XG4gIH0sXG4gIFwidG9vbHRpcC1hdXRvLWhpZGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtYXV0by1oaWRlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgdGhhdCBkZW1vbnN0cmF0ZXMgYXV0by1oaWRpbmcgd2hlbiBpdCBjbGlwcyBvdXQgb2YgaXRzIHNjcm9sbGluZyBjb250YWluZXIuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbHRpcEF1dG9IaWRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLWF1dG8taGlkZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2x0aXAtYXV0by1oaWRlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWF1dG8taGlkZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1hdXRvLWhpZGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtYXV0by1oaWRlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRvb2x0aXAtY3VzdG9tLWNsYXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLWN1c3RvbS1jbGFzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUb29sdGlwIHRoYXQgY2FuIGhhdmUgYSBjdXN0b20gY2xhc3MgYXBwbGllZC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwQ3VzdG9tQ2xhc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtY3VzdG9tLWNsYXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1jdXN0b20tY2xhc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2x0aXAtY3VzdG9tLWNsYXNzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLWN1c3RvbS1jbGFzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1jdXN0b20tY2xhc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRvb2x0aXBFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgICB9XG4gIH0sXG4gIFwidG9vbHRpcC1kZWxheVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1kZWxheVwiLFxuICAgIFwidGl0bGVcIjogXCJUb29sdGlwIHdpdGggYSBzaG93IGFuZCBoaWRlIGRlbGF5XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbHRpcERlbGF5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLWRlbGF5LWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1kZWxheS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidG9vbHRpcC1kZWxheS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1kZWxheS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1kZWxheS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVG9vbHRpcEV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3Rvb2x0aXBcIlxuICAgIH1cbiAgfSxcbiAgXCJ0b29sdGlwLWRpc2FibGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLWRpc2FibGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgdGhhdCBjYW4gYmUgZGlzYWJsZWRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwRGlzYWJsZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtZGlzYWJsZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRvb2x0aXAtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRUb29sdGlwSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2x0aXBIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2x0aXAtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRvb2x0aXAtbWFudWFsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLW1hbnVhbFwiLFxuICAgIFwidGl0bGVcIjogXCJUb29sdGlwIHRoYXQgY2FuIGJlIG1hbnVhbGx5IHNob3duL2hpZGRlbi5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwTWFudWFsRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLW1hbnVhbC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2x0aXAtbWFudWFsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLW1hbnVhbC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1tYW51YWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtbWFudWFsLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRvb2x0aXAtbWVzc2FnZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1tZXNzYWdlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgd2l0aCBhIGNoYW5naW5nIG1lc3NhZ2VcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwTWVzc2FnZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLW1lc3NhZ2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtbWVzc2FnZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRvb2x0aXAtbW9kaWZpZWQtZGVmYXVsdHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtbW9kaWZpZWQtZGVmYXVsdHNcIixcbiAgICBcInRpdGxlXCI6IFwiVG9vbHRpcCB3aXRoIGEgc2hvdyBhbmQgaGlkZSBkZWxheVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2x0aXBNb2RpZmllZERlZmF1bHRzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLW1vZGlmaWVkLWRlZmF1bHRzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1tb2RpZmllZC1kZWZhdWx0cy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtbW9kaWZpZWQtZGVmYXVsdHMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtbW9kaWZpZWQtZGVmYXVsdHMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRvb2x0aXBFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgICB9XG4gIH0sXG4gIFwidG9vbHRpcC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB0b29sdGlwXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbHRpcE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRvb2x0aXBFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgICB9XG4gIH0sXG4gIFwidG9vbHRpcC1wb3NpdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1wb3NpdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJUb29sdGlwIHdpdGggYSBjdXN0b20gcG9zaXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwUG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcIm1vZHVsZVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJUb29sdGlwRXhhbXBsZXNNb2R1bGVcIixcbiAgICAgIFwiaW1wb3J0U3BlY2lmaWVyXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gICAgfVxuICB9LFxuICBcInRyZWUtY2hlY2tsaXN0XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWNoZWNrbGlzdFwiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggY2hlY2tib3hlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRyZWVDaGVja2xpc3RFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRyZWUtY2hlY2tsaXN0LWV4YW1wbGUudHNcIixcbiAgICAgIFwidHJlZS1jaGVja2xpc3QtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRyZWUtY2hlY2tsaXN0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0cmVlLWNoZWNrbGlzdC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidHJlZS1jaGVja2xpc3QtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRyZWVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90cmVlXCJcbiAgICB9XG4gIH0sXG4gIFwidHJlZS1keW5hbWljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWR5bmFtaWNcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIGR5bmFtaWMgZGF0YVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRyZWVEeW5hbWljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0cmVlLWR5bmFtaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0cmVlLWR5bmFtaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRyZWUtZHluYW1pYy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidHJlZS1keW5hbWljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLWR5bmFtaWMtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRyZWVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90cmVlXCJcbiAgICB9XG4gIH0sXG4gIFwidHJlZS1mbGF0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWZsYXQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIGZsYXQgbm9kZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUcmVlRmxhdE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRyZWUtZmxhdC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidHJlZS1mbGF0LW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRyZWVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90cmVlXCJcbiAgICB9XG4gIH0sXG4gIFwidHJlZS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFRyZWVIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVHJlZUhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRyZWUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRyZWUtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidHJlZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwibW9kdWxlXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlRyZWVFeGFtcGxlc01vZHVsZVwiLFxuICAgICAgXCJpbXBvcnRTcGVjaWZpZXJcIjogXCJtYXRlcmlhbC90cmVlXCJcbiAgICB9XG4gIH0sXG4gIFwidHJlZS1sb2FkbW9yZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RyZWUvdHJlZS1sb2FkbW9yZVwiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggcGFydGlhbGx5IGxvYWRlZCBkYXRhXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVHJlZUxvYWRtb3JlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0cmVlLWxvYWRtb3JlLWV4YW1wbGUudHNcIixcbiAgICAgIFwidHJlZS1sb2FkbW9yZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1sb2FkbW9yZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidHJlZS1sb2FkbW9yZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidHJlZS1sb2FkbW9yZS1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVHJlZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RyZWVcIlxuICAgIH1cbiAgfSxcbiAgXCJ0cmVlLW5lc3RlZC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RyZWUvdHJlZS1uZXN0ZWQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIG5lc3RlZCBub2Rlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRyZWVOZXN0ZWRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidHJlZS1uZXN0ZWQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0cmVlLW5lc3RlZC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1uZXN0ZWQtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRyZWUtbmVzdGVkLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLW5lc3RlZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJtb2R1bGVcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVHJlZUV4YW1wbGVzTW9kdWxlXCIsXG4gICAgICBcImltcG9ydFNwZWNpZmllclwiOiBcIm1hdGVyaWFsL3RyZWVcIlxuICAgIH1cbiAgfVxufTtcbiJdfQ==