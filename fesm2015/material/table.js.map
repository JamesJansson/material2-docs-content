{"version":3,"file":"material__table.js","sources":["../../../../../../src/components-examples/material/table/table-flex-basic/table-flex-basic-example.html","../../../../../../src/components-examples/material/table/table-flex-basic/table-flex-basic-example.ts","../../../../../../src/components-examples/material/table/table-basic/table-basic-example.html","../../../../../../src/components-examples/material/table/table-basic/table-basic-example.ts","../../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.html","../../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.ts","../../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.html","../../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.ts","../../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.html","../../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.ts","../../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.html","../../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.ts","../../../../../../src/components-examples/material/table/table-http/table-http-example.html","../../../../../../src/components-examples/material/table/table-http/table-http-example.ts","../../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.html","../../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.ts","../../../../../../src/components-examples/material/table/table-overview/table-overview-example.html","../../../../../../src/components-examples/material/table/table-overview/table-overview-example.ts","../../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.html","../../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.ts","../../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.html","../../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.ts","../../../../../../src/components-examples/material/table/table-selection/table-selection-example.html","../../../../../../src/components-examples/material/table/table-selection/table-selection-example.ts","../../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.html","../../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.ts","../../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.html","../../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.ts","../../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.html","../../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.ts","../../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.html","../../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.ts","../../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.html","../../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.ts","../../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.html","../../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.ts","../../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.html","../../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.ts","../../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.html","../../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.ts","../../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.html","../../../../../../src/components-examples/material/table/table-wrapped/wrapper-table.html","../../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.ts","../../../../../../src/components-examples/material/table/table-reorderable/table-reorderable-example.html","../../../../../../src/components-examples/material/table/table-reorderable/table-reorderable-example.ts","../../../../../../src/components-examples/material/table/table-recycle-rows/table-recycle-rows-example.html","../../../../../../src/components-examples/material/table/table-recycle-rows/table-recycle-rows-example.ts","../../../../../../src/components-examples/material/table/table-harness/table-harness-example.html","../../../../../../src/components-examples/material/table/table-harness/table-harness-example.ts","../../../../../../src/components-examples/material/table/table-with-ripples/table-with-ripples-example.html","../../../../../../src/components-examples/material/table/table-with-ripples/table-with-ripples-example.ts","../../../../../../src/components-examples/material/table/table-column-styling/table-column-styling-example.html","../../../../../../src/components-examples/material/table/table-column-styling/table-column-styling-example.ts","../../../../../../src/components-examples/material/table/table-row-binding/table-row-binding-example.html","../../../../../../src/components-examples/material/table/table-row-binding/table-row-binding-example.ts","../../../../../../src/components-examples/material/table/table-dynamic-array-data/table-dynamic-array-data-example.html","../../../../../../src/components-examples/material/table/table-dynamic-array-data/table-dynamic-array-data-example.ts","../../../../../../src/components-examples/material/table/table-dynamic-observable-data/table-dynamic-observable-data-example.html","../../../../../../src/components-examples/material/table/table-dynamic-observable-data/table-dynamic-observable-data-example.ts","../../../../../../src/components-examples/material/table/table-generated-columns/table-generated-columns-example.html","../../../../../../src/components-examples/material/table/table-generated-columns/table-generated-columns-example.ts","../../../../../../src/components-examples/material/table/index.ts","../../../../../../src/components-examples/material/table/table_public_index.ts"],"sourcesContent":["<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<mat-table>` (uses display flex)\n */\n@Component({\n  selector: 'table-flex-basic-example',\n  styleUrls: ['table-flex-basic-example.css'],\n  templateUrl: 'table-flex-basic-example.html',\n})\nexport class TableFlexBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n})\nexport class TableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<button mat-raised-button (click)=\"addColumn()\"> Add column </button>\n<button mat-raised-button (click)=\"removeColumn()\"> Remove column </button>\n<button mat-raised-button (click)=\"shuffle()\"> Shuffle </button>\n\n<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table dynamically changing the columns displayed\n */\n@Component({\n  selector: 'table-dynamic-columns-example',\n  styleUrls: ['table-dynamic-columns-example.css'],\n  templateUrl: 'table-dynamic-columns-example.html',\n})\nexport class TableDynamicColumnsExample {\n  displayedColumns: string[] = ['name', 'weight', 'symbol', 'position'];\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n  data: PeriodicElement[] = ELEMENT_DATA;\n\n  addColumn() {\n    const randomColumn = Math.floor(Math.random() * this.displayedColumns.length);\n    this.columnsToDisplay.push(this.displayedColumns[randomColumn]);\n  }\n\n  removeColumn() {\n    if (this.columnsToDisplay.length) {\n      this.columnsToDisplay.pop();\n    }\n  }\n\n  shuffle() {\n    let currentIndex = this.columnsToDisplay.length;\n    while (0 !== currentIndex) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // Swap\n      let temp = this.columnsToDisplay[currentIndex];\n      this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\n      this.columnsToDisplay[randomIndex] = temp;\n    }\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <div class=\"example-element-position\"> {{element.position}} </div>\n          <div class=\"example-element-symbol\"> {{element.symbol}} </div>\n          <div class=\"example-element-name\"> {{element.name}} </div>\n          <div class=\"example-element-weight\"> {{element.weight}} </div>\n        </div>\n        <div class=\"example-element-description\">\n          {{element.description}}\n          <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n/**\n * @title Table with expandable rows\n */\n@Component({\n  selector: 'table-expandable-rows-example',\n  styleUrls: ['table-expandable-rows-example.css'],\n  templateUrl: 'table-expandable-rows-example.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableExpandableRowsExample {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement | null;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];\n","<mat-form-field appearance=\"standard\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n</mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <!-- Row shown when there is no matching data. -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with filtering\n */\n@Component({\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n})\nexport class TableFilteringExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\ninterface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Footer row table\n */\n@Component({\n  selector: 'table-footer-row-example',\n  styleUrls: ['table-footer-row-example.css'],\n  templateUrl: 'table-footer-row-example.html',\n})\nexport class TableFooterRowExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n      GitHub's API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n\n  <div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\" aria-label=\"Select page of GitHub search results\"></mat-paginator>\n</div>\n","import {HttpClient} from '@angular/common/http';\nimport {Component, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, SortDirection} from '@angular/material/sort';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\n/**\n * @title Table retrieving data through HTTP\n */\n@Component({\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n})\nexport class TableHttpExample implements AfterViewInit {\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDatabase | null;\n  data: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n              this.sort.active, this.sort.direction, this.paginator.pageIndex)\n            .pipe(catchError(() => observableOf(null)));\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = data === null;\n\n          if (data === null) {\n            return [];\n          }\n\n          // Only refresh the result length if there is new data. In case of rate\n          // limit errors, we do not want to reset the paginator to zero, as that\n          // would prevent users from re-triggering requests.\n          this.resultsLength = data.total_count;\n          return data.items;\n        })\n      ).subscribe(data => this.data = data);\n  }\n}\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private _httpClient: HttpClient) {}\n\n  getRepoIssues(sort: string, order: SortDirection, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this._httpClient.get<GithubApi>(requestUrl);\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <!-- Item Description Column -->\n  <ng-container matColumnDef=\"item-description\">\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\n  </ng-container>\n\n  <!-- Cost Description Column -->\n  <ng-container matColumnDef=\"cost-description\">\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\n  </ng-container>\n\n  <!-- Disclaimer column -->\n  <ng-container matColumnDef=\"disclaimer\">\n    <td mat-footer-cell *matFooterCellDef colspan=\"2\">\n      Please note that the cost of items displayed are completely and totally made up.\n    </td>\n  </ng-container>\n\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\n      class=\"example-first-header-row\">\n  </tr>\n  <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\n      class=\"example-second-header-row\">\n  </tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\ninterface Transaction {\n  item: string;\n  cost: number;\n}\n\n\n/**\n * @title Table with multiple header and footer rows\n */\n@Component({\n  selector: 'table-multiple-header-footer-example',\n  styleUrls: ['table-multiple-header-footer-example.css'],\n  templateUrl: 'table-multiple-header-footer-example.html',\n})\nexport class TableMultipleHeaderFooterExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<mat-form-field appearance=\"standard\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"progress\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Fruit Column -->\n    <ng-container matColumnDef=\"fruit\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n</div>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  fruit: string;\n}\n\n/** Constants used to fill up our data base. */\nconst FRUITS: string[] = [\n  'blueberry', 'lychee', 'kiwi', 'mango', 'peach', 'lime', 'pomegranate', 'pineapple'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample implements AfterViewInit {\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))]\n  };\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                 showFirstLastButtons \n                 aria-label=\"Select page of periodic elements\">\n  </mat-paginator>\n</div>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n/**\n * @title Table with pagination\n */\n@Component({\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n})\nexport class TablePaginationExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <!-- Implicit Column -->\n  <ng-container matColumnDef=\"$implicit\">\n    <th mat-header-cell *matHeaderCellDef> $implicit </th>\n    <td mat-cell *matCellDef=\"let data\"> {{data}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"index\">\n    <th mat-header-cell *matHeaderCellDef> index </th>\n    <td mat-cell *matCellDef=\"let index = index\"> {{index}} </td>\n  </ng-container>\n\n  <!-- Count Column -->\n  <ng-container matColumnDef=\"count\">\n    <th mat-header-cell *matHeaderCellDef> count </th>\n    <td mat-cell *matCellDef=\"let count = count\"> {{count}} </td>\n  </ng-container>\n\n  <!-- First Column -->\n  <ng-container matColumnDef=\"first\">\n    <th mat-header-cell *matHeaderCellDef> first </th>\n    <td mat-cell *matCellDef=\"let first = first\"> {{first}} </td>\n  </ng-container>\n\n  <!-- Last Column -->\n  <ng-container matColumnDef=\"last\">\n    <th mat-header-cell *matHeaderCellDef> last </th>\n    <td mat-cell *matCellDef=\"let last = last\"> {{last}} </td>\n  </ng-container>\n\n  <!-- Even Column -->\n  <ng-container matColumnDef=\"even\">\n    <th mat-header-cell *matHeaderCellDef> even </th>\n    <td mat-cell *matCellDef=\"let even = even\"> {{even}} </td>\n  </ng-container>\n\n  <!-- Odd Column -->\n  <ng-container matColumnDef=\"odd\">\n    <th mat-header-cell *matHeaderCellDef> odd </th>\n    <td mat-cell *matCellDef=\"let odd = odd\"> {{odd}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table showing each row context properties.\n */\n@Component({\n  selector: 'table-row-context-example',\n  styleUrls: ['table-row-context-example.css'],\n  templateUrl: 'table-row-context-example.html',\n})\nexport class TableRowContextExample {\n  displayedColumns: string[] = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\n  data: string[] = ['one', 'two', 'three', 'four', 'five'];\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row)\">\n  </tr>\n</table>\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with selection\n */\n@Component({\n  selector: 'table-selection-example',\n  styleUrls: ['table-selection-example.css'],\n  templateUrl: 'table-selection-example.html',\n})\nexport class TableSelectionExample {\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\"\n    class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by number\">\n      No.\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by name\">\n      Name\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by weight\">\n      Weight\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by symbol\">\n      Symbol\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with sorting\n */\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /** Announce the change in sort state for assistive technology. */\n  announceSortChange(sortState: Sort) {\n    // This example uses English messages. If your application supports\n    // multiple language, you would internationalize these strings.\n    // Furthermore, you can customize the message to add additional\n    // details about the values being sorted.\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <!-- Star Column -->\n    <ng-container matColumnDef=\"star\" stickyEnd>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-icon>more_vert</mat-icon>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky columns\n */\n@Component({\n  selector: 'table-sticky-columns-example',\n  styleUrls: ['table-sticky-columns-example.css'],\n  templateUrl: 'table-sticky-columns-example.html',\n})\nexport class TableStickyColumnsExample {\n  displayedColumns =\n      ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> Filler data cell </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></mat-header-row>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></mat-header-row>\n\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></mat-footer-row>\n  </mat-table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Flex-layout tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-flex-example',\n  styleUrls: ['table-sticky-complex-flex-example.css'],\n  templateUrl: 'table-sticky-complex-flex-example.html',\n})\nexport class TableStickyComplexFlexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <th mat-header-cell *matHeaderCellDef> Position </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      <td mat-footer-cell *matFooterCellDef> Position Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      <td mat-footer-cell *matFooterCellDef> Name Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n      <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n      <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\n      <td mat-cell *matCellDef=\"let element\"> Filler data cell </td>\n      <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></tr>\n\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-example',\n  styleUrls: ['table-sticky-complex-example.css'],\n  templateUrl: 'table-sticky-complex-example.html',\n})\nexport class TableStickyComplexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"transactions\">\n    <!-- Item Column -->\n    <ng-container matColumnDef=\"item\">\n      <th mat-header-cell *matHeaderCellDef> Item </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n      <td mat-footer-cell *matFooterCellDef> Total </td>\n    </ng-container>\n\n    <!-- Cost Column -->\n    <ng-container matColumnDef=\"cost\">\n      <th mat-header-cell *matHeaderCellDef> Cost </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n      <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Table with a sticky footer\n */\n@Component({\n  selector: 'table-sticky-footer-example',\n  styleUrls: ['table-sticky-footer-example.css'],\n  templateUrl: 'table-sticky-footer-example.html',\n})\nexport class TableStickyFooterExample {\n  displayedColumns = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky header\n */\n@Component({\n  selector: 'table-sticky-header-example',\n  styleUrls: ['table-sticky-header-example.css'],\n  templateUrl: 'table-sticky-header-example.html',\n})\nexport class TableStickyHeaderExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\" [headerText]=\"headerText\"></mat-text-column>\n\n  <!-- Change the header text. -->\n  <mat-text-column name=\"name\" headerText=\"Element\"></mat-text-column>\n\n  <!-- Provide a data accessor for getting the cell text values. -->\n  <mat-text-column name=\"weight\" [dataAccessor]=\"getWeight\"></mat-text-column>\n\n  <!-- Justify the content of the cells to the cell end. -->\n  <mat-text-column name=\"symbol\" justify=\"end\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of 'mat-text-column' with various configurations of the interface.\n */\n@Component({\n  selector: 'table-text-column-advanced-example',\n  styleUrls: ['table-text-column-advanced-example.css'],\n  templateUrl: 'table-text-column-advanced-example.html',\n})\nexport class TableTextColumnAdvancedExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  headerText: string;\n\n  decimalPipe = new DecimalPipe('en-US');\n\n  /** Data accessor function that transforms the weight value to have at most 2 decimal digits. */\n  getWeight = (data: PeriodicElement): string => {\n    const result = this.decimalPipe.transform(data.weight, '1.0-2');\n    return result === null ? '' : result;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\"></mat-text-column>\n  <mat-text-column name=\"name\"></mat-text-column>\n  <mat-text-column name=\"weight\"></mat-text-column>\n  <mat-text-column name=\"symbol\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of `mat-text-column` which can be used for simple columns that only need to display\n * a text value for the header and cells.\n */\n@Component({\n  selector: 'table-text-column-example',\n  styleUrls: ['table-text-column-example.css'],\n  templateUrl: 'table-text-column-example.html',\n})\nexport class TableTextColumnExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<div>\n  <button mat-raised-button (click)=\"clearTable()\">Clear table</button>\n  <button mat-raised-button (click)=\"addData()\">Add data</button>\n</div>\n\n<wrapper-table [dataSource]=\"dataSource\" [columns]=\"displayedColumns\"\n               matSort #sort=\"matSort\">\n  <!-- Custom column definition to be provided to the wrapper table. -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Custom row definitions to be provided to the wrapper table. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <!-- Row shown when there is no matching data that will be provided to the wrapper table. -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data</td>\n  </tr>\n</wrapper-table>\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-content></ng-content>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Color Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n</table>\n","import {DataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  AfterViewInit,\n  QueryList,\n  ViewChild,\n  ContentChild,\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {\n  MatColumnDef,\n  MatHeaderRowDef,\n  MatNoDataRow,\n  MatRowDef,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table example that shows how to wrap a table component for definition and behavior reuse.\n */\n@Component({\n  selector: 'table-wrapped-example',\n  styleUrls: ['table-wrapped-example.css'],\n  templateUrl: 'table-wrapped-example.html',\n})\nexport class TableWrappedExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild('sort') sort: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  clearTable() {\n    this.dataSource.data = [];\n  }\n\n  addData() {\n    this.dataSource.data = ELEMENT_DATA;\n  }\n}\n\n/**\n * Table component that accepts column and row definitions in its content to be registered to the\n * table.\n */\n@Component({\n  selector: 'wrapper-table',\n  templateUrl: 'wrapper-table.html',\n  styles: [`\n    table {\n      width: 100%;\n    }\n  `]\n})\nexport class WrapperTable<T> implements AfterContentInit {\n  @ContentChildren(MatHeaderRowDef) headerRowDefs: QueryList<MatHeaderRowDef>;\n  @ContentChildren(MatRowDef) rowDefs: QueryList<MatRowDef<T>>;\n  @ContentChildren(MatColumnDef) columnDefs: QueryList<MatColumnDef>;\n  @ContentChild(MatNoDataRow) noDataRow: MatNoDataRow;\n\n  @ViewChild(MatTable, {static: true}) table: MatTable<T>;\n\n  @Input() columns: string[];\n\n  @Input() dataSource: DataSource<T>;\n\n  ngAfterContentInit() {\n    this.columnDefs.forEach(columnDef => this.table.addColumnDef(columnDef));\n    this.rowDefs.forEach(rowDef => this.table.addRowDef(rowDef));\n    this.headerRowDefs.forEach(headerRowDef => this.table.addHeaderRowDef(headerRowDef));\n    this.table.setNoDataRow(this.noDataRow);\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" \n       cdkDropList\n       cdkDropListOrientation=\"horizontal\"\n       (cdkDropListDropped)=\"drop($event)\">\n\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n/**\n * @title Table with re-orderable columns\n */\n@Component({\n  selector: 'table-reorderable-example',\n  templateUrl: './table-reorderable-example.html',\n  styleUrls: ['./table-reorderable-example.css']\n})\nexport class TableReorderableExample {\n  columns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<table class=\"example-table mat-elevation-z8\" mat-table recycleRows [dataSource]=\"dataSource\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table that uses the recycle view repeater strategy.\n */\n@Component({\n  selector: 'table-recycle-rows-example',\n  styleUrls: ['table-recycle-rows-example.css'],\n  templateUrl: 'table-recycle-rows-example.html',\n})\nexport class TableRecycleRowsExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\">\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.position}}</td>\n    <td mat-footer-cell *matFooterCellDef>Number of the element</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    <td mat-footer-cell *matFooterCellDef>Name of the element</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.weight}}</td>\n    <td mat-footer-cell *matFooterCellDef>Weight of the element</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef>Symbol</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.symbol}}</td>\n    <td mat-footer-cell *matFooterCellDef>Symbol of the element</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\n/**\n * @title Testing with MatTableHarness\n */\n\n@Component({\n  selector: 'table-harness-example',\n  templateUrl: 'table-harness-example.html',\n})\nexport class TableHarnessExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = [\n    {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n    {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n    {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n    {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n    {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n    {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n    {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n    {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n    {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n    {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  ];\n}\n","<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n    <mat-cell mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row matRipple *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n","import {Component} from '@angular/core';\n\nconst ELEMENT_DATA = [\n  {name: 'Hydrogen'},\n  {name: 'Helium'},\n  {name: 'Lithium'},\n  {name: 'Beryllium'},\n  {name: 'Boron'},\n  {name: 'Carbon'},\n  {name: 'Nitrogen'},\n  {name: 'Oxygen'},\n  {name: 'Fluorine'},\n  {name: 'Neon'},\n];\n\n/**\n * @title Tables with Material Design ripples.\n */\n@Component({\n  selector: 'table-with-ripples-example',\n  styleUrls: ['table-with-ripples-example.css'],\n  templateUrl: 'table-with-ripples-example.html',\n})\nexport class TableWithRipplesExample {\n  displayedColumns: string[] = ['name'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"demo-position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"demo-name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"demo-weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"demo-symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Styling columns using their auto-generated column names\n */\n@Component({\n  selector: 'table-column-styling-example',\n  styleUrls: ['table-column-styling-example.css'],\n  templateUrl: 'table-column-styling-example.html',\n})\nexport class TableColumnStylingExample {\n  displayedColumns: string[] = ['demo-position', 'demo-name', 'demo-weight', 'demo-symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.position}}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.weight}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef>Symbol</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.symbol}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr\n      mat-row\n      (click)=\"clickedRows.add(row)\"\n      [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\n      *matRowDef=\"let row; columns: displayedColumns;\"\n  ></tr>\n</table>\n\n<div>\n  <h3>\n    Click Log\n  </h3>\n</div>\n\n<div *ngIf=\"!clickedRows.size\">\n  Clicked rows will be logged here\n</div>\n\n<ul>\n  <li *ngFor=\"let clickedRow of clickedRows\">\n    Clicked on {{clickedRow.name}}\n  </li>\n</ul>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Binding event handlers and properties to the table rows.\n */\n@Component({\n  selector: 'table-row-binding-example',\n  styleUrls: ['table-row-binding-example.css'],\n  templateUrl: 'table-row-binding-example.html',\n})\nexport class TableRowBindingExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  clickedRows = new Set<PeriodicElement>();\n}\n","<div class=\"demo-button-container\">\n  <button mat-raised-button (click)=\"addData()\" class=\"demo-button\">\n    Add data\n  </button>\n  <button\n      mat-raised-button\n      [disabled]=\"!dataSource.length\"\n      (click)=\"removeData()\"\n      class=\"demo-button\">\n    Remove data\n  </button>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.position}}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.weight}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef>Symbol</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.symbol}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component, ViewChild} from '@angular/core';\nimport {MatTable} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Adding and removing data when using an array-based datasource.\n */\n@Component({\n  selector: 'table-dynamic-array-data-example',\n  styleUrls: ['table-dynamic-array-data-example.css'],\n  templateUrl: 'table-dynamic-array-data-example.html',\n})\nexport class TableDynamicArrayDataExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = [...ELEMENT_DATA];\n\n  @ViewChild(MatTable) table: MatTable<PeriodicElement>;\n\n  addData() {\n    const randomElementIndex = Math.floor(Math.random() * ELEMENT_DATA.length);\n    this.dataSource.push(ELEMENT_DATA[randomElementIndex]);\n    this.table.renderRows();\n  }\n\n  removeData() {\n    this.dataSource.pop();\n    this.table.renderRows();\n  }\n}\n","<div class=\"demo-button-container\">\n  <button mat-raised-button (click)=\"addData()\" class=\"demo-button\">\n    Add data\n  </button>\n  <button\n      mat-raised-button\n      [disabled]=\"!dataToDisplay.length\"\n      (click)=\"removeData()\"\n      class=\"demo-button\">\n    Remove data\n  </button>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.position}}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.weight}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef>Symbol</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.symbol}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Observable, ReplaySubject} from 'rxjs';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Adding and removing data when using an observable-based datasource.\n */\n@Component({\n  selector: 'table-dynamic-observable-data-example',\n  styleUrls: ['table-dynamic-observable-data-example.css'],\n  templateUrl: 'table-dynamic-observable-data-example.html',\n})\nexport class TableDynamicObservableDataExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataToDisplay = [...ELEMENT_DATA];\n\n  dataSource = new ExampleDataSource(this.dataToDisplay);\n\n  addData() {\n    const randomElementIndex = Math.floor(Math.random() * ELEMENT_DATA.length);\n    this.dataToDisplay = [\n      ...this.dataToDisplay,\n      ELEMENT_DATA[randomElementIndex]\n    ];\n    this.dataSource.setData(this.dataToDisplay);\n  }\n\n  removeData() {\n    this.dataToDisplay = this.dataToDisplay.slice(0, -1);\n    this.dataSource.setData(this.dataToDisplay);\n  }\n}\n\nclass ExampleDataSource extends DataSource<PeriodicElement> {\n  private _dataStream = new ReplaySubject<PeriodicElement[]>();\n\n  constructor(initialData: PeriodicElement[]) {\n    super();\n    this.setData(initialData);\n  }\n\n  connect(): Observable<PeriodicElement[]> {\n    return this._dataStream;\n  }\n\n  disconnect() {}\n\n  setData(data: PeriodicElement[]) {\n    this._dataStream.next(data);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n  <ng-container *ngFor=\"let column of columns\" [matColumnDef]=\"column.columnDef\">\n    <th mat-header-cell *matHeaderCellDef>\n      {{column.header}}\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      {{column.cell(row)}}\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with columns defined using ngFor instead of statically written in the template.\n */\n@Component({\n  selector: 'table-generated-columns-example',\n  styleUrls: ['table-generated-columns-example.css'],\n  templateUrl: 'table-generated-columns-example.html',\n})\nexport class TableGeneratedColumnsExample {\n  columns = [\n    {\n      columnDef: 'position',\n      header: 'No.',\n      cell: (element: PeriodicElement) => `${element.position}`\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (element: PeriodicElement) => `${element.name}`\n    },\n    {\n      columnDef: 'weight',\n      header: 'Weight',\n      cell: (element: PeriodicElement) => `${element.weight}`\n    },\n    {\n      columnDef: 'symbol',\n      header: 'Symbol',\n      cell: (element: PeriodicElement) => `${element.symbol}`\n    }\n  ];\n  dataSource = ELEMENT_DATA;\n  displayedColumns = this.columns.map(c => c.columnDef);\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nimport {TableFlexBasicExample} from './table-flex-basic/table-flex-basic-example';\nimport {TableBasicExample} from './table-basic/table-basic-example';\nimport {TableDynamicColumnsExample} from './table-dynamic-columns/table-dynamic-columns-example';\nimport {TableExpandableRowsExample} from './table-expandable-rows/table-expandable-rows-example';\nimport {TableFilteringExample} from './table-filtering/table-filtering-example';\nimport {TableFooterRowExample} from './table-footer-row/table-footer-row-example';\nimport {TableHttpExample} from './table-http/table-http-example';\nimport {\n  TableMultipleHeaderFooterExample\n} from './table-multiple-header-footer/table-multiple-header-footer-example';\nimport {TableOverviewExample} from './table-overview/table-overview-example';\nimport {TablePaginationExample} from './table-pagination/table-pagination-example';\nimport {TableRowContextExample} from './table-row-context/table-row-context-example';\nimport {TableSelectionExample} from './table-selection/table-selection-example';\nimport {TableSortingExample} from './table-sorting/table-sorting-example';\nimport {TableStickyColumnsExample} from './table-sticky-columns/table-sticky-columns-example';\nimport {\n  TableStickyComplexFlexExample\n} from './table-sticky-complex-flex/table-sticky-complex-flex-example';\nimport {TableStickyComplexExample} from './table-sticky-complex/table-sticky-complex-example';\nimport {TableStickyFooterExample} from './table-sticky-footer/table-sticky-footer-example';\nimport {TableStickyHeaderExample} from './table-sticky-header/table-sticky-header-example';\nimport {\n  TableTextColumnAdvancedExample\n} from './table-text-column-advanced/table-text-column-advanced-example';\nimport {TableTextColumnExample} from './table-text-column/table-text-column-example';\nimport {TableWrappedExample, WrapperTable} from './table-wrapped/table-wrapped-example';\nimport {TableReorderableExample} from './table-reorderable/table-reorderable-example';\nimport {TableRecycleRowsExample} from './table-recycle-rows/table-recycle-rows-example';\nimport {TableHarnessExample} from './table-harness/table-harness-example';\nimport {TableWithRipplesExample} from './table-with-ripples/table-with-ripples-example';\nimport {TableColumnStylingExample} from './table-column-styling/table-column-styling-example';\nimport {TableRowBindingExample} from './table-row-binding/table-row-binding-example';\nimport {\n  TableDynamicArrayDataExample\n} from './table-dynamic-array-data/table-dynamic-array-data-example';\nimport {\n  TableDynamicObservableDataExample\n} from './table-dynamic-observable-data/table-dynamic-observable-data-example';\nimport {\n  TableGeneratedColumnsExample\n} from './table-generated-columns/table-generated-columns-example';\n\nexport {\n  TableBasicExample,\n  TableColumnStylingExample,\n  TableDynamicArrayDataExample,\n  TableDynamicColumnsExample,\n  TableDynamicObservableDataExample,\n  TableExpandableRowsExample,\n  TableFilteringExample,\n  TableFlexBasicExample,\n  TableFooterRowExample,\n  TableGeneratedColumnsExample,\n  TableHarnessExample,\n  TableHttpExample,\n  TableMultipleHeaderFooterExample,\n  TableOverviewExample,\n  TablePaginationExample,\n  TableRecycleRowsExample,\n  TableReorderableExample,\n  TableRowBindingExample,\n  TableRowContextExample,\n  TableSelectionExample,\n  TableSortingExample,\n  TableStickyColumnsExample,\n  TableStickyComplexExample,\n  TableStickyComplexFlexExample,\n  TableStickyFooterExample,\n  TableStickyHeaderExample,\n  TableTextColumnAdvancedExample,\n  TableTextColumnExample,\n  TableWithRipplesExample,\n  TableWrappedExample,\n  WrapperTable,\n};\n\nconst EXAMPLES = [\n  TableBasicExample,\n  TableColumnStylingExample,\n  TableDynamicArrayDataExample,\n  TableDynamicColumnsExample,\n  TableDynamicObservableDataExample,\n  TableExpandableRowsExample,\n  TableFilteringExample,\n  TableFlexBasicExample,\n  TableFooterRowExample,\n  TableGeneratedColumnsExample,\n  TableHarnessExample,\n  TableHttpExample,\n  TableMultipleHeaderFooterExample,\n  TableOverviewExample,\n  TablePaginationExample,\n  TableRecycleRowsExample,\n  TableReorderableExample,\n  TableRowBindingExample,\n  TableRowContextExample,\n  TableSelectionExample,\n  TableSortingExample,\n  TableStickyColumnsExample,\n  TableStickyComplexExample,\n  TableStickyComplexFlexExample,\n  TableStickyFooterExample,\n  TableStickyHeaderExample,\n  TableTextColumnAdvancedExample,\n  TableTextColumnExample,\n  TableWithRipplesExample,\n  TableWrappedExample,\n  WrapperTable,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatSortModule,\n    MatTableModule,\n    CdkTableModule,\n    DragDropModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class TableExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ELEMENT_DATA","observableOf"],"mappings":"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"}