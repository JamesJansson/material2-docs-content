{"version":3,"file":"snack-bar.mjs","sources":["../../../../../../../src/components-examples/material/snack-bar/snack-bar-component/snack-bar-component-example.ts","../../../../../../../src/components-examples/material/snack-bar/snack-bar-component/snack-bar-component-example.html","../../../../../../../src/components-examples/material/snack-bar/snack-bar-component/snack-bar-component-example-snack.html","../../../../../../../src/components-examples/material/snack-bar/snack-bar-overview/snack-bar-overview-example.ts","../../../../../../../src/components-examples/material/snack-bar/snack-bar-overview/snack-bar-overview-example.html","../../../../../../../src/components-examples/material/snack-bar/snack-bar-position/snack-bar-position-example.ts","../../../../../../../src/components-examples/material/snack-bar/snack-bar-position/snack-bar-position-example.html","../../../../../../../src/components-examples/material/snack-bar/snack-bar-harness/snack-bar-harness-example.ts","../../../../../../../src/components-examples/material/snack-bar/snack-bar-harness/snack-bar-harness-example.html","../../../../../../../src/components-examples/material/snack-bar/index.ts","../../../../../../../src/components-examples/material/snack-bar/snack-bar_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n/**\n * @title Snack-bar with a custom component\n */\n@Component({\n  selector: 'snack-bar-component-example',\n  templateUrl: 'snack-bar-component-example.html',\n  styleUrls: ['snack-bar-component-example.css'],\n})\nexport class SnackBarComponentExample {\n  durationInSeconds = 5;\n\n  constructor(private _snackBar: MatSnackBar) {}\n\n  openSnackBar() {\n    this._snackBar.openFromComponent(PizzaPartyComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [\n    `\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `,\n  ],\n})\nexport class PizzaPartyComponent {}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Snack bar duration (seconds)</mat-label>\n  <input type=\"number\" [(ngModel)]=\"durationInSeconds\" matInput>\n</mat-form-field>\n\n<button mat-stroked-button (click)=\"openSnackBar()\" aria-label=\"Show an example snack-bar\">\n  Pizza party\n</button>\n","<span class=\"example-pizza-party\">\n  Pizza party!!! üçï\n</span>\n","import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n/**\n * @title Basic snack-bar\n */\n@Component({\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snack-bar-overview-example.html',\n  styleUrls: ['snack-bar-overview-example.css'],\n})\nexport class SnackBarOverviewExample {\n  constructor(private _snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action);\n  }\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Message</mat-label>\n  <input matInput value=\"Disco party!\" #message>\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Action</mat-label>\n  <input matInput value=\"Dance\" #action>\n</mat-form-field>\n\n<button mat-stroked-button (click)=\"openSnackBar(message.value, action.value)\">Show snack-bar</button>\n","import {Component} from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n\n/**\n * @title Snack-bar with configurable position\n */\n@Component({\n  selector: 'snack-bar-position-example',\n  templateUrl: 'snack-bar-position-example.html',\n  styleUrls: ['snack-bar-position-example.css'],\n})\nexport class SnackBarPositionExample {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private _snackBar: MatSnackBar) {}\n\n  openSnackBar() {\n    this._snackBar.open('Cannonball!!', 'Splash', {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Horizontal position</mat-label>\n  <mat-select [(value)]=\"horizontalPosition\">\n    <mat-option value=\"start\">Start</mat-option>\n    <mat-option value=\"center\">Center</mat-option>\n    <mat-option value=\"end\">End</mat-option>\n    <mat-option value=\"left\">Left</mat-option>\n    <mat-option value=\"right\">Right</mat-option>\n  </mat-select>\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Vertical position</mat-label>\n  <mat-select [(value)]=\"verticalPosition\">\n    <mat-option value=\"top\">Top</mat-option>\n    <mat-option value=\"bottom\">Bottom</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<button mat-stroked-button (click)=\"openSnackBar()\" aria-label=\"Show an example snack-bar\">\n  Pool party!\n</button>\n","import {Component} from '@angular/core';\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\n\n/**\n * @title Testing with MatSnackBarHarness\n */\n@Component({\n  selector: 'snack-bar-harness-example',\n  templateUrl: 'snack-bar-harness-example.html',\n})\nexport class SnackBarHarnessExample {\n  constructor(readonly snackBar: MatSnackBar) {}\n\n  open(message: string, action = '', config?: MatSnackBarConfig) {\n    return this.snackBar.open(message, action, config);\n  }\n}\n","<ng-template>Hello from the snackbar</ng-template>\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {\n  PizzaPartyComponent,\n  SnackBarComponentExample,\n} from './snack-bar-component/snack-bar-component-example';\nimport {SnackBarOverviewExample} from './snack-bar-overview/snack-bar-overview-example';\nimport {SnackBarPositionExample} from './snack-bar-position/snack-bar-position-example';\nimport {SnackBarHarnessExample} from './snack-bar-harness/snack-bar-harness-example';\n\nexport {\n  SnackBarComponentExample,\n  SnackBarHarnessExample,\n  SnackBarOverviewExample,\n  SnackBarPositionExample,\n  PizzaPartyComponent,\n};\n\nconst EXAMPLES = [\n  SnackBarComponentExample,\n  SnackBarHarnessExample,\n  SnackBarOverviewExample,\n  SnackBarPositionExample,\n];\n\n@NgModule({\n  imports: [FormsModule, MatButtonModule, MatInputModule, MatSelectModule, MatSnackBarModule],\n  declarations: [...EXAMPLES, PizzaPartyComponent],\n  exports: EXAMPLES,\n})\nexport class SnackBarExamplesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3","i4","i2","i5"],"mappings":"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"}