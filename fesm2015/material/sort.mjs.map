{"version":3,"file":"sort.mjs","sources":["../../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.ts","../../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.html","../../../../../../../src/components-examples/material/sort/sort-harness/sort-harness-example.ts","../../../../../../../src/components-examples/material/sort/sort-harness/sort-harness-example.html","../../../../../../../src/components-examples/material/sort/index.ts","../../../../../../../src/components-examples/material/sort/sort_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {Sort} from '@angular/material/sort';\n\nexport interface Dessert {\n  calories: number;\n  carbs: number;\n  fat: number;\n  name: string;\n  protein: number;\n}\n\n/**\n * @title Sorting overview\n */\n@Component({\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n})\nexport class SortOverviewExample {\n  desserts: Dessert[] = [\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\n  ];\n\n  sortedData: Dessert[];\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name':\n          return compare(a.name, b.name, isAsc);\n        case 'calories':\n          return compare(a.calories, b.calories, isAsc);\n        case 'fat':\n          return compare(a.fat, b.fat, isAsc);\n        case 'carbs':\n          return compare(a.carbs, b.carbs, isAsc);\n        case 'protein':\n          return compare(a.protein, b.protein, isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<table matSort (matSortChange)=\"sortData($event)\">\n  <tr>\n    <th mat-sort-header=\"name\">Dessert (100g)</th>\n    <th mat-sort-header=\"calories\">Calories</th>\n    <th mat-sort-header=\"fat\">Fat (g)</th>\n    <th mat-sort-header=\"carbs\">Carbs (g)</th>\n    <th mat-sort-header=\"protein\">Protein (g)</th>\n  </tr>\n\n  <tr *ngFor=\"let dessert of sortedData\">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material/sort';\n\n/**\n * @title Testing with MatSortHarness\n */\n@Component({\n  selector: 'sort-harness-example',\n  templateUrl: 'sort-harness-example.html',\n})\nexport class SortHarnessExample {\n  disableThirdHeader = false;\n  desserts = [\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\n  ];\n\n  sortedData = this.desserts.slice();\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n    } else {\n      this.sortedData = data.sort((a, b) => {\n        const aValue = (a as any)[sort.active];\n        const bValue = (b as any)[sort.active];\n        return (aValue < bValue ? -1 : 1) * (sort.direction === 'asc' ? 1 : -1);\n      });\n    }\n  }\n}\n","<table matSort (matSortChange)=\"sortData($event)\">\n  <tr>\n    <th mat-sort-header=\"name\">Dessert</th>\n    <th mat-sort-header=\"calories\">Calories</th>\n    <th mat-sort-header=\"fat\" [disabled]=\"disableThirdHeader\">Fat</th>\n    <th mat-sort-header=\"carbs\">Carbs</th>\n    <th mat-sort-header=\"protein\">Protein</th>\n  </tr>\n\n  <tr *ngFor=\"let dessert of sortedData\">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatSortModule} from '@angular/material/sort';\nimport {SortOverviewExample} from './sort-overview/sort-overview-example';\nimport {SortHarnessExample} from './sort-harness/sort-harness-example';\n\nexport {SortHarnessExample, SortOverviewExample};\n\nconst EXAMPLES = [SortHarnessExample, SortOverviewExample];\n\n@NgModule({\n  imports: [CommonModule, MatSortModule],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class SortExamplesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}