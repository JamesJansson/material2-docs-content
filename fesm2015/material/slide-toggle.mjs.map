{"version":3,"file":"slide-toggle.mjs","sources":["../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-configurable/slide-toggle-configurable-example.ts","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-configurable/slide-toggle-configurable-example.html","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-forms/slide-toggle-forms-example.ts","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-forms/slide-toggle-forms-example.html","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-overview/slide-toggle-overview-example.ts","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-overview/slide-toggle-overview-example.html","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-harness/slide-toggle-harness-example.ts","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle-harness/slide-toggle-harness-example.html","../../../../../../../src/components-examples/material/slide-toggle/index.ts","../../../../../../../src/components-examples/material/slide-toggle/slide-toggle_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n\n/**\n * @title Configurable slide-toggle\n */\n@Component({\n  selector: 'slide-toggle-configurable-example',\n  templateUrl: 'slide-toggle-configurable-example.html',\n  styleUrls: ['slide-toggle-configurable-example.css'],\n})\nexport class SlideToggleConfigurableExample {\n  color: ThemePalette = 'accent';\n  checked = false;\n  disabled = false;\n}\n","<mat-card>\n  <mat-card-content>\n    <h2 class=\"example-h2\">Slider configuration</h2>\n\n    <section class=\"example-section\">\n      <label class=\"example-margin\">Color:</label>\n      <mat-radio-group [(ngModel)]=\"color\">\n        <mat-radio-button class=\"example-margin\" value=\"primary\">\n          Primary\n        </mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"accent\">\n          Accent\n        </mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"warn\">\n          Warn\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"result\">\n  <mat-card-content>\n    <h2 class=\"example-h2\">Result</h2>\n\n    <section class=\"example-section\">\n      <mat-slide-toggle\n          class=\"example-margin\"\n          [color]=\"color\"\n          [checked]=\"checked\"\n          [disabled]=\"disabled\">\n        Slide me!\n      </mat-slide-toggle>\n    </section>\n  </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Slide-toggle with forms\n */\n@Component({\n  selector: 'slide-toggle-forms-example',\n  templateUrl: './slide-toggle-forms-example.html',\n  styleUrls: ['./slide-toggle-forms-example.css'],\n})\nexport class SlideToggleFormsExample {\n  isChecked = true;\n  formGroup: FormGroup;\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      enableWifi: '',\n      acceptTerms: ['', Validators.requiredTrue],\n    });\n  }\n\n  onFormSubmit() {\n    alert(JSON.stringify(this.formGroup.value, null, 2));\n  }\n}\n","<p>Slide Toggle using a simple NgModel.</p>\n\n<mat-slide-toggle [(ngModel)]=\"isChecked\">Slide Toggle Checked: {{isChecked}}</mat-slide-toggle>\n\n<p>Slide Toggle inside of a Template-driven form</p>\n\n<form class=\"example-form\" #form=\"ngForm\" (ngSubmit)=\"onFormSubmit()\" ngNativeValidate>\n\n  <mat-slide-toggle ngModel name=\"enableWifi\">Enable Wifi</mat-slide-toggle>\n  <mat-slide-toggle ngModel name=\"acceptTerms\" required>Accept Terms of Service</mat-slide-toggle>\n\n  <button mat-raised-button type=\"submit\">Save Settings</button>\n</form>\n\n<p>Slide Toggle inside of a Reactive form</p>\n\n<form class=\"example-form\" [formGroup]=\"formGroup\" (ngSubmit)=\"onFormSubmit()\" ngNativeValidate>\n\n  <mat-slide-toggle formControlName=\"enableWifi\">Enable Wifi</mat-slide-toggle>\n  <mat-slide-toggle formControlName=\"acceptTerms\">Accept Terms of Service</mat-slide-toggle>\n\n  <p>Form Group Status: {{formGroup.status}}</p>\n\n  <button mat-raised-button type=\"submit\">Save Settings</button>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic slide-toggles\n */\n@Component({\n  selector: 'slide-toggle-overview-example',\n  templateUrl: 'slide-toggle-overview-example.html',\n})\nexport class SlideToggleOverviewExample {}\n","<mat-slide-toggle>Slide me!</mat-slide-toggle>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Testing with MatSlideToggleHarness\n */\n@Component({\n  selector: 'slide-toggle-harness-example',\n  templateUrl: 'slide-toggle-harness-example.html',\n})\nexport class SlideToggleHarnessExample {\n  disabled = true;\n  ctrl = new FormControl(true);\n}\n","<mat-slide-toggle\n    [formControl]=\"ctrl\"\n    name=\"first-name\">\n  First\n</mat-slide-toggle>\n<mat-slide-toggle [disabled]=\"disabled\">\n  Second\n</mat-slide-toggle>\n","import {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {SlideToggleConfigurableExample} from './slide-toggle-configurable/slide-toggle-configurable-example';\nimport {SlideToggleFormsExample} from './slide-toggle-forms/slide-toggle-forms-example';\nimport {SlideToggleOverviewExample} from './slide-toggle-overview/slide-toggle-overview-example';\nimport {SlideToggleHarnessExample} from './slide-toggle-harness/slide-toggle-harness-example';\n\nexport {\n  SlideToggleConfigurableExample,\n  SlideToggleFormsExample,\n  SlideToggleHarnessExample,\n  SlideToggleOverviewExample,\n};\n\nconst EXAMPLES = [\n  SlideToggleConfigurableExample,\n  SlideToggleFormsExample,\n  SlideToggleHarnessExample,\n  SlideToggleOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class SlideToggleExamplesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA;;;MAQa,8BAA8B;IAL3C;QAME,UAAK,GAAiB,QAAQ,CAAC;QAC/B,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;KAClB;;2HAJY,8BAA8B;+GAA9B,8BAA8B,yECX3C,o1CA4CA;2FDjCa,8BAA8B;kBAL1C,SAAS;+BACE,mCAAmC;;;AEJ/C;;;MAQa,uBAAuB;IAIlC,YAAY,WAAwB;QAHpC,cAAS,GAAG,IAAI,CAAC;QAIf,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;YACjC,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,YAAY,CAAC;SAC3C,CAAC,CAAC;KACJ;IAED,YAAY;QACV,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KACtD;;oHAbU,uBAAuB;wGAAvB,uBAAuB,kECXpC,wgCAyBA;2FDda,uBAAuB;kBALnC,SAAS;+BACE,4BAA4B;;;AELxC;;;MAOa,0BAA0B;;uHAA1B,0BAA0B;2GAA1B,0BAA0B,qECTvC,kDACA;2FDQa,0BAA0B;kBAJtC,SAAS;+BACE,+BAA+B;;;AEH3C;;;MAOa,yBAAyB;IAJtC;QAKE,aAAQ,GAAG,IAAI,CAAC;QAChB,SAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;KAC9B;;sHAHY,yBAAyB;0GAAzB,yBAAyB,oECVtC,oLAQA;2FDEa,yBAAyB;kBAJrC,SAAS;+BACE,8BAA8B;;;AEY1C,MAAM,QAAQ,GAAG;IACf,8BAA8B;IAC9B,uBAAuB;IACvB,yBAAyB;IACzB,0BAA0B;CAC3B,CAAC;MAgBW,yBAAyB;;sHAAzB,yBAAyB;uHAAzB,yBAAyB,iBApBpC,8BAA8B;QAC9B,uBAAuB;QACvB,yBAAyB;QACzB,0BAA0B,aAKxB,WAAW;QACX,eAAe;QACf,aAAa;QACb,iBAAiB;QACjB,cAAc;QACd,oBAAoB;QACpB,mBAAmB,aAdrB,8BAA8B;QAC9B,uBAAuB;QACvB,yBAAyB;QACzB,0BAA0B;uHAiBf,yBAAyB,YAb3B;YACP,WAAW;YACX,eAAe;YACf,aAAa;YACb,iBAAiB;YACjB,cAAc;YACd,oBAAoB;YACpB,mBAAmB;SACpB;2FAKU,yBAAyB;kBAdrC,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,WAAW;wBACX,eAAe;wBACf,aAAa;wBACb,iBAAiB;wBACjB,cAAc;wBACd,oBAAoB;wBACpB,mBAAmB;qBACpB;oBACD,YAAY,EAAE,QAAQ;oBACtB,OAAO,EAAE,QAAQ;oBACjB,eAAe,EAAE,QAAQ;iBAC1B;;;ACvCD;;;;;;"}