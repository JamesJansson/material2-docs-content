{"version":3,"file":"mdc-form-field.mjs","sources":["../../../../../../../src/components-examples/material-experimental/mdc-form-field/mdc-form-field-custom-control/form-field-custom-control-example.ts","../../../../../../../src/components-examples/material-experimental/mdc-form-field/mdc-form-field-custom-control/form-field-custom-control-example.html","../../../../../../../src/components-examples/material-experimental/mdc-form-field/mdc-form-field-custom-control/example-tel-input-example.html","../../../../../../../src/components-examples/material-experimental/mdc-form-field/index.ts","../../../../../../../src/components-examples/material-experimental/mdc-form-field/mdc-form-field_public_index.ts"],"sourcesContent":["import {FocusMonitor} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Component, ElementRef, Inject, Input, OnDestroy, Optional, Self} from '@angular/core';\nimport {ControlValueAccessor, FormBuilder, FormGroup, NgControl, Validators} from '@angular/forms';\nimport {MatFormField, MatFormFieldControl} from '@angular/material-experimental/mdc-form-field';\nimport {MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {Subject} from 'rxjs';\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'mdc-form-field-custom-control-example',\n  templateUrl: 'form-field-custom-control-example.html',\n})\nexport class MdcFormFieldCustomControlExample {}\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\n}\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'example-tel-input',\n  templateUrl: 'example-tel-input-example.html',\n  styleUrls: ['example-tel-input-example.css'],\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.example-floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n  }\n})\nexport class MyTelInput implements ControlValueAccessor, MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n\n  parts: FormGroup;\n  stateChanges = new Subject<void>();\n  focused = false;\n  errorState = false;\n  controlType = 'example-tel-input';\n  id = `example-tel-input-${MyTelInput.nextId++}`;\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  get empty() {\n    const {value: {area, exchange, subscriber}} = this.parts;\n\n    return !area && !exchange && !subscriber;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input('aria-describedby') userAriaDescribedBy: string;\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.parts.disable() : this.parts.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    if (this.parts.valid) {\n      const {value: {area, exchange, subscriber}} = this.parts;\n      return new MyTel(area, exchange, subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    const {area, exchange, subscriber} = tel || new MyTel('', '', '');\n    this.parts.setValue({area, exchange, subscriber});\n    this.stateChanges.next();\n  }\n\n  constructor(\n    formBuilder: FormBuilder,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\n    @Optional() @Self() public ngControl: NgControl) {\n\n    this.parts = formBuilder.group({\n      area: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      exchange: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      subscriber: [null, [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\n    });\n\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    const controlElement = this._elementRef.nativeElement\n      .querySelector('.example-tel-input-container')!;\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input')!.focus();\n    }\n  }\n\n  writeValue(tel: MyTel | null): void {\n    this.value = tel;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _handleInput(): void {\n    this.onChange(this.value);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Phone number</mat-label>\n  <example-tel-input required></example-tel-input>\n  <mat-icon matSuffix>phone</mat-icon>\n  <mat-hint>Include area code</mat-hint>\n</mat-form-field>\n","<div role=\"group\" class=\"example-tel-input-container\"\n     [formGroup]=\"parts\"\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\n  <input\n    class=\"example-tel-input-element\"\n    formControlName=\"area\" size=\"3\"\n    aria-label=\"Area code\"\n    (input)=\"_handleInput()\">\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input\n    class=\"example-tel-input-element\"\n    formControlName=\"exchange\"\n    size=\"3\"\n    aria-label=\"Exchange code\"\n    (input)=\"_handleInput()\">\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input\n    class=\"example-tel-input-element\"\n    formControlName=\"subscriber\"\n    size=\"4\"\n    aria-label=\"Subscriber number\"\n    (input)=\"_handleInput()\">\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material-experimental/mdc-form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  MdcFormFieldCustomControlExample,\n  MyTelInput\n} from './mdc-form-field-custom-control/form-field-custom-control-example';\n\nexport {\n  MdcFormFieldCustomControlExample,\n  MyTelInput,\n};\n\nconst EXAMPLES = [\n  MdcFormFieldCustomControlExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [...EXAMPLES, MyTelInput],\n  exports: [...EXAMPLES, MyTelInput],\n  entryComponents: EXAMPLES,\n})\nexport class MdcFormFieldExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}